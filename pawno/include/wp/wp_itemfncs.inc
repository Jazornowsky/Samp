stock ItemPrice(itemtype, itemid)
{
	if(itemtype == 1)
	{
		if(itemid == 1) // ³om
			return 0;
		if(itemid == 2) // kostka
			return 0;
		if(itemid == 3) // karta kredytowa TODO: move it to type 3
			return 0;
		if(itemid == 4) // ksi¹¿ka telefoniczna
			return 0;
		if(itemid == 5) // plecak
			return 0;
		if(itemid == 6) // rakieta
			return 0;
		if(itemid == 7) // ¿arówka H7
			return 0;
		if(itemid == 8) // zestaw fajerwerków
			return 0;
		if(itemid == 9) // baton WParty
			return 0;
		if(itemid == 10) // hak holowniczy
			return 0;
		if(itemid == 11) // alarm
			return 0;
		if(itemid == 12) // cygaro
			return 0;
		if(itemid == 13) // granat
			return 0;
		if(itemid == 14) // gas pieprzowy
			return 0;
		if(itemid == 15) // koktail mo³otowa
			return 0;
		if(itemid == 16) // pistolet 9mm
			return 950;
		if(itemid == 17) // pistolet 9mm z t³umikiem
			return 1050;
		if(itemid == 18) // pistolet Desert Eagle
			return 7000;
		if(itemid == 19) // shotgun
			return 4000;
		if(itemid == 20) // obrzyn
			return 0;
		if(itemid == 21) // shotgun bojowy
			return 0;
		if(itemid == 22) // pistolet maszynowy micro SMG
			return 4500;
		if(itemid == 23) // pistolet maszynowy MP5
			return 5000;
		if(itemid == 24) // karabinek AK-47
			return 7000;
		if(itemid == 25) // karabinek M4
			return 5000;
		if(itemid == 26) // tec9
			return 4500;
		if(itemid == 27) // karabin
			return 4000;
		if(itemid == 28) // karabin snajperski
			return 11000;
		if(itemid == 29) // wyrzutnia rakiet
			return 0;
		if(itemid == 30) // wyrzutnia rakiet z HS
			return 0;
		if(itemid == 31) // miotacz ognia
			return 0;
		if(itemid == 32) // minigun
			return 0;
		if(itemid == 33) // ³adunek wybuchowy
			return 0;
		if(itemid == 34) // spray
			return 0;
		if(itemid == 35) // gaœnica
			return 0;
		if(itemid == 36) // nabój 9mm
			return 4;
		if(itemid == 37) // nabój .50AE
			return 20;
		if(itemid == 38) // œrut
			return 10;
		if(itemid == 39) // nabój 7.62mm
			return 10;
		if(itemid == 40) // nabój 12.7mm
			return 50;
		if(itemid == 41) // KGP 66mm
			return 0;
		if(itemid == 42) // napalm
			return 0;
		if(itemid == 43) // pocisk pistol
			return 1;
		if(itemid == 44) // ³uska pistol
			return 1;
		if(itemid == 45) // proch pistol
			return 1;
		if(itemid == 46) // sp³onka pistol
			return 1;
		if(itemid == 47) // o³ów strzelb
			return 6;
		if(itemid == 48) // szkielet broni
			return 400;
		if(itemid == 49) // zespó³ zamka
			return 300;
		if(itemid == 50) // magazynek
			return 200;
		if(itemid == 51) // sprê¿yna powrotna
			return 40;
		if(itemid == 52) // komplet œrubek
			return 10;
		if(itemid == 53) // szkielet broni karabinowej
			return 1200;
		if(itemid == 54) // zespó³ zamka karabinu
			return 800;
		if(itemid == 55) // magazynek karabinu
			return 500;
		if(itemid == 56) // sprê¿yna powrotna karabinu
			return 40;
		if(itemid == 57) // kolba
			return 100;
		if(itemid == 58) // komplet œrubek karabinu
			return 10;
		if(itemid == 59) // t³umik
			return 100;
		if(itemid == 60) // luneta
			return 1000;
		if(itemid == 61) // lufa
			return 200;
		if(itemid == 62) // mechanizm spustowo-uderzeniowy
			return 100;
		if(itemid == 63) // nak³adki z tworzywa sztucznego
			return 100;
		if(itemid == 64) // mechanizm iglicy
			return 150;
		if(itemid == 65) // bezpiecznik typu listkowego
			return 100;
		if(itemid == 66) // przyrz¹dy celownicze
			return 50;
		if(itemid == 67) // szkielet
			return 70;
		if(itemid == 68) // stopka
			return 40;
		if(itemid == 69) // wew. sprê¿yna
			return 30;
		if(itemid == 70) // dosy³acz
			return 60;
		if(itemid == 71) // lufa karabinu
			return 600;
		if(itemid == 72) // mechanizm spustowo-uderzeniowy karabinu
			return 400;
		if(itemid == 73) // mechanizm iglicy karabinu
			return 450;
		if(itemid == 74) // bezpiecznik typu listkowego karabinu
			return 250;
		if(itemid == 75) // przyrz¹dy celownicze karabinu
			return 100;
		if(itemid == 76) // szkielet karabinu
			return 180;
		if(itemid == 77) // stopka karabinu
			return 110;
		if(itemid == 78) // wew. sprê¿yna karabinu
			return 60;
		if(itemid == 79) // dosy³acz karabinu
			return 150;
		if(itemid == 80) // szkielet lunety
			return 400;
		if(itemid == 81) // soczewki
			return 600;
		if(itemid == 82) // zestaw monta¿owy Tec9
			return 2150;
		if(itemid == 83) // skrzynka monta¿owa MP5
			return 350;
		if(itemid == 84) // zestaw monta¿owy AK-47
			return 150;
		if(itemid == 85) // skrzynka monta¿owa M4
			return 650;
		if(itemid == 86) // rêkojeœæ prze³adowania
			return 70;
		if(itemid == 87) // carbon
			return 4310;
		if(itemid == 88) // skrzynka monta¿owa karabinu
			return 150;
		if(itemid == 89) // siatka maskuj¹ca
			return 2700;
		if(itemid == 90) // luska strzelb
			return 1;
		if(itemid == 91) // proch strzelb
			return 2;
		if(itemid == 92) // splonka strzelb
			return 1;
		if(itemid == 93) // pocisk karab
			return 4;
		if(itemid == 94) // luska karab
			return 2;
		if(itemid == 95) // proch karab
			return 2;
		if(itemid == 96) // splonka karab
			return 2;
		if(itemid == 97) // pocisk snajp
			return 25;
		if(itemid == 98) // luska snajp
			return 10;
		if(itemid == 99) // proch snajp
			return 10;
		if(itemid == 100) // splonka snajp
			return 5;
		if(itemid == 101) // pocisk des eagle
			return 10;
		if(itemid == 102) // luska des eagle
			return 5;
		if(itemid == 103) // proch des eagle
			return 2;
		if(itemid == 104) // splonka des eagle
			return 2;
		if(itemid == 105) // mapa
			return 4;
		if(itemid == 106) // radio
			return 26;
	}
	return 0;
}

stock ItemsOnVehicleSlot(itemtype, itemid)
{
	if(itemtype == 1)
	{
		switch(itemid)
		{
			case 1: return 4;
			case 2: return 40;
			case 3: return 1;
			case 4: return 10;
			case 5: return 10;
			case 6: return 20;
			case 7: return 30;
			case 8: return 15;
			case 9: return 40;
			case 10: return 3;
			case 11: return 10;
			case 12: return 25;
			case 13: return 30;
			case 14: return 30;
			case 15: return 15;
			case 16: return 10;
			case 17: return 8;
			case 18: return 10;
			case 19: return 6;
			case 20: return 6;
			case 21: return 6;
			case 22: return 10;
			case 23: return 7;
			case 24: return 5;
			case 25: return 5;
			case 26: return 10;
			case 27: return 5;
			case 28: return 3;
			case 29: return 1;
			case 30: return 1;
			case 31: return 1;
			case 32: return 1;
			case 33: return 15;
			case 34: return 30;
			case 35: return 15;
			case 105: return 15;
			case 106: return 5;
			default: return 100;
		}
	}
	return 1;
}	

stock ItemsOnCharacterSlot(itemtype, itemid)
{
	if(itemtype == 1)
	{
		switch(itemid)
		{
			case 1: return 1;
			case 2: return 7;
			case 3: return 1;
			case 4: return 2;
			case 5: return 1;
			case 6: return 1;
			case 7: return 2;
			case 8: return 1;
			case 9: return 15;
			case 10: return 1;
			case 11: return 1;
			case 12: return 5;
			case 13: return 2;
			case 14: return 2;
			case 15: return 1;
			case 16: return 3;
			case 17: return 3;
			case 18: return 3;
			case 19: return 1;
			case 20: return 1;
			case 21: return 1;
			case 22: return 2;
			case 23: return 1;
			case 24: return 1;
			case 25: return 1;
			case 26: return 2;
			case 27: return 1;
			case 28: return 1;
			case 29: return 1;
			case 30: return 1;
			case 31: return 1;
			case 32: return 1;
			case 33: return 1;
			case 34: return 4;
			case 35: return 1;
			case 105: return 3;
			case 106: return 1;
			default: return 100;
		}
	}
	return 1;
}

stock ItemName(itemtype, itemid)
{
	new string[64];
	if(itemtype == 1)
	{
		if(itemid == 1)
		{
			format(string, sizeof(string), "{A0C544}³om{FFFFFF}");
			return string;
		}
		if(itemid == 2)
		{
			format(string, sizeof(string), "{A0C544}kostka{FFFFFF}");
			return string;
		}
		if(itemid == 3)
		{
			format(string, sizeof(string), "{6698FF}karta kredytowa{FFFFFF}");
			return string;
		}
		if(itemid == 4)
		{
			format(string, sizeof(string), "{A0C544}ksi¹¿ka telefoniczna{FFFFFF}");
			return string;
		}
		if(itemid == 5)
		{
			format(string, sizeof(string), "{A0C544}plecak{FFFFFF}");
			return string;
		}
		if(itemid == 6)
		{
			format(string, sizeof(string), "{A0C544}rakieta{FFFFFF}");
			return string;
		}
		if(itemid == 7)
		{
			format(string, sizeof(string), "{FFF380}¿arówka H7{FFFFFF}");
			return string;
		}
		if(itemid == 8)
		{
			format(string, sizeof(string), "{A0C544}zestaw fajerwerków{FFFFFF}");
			return string;
		}
		if(itemid == 9)
		{
			format(string, sizeof(string), "{A0C544}baton WParty{FFFFFF}");
			return string;
		}
		if(itemid == 10)
		{
			format(string, sizeof(string), "{FFF380}hak holowniczy{FFFFFF}");
			return string;
		}
		if(itemid == 11)
		{
			format(string, sizeof(string), "{FFF380}alarm{FFFFFF}");
			return string;
		}
		if(itemid == 12)
		{
			format(string, sizeof(string), "{A0C544}cygaro{FFFFFF}");
			return string;
		}
		if(itemid == 13)
		{
			format(string, sizeof(string), "{7E2217}granat{FFFFFF}");
			return string;
		}
		if(itemid == 14)
		{
			format(string, sizeof(string), "{7E2217}gas pieprzowy{FFFFFF}");
			return string;
		}
		if(itemid == 15)
		{
			format(string, sizeof(string), "{7E2217}koktail mo³otowa{FFFFFF}");
			return string;
		}
		if(itemid == 16)
		{
			format(string, sizeof(string), "{663399}pistolet 9mm{FFFFFF}");
			return string;
		}
		if(itemid == 17)
		{
			format(string, sizeof(string), "{663399}pistolet 9mm z t³umikiem{FFFFFF}");
			return string;
		}
		if(itemid == 18)
		{
			format(string, sizeof(string), "{663399}pistolet Desert Eagle{FFFFFF}");
			return string;
		}
		if(itemid == 19)
		{
			format(string, sizeof(string), "{663399}shotgun{FFFFFF}");
			return string;
		}
		if(itemid == 20)
		{
			format(string, sizeof(string), "{663399}obrzyn{FFFFFF}");
			return string;
		}
		if(itemid == 21)
		{
			format(string, sizeof(string), "{663399}shotgun bojowy{FFFFFF}");
			return string;
		}
		if(itemid == 22)
		{
			format(string, sizeof(string), "{663399}pistolet maszynowy micro SMG{FFFFFF}");
			return string;
		}
		if(itemid == 23)
		{
			format(string, sizeof(string), "{663399}pistolet maszynowy MP5{FFFFFF}");
			return string;
		}
		if(itemid == 24)
		{
			format(string, sizeof(string), "{663399}karabinek AK-47{FFFFFF}");
			return string;
		}
		if(itemid == 25)
		{
			format(string, sizeof(string), "{663399}karabinek M4{FFFFFF}");
			return string;
		}
		if(itemid == 26)
		{
			format(string, sizeof(string), "{663399}Tec9{FFFFFF}");
			return string;
		}
		if(itemid == 27)
		{
			format(string, sizeof(string), "{663399}karabin{FFFFFF}");
			return string;
		}
		if(itemid == 28)
		{
			format(string, sizeof(string), "{663399}karabin snajperski{FFFFFF}");
			return string;
		}
		if(itemid == 29)
		{
			format(string, sizeof(string), "{663399}wyrzutnia rakiet{FFFFFF}");
			return string;
		}
		if(itemid == 30)
		{
			format(string, sizeof(string), "{663399}wyrzutnia rakiet z HS{FFFFFF}");
			return string;
		}
		if(itemid == 31)
		{
			format(string, sizeof(string), "{663399}miotacz ognia{FFFFFF}");
			return string;
		}
		if(itemid == 32)
		{
			format(string, sizeof(string), "{663399}minigun{FFFFFF}");
			return string;
		}
		if(itemid == 33)
		{
			format(string, sizeof(string), "{663399}³adunek wybuchowy{FFFFFF}");
			return string;
		}
		if(itemid == 34)
		{
			format(string, sizeof(string), "{663399}spray{FFFFFF}");
			return string;
		}
		if(itemid == 35)
		{
			format(string, sizeof(string), "{663399}gaœnica{FFFFFF}");
			return string;
		}
		if(itemid == 36)
		{
			format(string, sizeof(string), "{6633DD}nabój 9mm{FFFFFF}");
			return string;
		}
		if(itemid == 37)
		{
			format(string, sizeof(string), "{6633DD}nabój .50 AE{FFFFFF}");
			return string;
		}
		if(itemid == 38)
		{
			format(string, sizeof(string), "{6633DD}œrut{FFFFFF}");
			return string;
		}
		if(itemid == 39)
		{
			format(string, sizeof(string), "{6633DD}nabój 7.62mm{FFFFFF}");
			return string;
		}
		if(itemid == 40)
		{
			format(string, sizeof(string), "{6633DD}nabój 12.7mm{FFFFFF}");
			return string;
		}
		if(itemid == 41)
		{
			format(string, sizeof(string), "{6633DD}KGP 66mm{FFFFFF}");
			return string;
		}
		if(itemid == 42)
		{
			format(string, sizeof(string), "{6633DD}napalm{FFFFFF}");
			return string;
		}
		if(itemid == 43)
		{
			format(string, sizeof(string), "{995500}pocisk 9mm{FFFFFF}");
			return string;
		}
		if(itemid == 44)
		{
			format(string, sizeof(string), "{995500}³uska 9mm{FFFFFF}");
			return string;
		}
		if(itemid == 45)
		{
			format(string, sizeof(string), "{995500}proch admidowy{FFFFFF}");
			return string;
		}
		if(itemid == 46)
		{
			format(string, sizeof(string), "{995500}sp³onka 9mm{FFFFFF}");
			return string;
		}
		if(itemid == 47)
		{
			format(string, sizeof(string), "{995500}o³ów{FFFFFF}");
			return string;
		}
		if(itemid == 48)
		{
			format(string, sizeof(string), "{995500}szkielet broni{FFFFFF}");
			return string;
		}
		if(itemid == 49)
		{
			format(string, sizeof(string), "{995500}zespó³ zamka{FFFFFF}");
			return string;
		}
		if(itemid == 50)
		{
			format(string, sizeof(string), "{995500}magazynek{FFFFFF}");
			return string;
		}
		if(itemid == 51)
		{
			format(string, sizeof(string), "{995500}sprê¿yna powrotna{FFFFFF}");
			return string;
		}
		if(itemid == 52)
		{
			format(string, sizeof(string), "{995500}komplet œrubek{FFFFFF}");
			return string;
		}
		if(itemid == 53)
		{
			format(string, sizeof(string), "{995500}szkielet broni karabinowej{FFFFFF}");
			return string;
		}
		if(itemid == 54)
		{
			format(string, sizeof(string), "{995500}zespó³ zamka karabinu{FFFFFF}");
			return string;
		}
		if(itemid == 55)
		{
			format(string, sizeof(string), "{995500}magazynek karabinu{FFFFFF}");
			return string;
		}
		if(itemid == 56)
		{
			format(string, sizeof(string), "{995500}sprê¿yna powrotna karabinu{FFFFFF}");
			return string;
		}
		if(itemid == 57)
		{
			format(string, sizeof(string), "{995500}kolba{FFFFFF}");
			return string;
		}
		if(itemid == 58)
		{
			format(string, sizeof(string), "{995500}komplet œrubek karabinu{FFFFFF}");
			return string;
		}
		if(itemid == 59)
		{
			format(string, sizeof(string), "{995500}t³umik{FFFFFF}");
			return string;
		}
		if(itemid == 60)
		{
			format(string, sizeof(string), "{995500}luneta{FFFFFF}");
			return string;
		}
		if(itemid == 61)
		{
			format(string, sizeof(string), "{99AA00}lufa{FFFFFF}");
			return string;
		}
		if(itemid == 62)
		{
			format(string, sizeof(string), "{99AA00}mechanizm spustowo-uderzeniowy{FFFFFF}");
			return string;
		}
		if(itemid == 63)
		{
			format(string, sizeof(string), "{99AA00}nak³adki z tworzywa sztucznego{FFFFFF}");
			return string;
		}
		if(itemid == 64)
		{
			format(string, sizeof(string), "{99AA00}mechanizm iglicy{FFFFFF}");
			return string;
		}
		if(itemid == 65)
		{
			format(string, sizeof(string), "{99AA00}bezpiecznik typu listkowego{FFFFFF}");
			return string;
		}
		if(itemid == 66)
		{
			format(string, sizeof(string), "{99AA00}przyrz¹dy celownicze{FFFFFF}");
			return string;
		}
		if(itemid == 67)
		{
			format(string, sizeof(string), "{99AA00}szkielet{FFFFFF}");
			return string;
		}
		if(itemid == 68)
		{
			format(string, sizeof(string), "{99AA00}stopka{FFFFFF}");
			return string;
		}
		if(itemid == 69)
		{
			format(string, sizeof(string), "{99AA00}wew. sprê¿yna{FFFFFF}");
			return string;
		}
		if(itemid == 70)
		{
			format(string, sizeof(string), "{99AA00}dosy³acz{FFFFFF}");
			return string;
		}
		if(itemid == 71)
		{
			format(string, sizeof(string), "{99AA00}lufa karabinu{FFFFFF}");
			return string;
		}
		if(itemid == 72)
		{
			format(string, sizeof(string), "{99AA00}mechanizm spustowo-uderzeniowy karabinu{FFFFFF}");
			return string;
		}
		if(itemid == 73)
		{
			format(string, sizeof(string), "{99AA00}mechanizm iglicy karabinu{FFFFFF}");
			return string;
		}
		if(itemid == 74)
		{
			format(string, sizeof(string), "{99AA00}bezpiecznik typu listkowego karabinu{FFFFFF}");
			return string;
		}
		if(itemid == 75)
		{
			format(string, sizeof(string), "{99AA00}przyrz¹dy celownicze karabinu{FFFFFF}");
			return string;
		}
		if(itemid == 76)
		{
			format(string, sizeof(string), "{99AA00}szkielet karabinu{FFFFFF}");
			return string;
		}
		if(itemid == 77)
		{
			format(string, sizeof(string), "{99AA00}stopka karabinu{FFFFFF}");
			return string;
		}
		if(itemid == 78)
		{
			format(string, sizeof(string), "{99AA00}wew. sprê¿yna karabinu{FFFFFF}");
			return string;
		}
		if(itemid == 79)
		{
			format(string, sizeof(string), "{99AA00}dosy³acz karabinu{FFFFFF}");
			return string;
		}
		if(itemid == 80)
		{
			format(string, sizeof(string), "{99AA00}szkielet lunety{FFFFFF}");
			return string;
		}
		if(itemid == 81)
		{
			format(string, sizeof(string), "{99AA00}soczewki{FFFFFF}");
			return string;
		}
		if(itemid == 82)
		{
			format(string, sizeof(string), "{99AA00}zestaw monta¿owy Tec9{FFFFFF}");
			return string;
		}
		if(itemid == 83)
		{
			format(string, sizeof(string), "{99AA00}skrzynka monta¿owa MP5{FFFFFF}");
			return string;
		}
		if(itemid == 84)
		{
			format(string, sizeof(string), "{99AA00}zestaw monta¿owy AK-47{FFFFFF}");
			return string;
		}
		if(itemid == 85)
		{
			format(string, sizeof(string), "{99AA00}skrzynka monta¿owa M4{FFFFFF}");
			return string;
		}
		if(itemid == 86)
		{
			format(string, sizeof(string), "{99AA00}rêkojeœæ prze³adowania{FFFFFF}");
			return string;
		}
		if(itemid == 87)
		{
			format(string, sizeof(string), "{99AA00}carbon{FFFFFF}");
			return string;
		}
		if(itemid == 88)
		{
			format(string, sizeof(string), "{99AA00}skrzynka monta¿owa karabinu{FFFFFF}");
			return string;
		}
		if(itemid == 89)
		{
			format(string, sizeof(string), "{99AA00}siatka maskuj¹ca{FFFFFF}");
			return string;
		}
		if(itemid == 90)
		{
			format(string, sizeof(string), "{99AA00}³uska do strzelby{FFFFFF}");
			return string;
		}
		if(itemid == 91)
		{
			format(string, sizeof(string), "{99AA00}proch œwiszcz¹cy{FFFFFF}");
			return string;
		}
		if(itemid == 92)
		{
			format(string, sizeof(string), "{99AA00}sp³onka do strzelby{FFFFFF}");
			return string;
		}
		if(itemid == 93)
		{
			format(string, sizeof(string), "{99AA00}pocisk 7.62mm{FFFFFF}");
			return string;
		}
		if(itemid == 94)
		{
			format(string, sizeof(string), "{99AA00}luska 7.62mm{FFFFFF}");
			return string;
		}
		if(itemid == 95)
		{
			format(string, sizeof(string), "{99AA00}proch czarny{FFFFFF}");
			return string;
		}
		if(itemid == 96)
		{
			format(string, sizeof(string), "{99AA00}sp³onka 7.62mm{FFFFFF}");
			return string;
		}
		if(itemid == 97)
		{
			format(string, sizeof(string), "{99AA00}pocisk 12.7mm{FFFFFF}");
			return string;
		}
		if(itemid == 98)
		{
			format(string, sizeof(string), "{99AA00}luska 12.7mm{FFFFFF}");
			return string;
		}
		if(itemid == 99)
		{
			format(string, sizeof(string), "{99AA00}proch bobinit{FFFFFF}");
			return string;
		}
		if(itemid == 100)
		{
			format(string, sizeof(string), "{99AA00}sp³onka 12.7mm{FFFFFF}");
			return string;
		}
		if(itemid == 101)
		{
			format(string, sizeof(string), "{99AA00}pocisk .50AE{FFFFFF}");
			return string;
		}
		if(itemid == 102)
		{
			format(string, sizeof(string), "{99AA00}luska .50AE{FFFFFF}");
			return string;
		}
		if(itemid == 103)
		{
			format(string, sizeof(string), "{99AA00}proch ignis volatilis{FFFFFF}");
			return string;
		}
		if(itemid == 104)
		{
			format(string, sizeof(string), "{99AA00}sp³onka .50AE{FFFFFF}");
			return string;
		}
		if(itemid == 105)
		{
			format(string, sizeof(string), "{A0C544}Mapa San Andreas{FFFFFF}");
			return string;
		}
		if(itemid == 106)
		{
			format(string, sizeof(string), "{A0C544}Radioodbiornik{FFFFFF}");
			return string;
		}
	}
	if(itemtype == 2)
	{
		format(string, sizeof(string), "{E56717}kluczyki do pojazdu o nr rejestracyjnym: %d{FFFFFF}", itemid);
		return string;
	}
	if(itemtype == 3)
	{
		if(itemid == 1)
		{
			format(string, sizeof(string), "{A0C544}kanister{FFFFFF}");
			return string;
		}
		if(itemid == 2)
		{
			format(string, sizeof(string), "{A0C544}krótkofalówka{FFFFFF}");
			return string;
		}
		if(itemid == 3)
		{
			format(string, sizeof(string), "{A0C544}telefon bez radia FM{FFFFFF}");
			return string;
		}
		if(itemid == 4)
		{
			format(string, sizeof(string), "{A0C544}telefon z radiem FM{FFFFFF}");
			return string;
		}
		if(itemid == 5)
		{
			format(string, sizeof(string), "{6698FF}dowód{FFFFFF}");
			return string;
		}
		if(itemid == 6)
		{
			format(string, sizeof(string), "{6698FF}prawko{FFFFFF}");
			return string;
		}
		if(itemid == 7)
		{
			format(string, sizeof(string), "{7E2217}okulary{FFFFFF}");
			return string;
		}
		if(itemid == 8)
		{
			format(string, sizeof(string), "{FFF380}linka holownicza{FFFFFF}");
			return string;
		}
		if(itemid == 9)
		{
			format(string, sizeof(string), "{7E2217}czapka{FFFFFF}");
			return string;
		}
		if(itemid == 10)
		{
			format(string, sizeof(string), "{7E2217}kupon Szczêœliwej Loterii{FFFFFF}");
			return string;
		}
	}
	if(itemtype == 4)
	{
		format(string, sizeof(string), "{C35617}kluczyki do domu/gara¿u od id: %d{FFFFFF}", itemid);
		return string;
	}
	if(itemtype == 0)
	{
		format(string, sizeof(string), "slot pusty{FFFFFF}");
		return string;
	}
	format(string, sizeof(string), "przedmiot nieznanego pochodzenia{FFFFFF}");
	return string;
}

stock ItemWeight(itemtype, itemid)
{
	if(itemtype == 1)
	{
		if(itemid == 1) // ³om
			return 15000;
		if(itemid == 2) // kostka
			return  30;
		if(itemid == 3) // karta kredytowa
			return  20;
		if(itemid == 4) // ksi¹¿ka telefoniczna
			return  500;
		if(itemid == 5) // plecak
			return  700;
		if(itemid == 6) // rakieta
			return 5000;
		if(itemid == 7) // ¿arówka H7
			return  400;
		if(itemid == 8) // zestaw fajerwerków
			return  30000;
		if(itemid == 9) // baton WParty
			return  200;
		if(itemid == 10) // hak holowniczy
			return  4000;
		if(itemid == 11) // alarm
			return  950;
		if(itemid == 12) // cygaro
			return  25;
		if(itemid == 13) // granat
			return 440;
		if(itemid == 14) // gas pieprzowy
			return 50;
		if(itemid == 15) // koktail mo³otowa
			return 150;
		if(itemid == 16) // pistolet 9mm
			return 955;
		if(itemid == 17) // pistolet 9mm z t³umikiem
			return 1055;
		if(itemid == 18) // pistolet Desert Eagle
			return 1700;
		if(itemid == 19) // shotgun
			return 2900;
		if(itemid == 20) // obrzyn
			return 2040;
		if(itemid == 21) // shotgun bojowy
			return 3000;
		if(itemid == 22) // pistolet maszynowy micro SMG
			return 2600;
		if(itemid == 23) // pistolet maszynowy MP5
			return 3080;
		if(itemid == 24) // karabinek AK-47
			return 4050;
		if(itemid == 25) // karabinek M4
			return 3100;
		if(itemid == 26) // tec9
			return 1300;
		if(itemid == 27) // karabin
			return 1500;
		if(itemid == 28) // karabin snajperski
			return 4300;
		if(itemid == 29) // wyrzutnia rakiet
			return 7000;
		if(itemid == 30) // wyrzutnia rakiet z HS
			return 7500;
		if(itemid == 31) // miotacz ognia
			return 1200; 
		if(itemid == 32) // minigun
			return 15000;
		if(itemid == 33) // ³adunek wybuchowy
			return 500;
		if(itemid == 34) // spray
			return 100;
		if(itemid == 35) // gaœnica
			return 1100;
		if(itemid == 36) // nabój 9mm
			return 7;
		if(itemid == 37) // nabój .50 AE
			return 19;
		if(itemid == 38) // œrut
			return 36;
		if(itemid == 39) // nabój 7.62mm
			return 15;
		if(itemid == 40) // nabój 12.7mm
			return 50;
		if(itemid == 41) // KGP 66mm (kumulacyjny pocisk rakietowy)
			return 50;
		if(itemid == 42) // napalm
			return 0;
		if(itemid == 43) // pocisk pistol
			return 0;
		if(itemid == 44) // ³uska pistol
			return 0;
		if(itemid == 45) // proch pistol
			return 0;
		if(itemid == 46) // sp³onka pistol
			return 0;
		if(itemid == 47) // o³ów
			return 0;
		if(itemid == 48) // szkielet broni
			return 240;
		if(itemid == 49) // zespó³ zamka
			return 180;
		if(itemid == 50) // magazynke
			return 120;
		if(itemid == 51) // sprê¿yna powrotna
			return 25;
		if(itemid == 52) // komplet œrubek
			return 10;
		if(itemid == 53) // szkielet broni karabinowej
			return 1000;
		if(itemid == 54) // zespó³ zamka karabinu
			return 800;
		if(itemid == 55) // magazynek karabinu
			return 300;
		if(itemid == 56) // sprê¿yna powrotna karabinu
			return 40;
		if(itemid == 57) // kolba
			return 200;
		if(itemid == 58) // komplet œrubek karabinu
			return 10;
		if(itemid == 59) // t³umik
			return 0;
		if(itemid == 60) // luneta
			return 500;
		if(itemid == 61) // lufa
			return 120;
		if(itemid == 62) // mechanizm spustowo-uderzeniowy
			return 60;
		if(itemid == 63) // nak³adki z tworzywa sztucznego
			return 60;
		if(itemid == 64) // mechanizm iglicy
			return 115;
		if(itemid == 65) // bezpiecznik typu listkowego
			return 60;
		if(itemid == 66) // przyrz¹dy celownicze
			return 40;
		if(itemid == 67) // szkielet
			return 55;
		if(itemid == 68) // stopka
			return 25;
		if(itemid == 69) // wew. sprê¿yna
			return 25;
		if(itemid == 70) // dosy³acz
			return 35;
		if(itemid == 71) // lufa karabinu
			return 400;
		if(itemid == 72) // mechanizm spustowo-uderzeniowy karabinu
			return 300;
		if(itemid == 73) // mechanizm iglicy karabinu
			return 350;
		if(itemid == 74) // bezpiecznik typu listkowego karabinu
			return 250;
		if(itemid == 75) // przyrz¹dy celownicze karabinu
			return 200;
		if(itemid == 76) // szkielet karabinu
			return 90;
		if(itemid == 77) // stopka karabinu
			return 70;
		if(itemid == 78) // wew. sprê¿yna karabinu
			return 40;
		if(itemid == 79) // dosy³acz karabinu
			return 100;
		if(itemid == 80) // szkielet lunety
			return 250;
		if(itemid == 81) // soczewki
			return 250;
		if(itemid == 82) // zestaw monta¿owy Tec9
			return 10;
		if(itemid == 83) // skrzynka monta¿owa MP5
			return 730;
		if(itemid == 84) // zestaw monta¿owy AK-47
			return 610;
		if(itemid == 85) // skrzynka monta¿owa M4
			return 200;
		if(itemid == 86) // rêkojeœæ prze³adowania
			return 870;
		if(itemid == 87) // carbon
			return 80;
		if(itemid == 88) // skrzynka monta¿owa karabinu
			return 300;
		if(itemid == 89) // siatka maskuj¹ca
			return 100;
		if(itemid == 90) // luska strzelb
			return 10;
		if(itemid == 91) // proch 5gr
			return 5;
		if(itemid == 92) // splonka strzelb
			return 1;
		if(itemid == 93) // pocisk karab
			return 7;
		if(itemid == 94) // luska karab
			return 3;
		if(itemid == 95) // proch 3gr
			return 3;
		if(itemid == 96) // splonka karab
			return 2;
		if(itemid == 97) // pocisk snajp
			return 25;
		if(itemid == 98) // luska snajp
			return 10;
		if(itemid == 99) // proch 10gr
			return 10;
		if(itemid == 100) // splonka snajp
			return 5;
		if(itemid == 101) // pocisk .50AE
			return 9;
		if(itemid == 102) // luska .50AE
			return 5;
		if(itemid == 103) //  proch 2gr
			return 2;
		if(itemid == 104) // splonka .50AE
			return 2;
		if(itemid == 105) // mapa
			return 5;
		if(itemid == 106) // radioodiornik
			return 1200;
	}
	if(itemtype == 2)
	{
		return  45;
	}
	if(itemtype == 3)
	{
		if(itemid == 1)
		{
			return 22000;
		}
		if(itemid == 2)
		{
			return 600;
		}
		if(itemid == 3)
		{
			return 300;
		}
		if(itemid == 4)
		{
			return 350;
		}
		if(itemid == 5)
		{
			return 20;
		}
		if(itemid == 6)
		{
			return 20;
		}
		if(itemid == 7)
		{
			return 50;
		}
		if(itemid == 8)
		{
			return 1500;
		}
	}
	if(itemtype == 4)
	{
		return  2;
	}
	return 0;
}

stock PItemWeight(playerid)
{
	new weight = 0;
	weight += ItemWeight(gPlayerData[playerid][pItem1type], gPlayerData[playerid][pItem1]) * gPlayerData[playerid][pItem1param6];
	weight += ItemWeight(gPlayerData[playerid][pItem2type], gPlayerData[playerid][pItem2]) * gPlayerData[playerid][pItem2param6];
	weight += ItemWeight(gPlayerData[playerid][pItem3type], gPlayerData[playerid][pItem3]) * gPlayerData[playerid][pItem3param6];
	weight += ItemWeight(gPlayerData[playerid][pItem4type], gPlayerData[playerid][pItem4]) * gPlayerData[playerid][pItem4param6];
	weight += ItemWeight(gPlayerData[playerid][pItem5type], gPlayerData[playerid][pItem5]) * gPlayerData[playerid][pItem5param6];
	if(PHaveExpandItem(playerid) || gPlayerData[playerid][pVipItem] > 0)
	{
		weight += ItemWeight(gPlayerData[playerid][pItem6type], gPlayerData[playerid][pItem6]) * gPlayerData[playerid][pItem6param6];
		weight += ItemWeight(gPlayerData[playerid][pItem7type], gPlayerData[playerid][pItem7]) * gPlayerData[playerid][pItem7param6];
		weight += ItemWeight(gPlayerData[playerid][pItem8type], gPlayerData[playerid][pItem8]) * gPlayerData[playerid][pItem8param6];
		weight += ItemWeight(gPlayerData[playerid][pItem9type], gPlayerData[playerid][pItem9]) * gPlayerData[playerid][pItem9param6];
		weight += ItemWeight(gPlayerData[playerid][pItem10type], gPlayerData[playerid][pItem10]) * gPlayerData[playerid][pItem10param6];
		weight += ItemWeight(gPlayerData[playerid][pItem11type], gPlayerData[playerid][pItem11]) * gPlayerData[playerid][pItem11param6];
		weight += ItemWeight(gPlayerData[playerid][pItem12type], gPlayerData[playerid][pItem12]) * gPlayerData[playerid][pItem12param6];
		weight += ItemWeight(gPlayerData[playerid][pItem13type], gPlayerData[playerid][pItem13]) * gPlayerData[playerid][pItem13param6];
		weight += ItemWeight(gPlayerData[playerid][pItem14type], gPlayerData[playerid][pItem14]) * gPlayerData[playerid][pItem14param6];
		weight += ItemWeight(gPlayerData[playerid][pItem15type], gPlayerData[playerid][pItem15]) * gPlayerData[playerid][pItem15param6];
		if(gPlayerData[playerid][pVipItem] > 0)
		{
			weight += ItemWeight(gPlayerData[playerid][pItem16type], gPlayerData[playerid][pItem16]) * gPlayerData[playerid][pItem16param6];
			weight += ItemWeight(gPlayerData[playerid][pItem17type], gPlayerData[playerid][pItem17]) * gPlayerData[playerid][pItem17param6];
			weight += ItemWeight(gPlayerData[playerid][pItem18type], gPlayerData[playerid][pItem18]) * gPlayerData[playerid][pItem18param6];
			weight += ItemWeight(gPlayerData[playerid][pItem19type], gPlayerData[playerid][pItem19]) * gPlayerData[playerid][pItem19param6];
			weight += ItemWeight(gPlayerData[playerid][pItem20type], gPlayerData[playerid][pItem20]) * gPlayerData[playerid][pItem20param6];
			weight += ItemWeight(gPlayerData[playerid][pItem21type], gPlayerData[playerid][pItem21]) * gPlayerData[playerid][pItem21param6];
			weight += ItemWeight(gPlayerData[playerid][pItem22type], gPlayerData[playerid][pItem22]) * gPlayerData[playerid][pItem22param6];
			weight += ItemWeight(gPlayerData[playerid][pItem23type], gPlayerData[playerid][pItem23]) * gPlayerData[playerid][pItem23param6];
			weight += ItemWeight(gPlayerData[playerid][pItem24type], gPlayerData[playerid][pItem24]) * gPlayerData[playerid][pItem24param6];
			weight += ItemWeight(gPlayerData[playerid][pItem25type], gPlayerData[playerid][pItem25]) * gPlayerData[playerid][pItem25param6];
		}
	}
	return weight;
}

stock HItemWeight(hid)
{
	new weight = 0;
	weight += ItemWeight(Houses[hid][HItem1type], Houses[hid][HItem1]);
	weight += ItemWeight(Houses[hid][HItem2type], Houses[hid][HItem2]);
	weight += ItemWeight(Houses[hid][HItem3type], Houses[hid][HItem3]);
	weight += ItemWeight(Houses[hid][HItem4type], Houses[hid][HItem4]);
	weight += ItemWeight(Houses[hid][HItem5type], Houses[hid][HItem5]);
	return weight;
}

stock VItemWeight(vid)
{
	new weight = 0;
	weight += ItemWeight(gVehData[vid-1][VItem1type], gVehData[vid-1][VItem1]);
	weight += ItemWeight(gVehData[vid-1][VItem2type], gVehData[vid-1][VItem2]);
	weight += ItemWeight(gVehData[vid-1][VItem3type], gVehData[vid-1][VItem3]);
	weight += ItemWeight(gVehData[vid-1][VItem4type], gVehData[vid-1][VItem4]);
	weight += ItemWeight(gVehData[vid-1][VItem5type], gVehData[vid-1][VItem5]);
	weight += ItemWeight(gVehData[vid-1][VItem6type], gVehData[vid-1][VItem6]);
	weight += ItemWeight(gVehData[vid-1][VItem7type], gVehData[vid-1][VItem7]);
	weight += ItemWeight(gVehData[vid-1][VItem8type], gVehData[vid-1][VItem8]);
	weight += ItemWeight(gVehData[vid-1][VItem9type], gVehData[vid-1][VItem9]);
	weight += ItemWeight(gVehData[vid-1][VItem10type], gVehData[vid-1][VItem10]);
	weight += ItemWeight(gVehData[vid-1][VItem11type], gVehData[vid-1][VItem11]);
	weight += ItemWeight(gVehData[vid-1][VItem12type], gVehData[vid-1][VItem12]);
	weight += ItemWeight(gVehData[vid-1][VItem13type], gVehData[vid-1][VItem13]);
	weight += ItemWeight(gVehData[vid-1][VItem14type], gVehData[vid-1][VItem14]);
	weight += ItemWeight(gVehData[vid-1][VItem15type], gVehData[vid-1][VItem15]);
	return weight;
}

stock CheckPlayerCarSerial(playerid, slot)
{
	for(new i = 0; i < sizeof(gVehData); i++)
	{
		if (slot == 1 && gVehData[i][CarSerial] == gPlayerData[playerid][pItem1])
			return i;
		else if (slot == 2 && gVehData[i][CarSerial] == gPlayerData[playerid][pItem2])
			return i;
		else if (slot == 3 && gVehData[i][CarSerial] == gPlayerData[playerid][pItem3])
			return i;
		else if (slot == 4 && gVehData[i][CarSerial] == gPlayerData[playerid][pItem4])
			return i;
		else if (slot == 5 && gVehData[i][CarSerial] == gPlayerData[playerid][pItem5])
			return i;
		if (PHaveExpandItem(playerid) || gPlayerData[playerid][pVipItem] > 0)
		{
			if (slot == 6 && gVehData[i][CarSerial] == gPlayerData[playerid][pItem6])
				return i;
			else if (slot == 7 && gVehData[i][CarSerial] == gPlayerData[playerid][pItem7])
				return i;
			else if (slot == 8 && gVehData[i][CarSerial] == gPlayerData[playerid][pItem8])
				return i;
			else if (slot == 9 && gVehData[i][CarSerial] == gPlayerData[playerid][pItem9])
				return i;
			else if (slot == 10 && gVehData[i][CarSerial] == gPlayerData[playerid][pItem10])
				return i;
			else if(slot == 11 && gVehData[i][CarSerial] == gPlayerData[playerid][pItem11])
				return i;
			else if (slot == 12 && gVehData[i][CarSerial] == gPlayerData[playerid][pItem12])
				return i;
			else if (slot == 13 && gVehData[i][CarSerial] == gPlayerData[playerid][pItem13])
				return i;
			else if (slot == 14 && gVehData[i][CarSerial] == gPlayerData[playerid][pItem14])
				return i;
			else if (slot == 15 && gVehData[i][CarSerial] == gPlayerData[playerid][pItem15])
				return i;
			if( gPlayerData[playerid][pVipItem] > 0 )
			{
				if (slot == 16 && gVehData[i][CarSerial] == gPlayerData[playerid][pItem16])
					return i;
				else if (slot == 17 && gVehData[i][CarSerial] == gPlayerData[playerid][pItem17])
					return i;
				else if (slot == 18 && gVehData[i][CarSerial] == gPlayerData[playerid][pItem18])
					return i;
				else if (slot == 19 && gVehData[i][CarSerial] == gPlayerData[playerid][pItem19])
					return i;
				else if (slot == 20 && gVehData[i][CarSerial] == gPlayerData[playerid][pItem20])
					return i;
				else if (slot == 21 && gVehData[i][CarSerial] == gPlayerData[playerid][pItem21])
					return i;
				else if (slot == 22 && gVehData[i][CarSerial] == gPlayerData[playerid][pItem22])
					return i;
				else if (slot == 23 && gVehData[i][CarSerial] == gPlayerData[playerid][pItem23])
					return i;
				else if (slot == 24 && gVehData[i][CarSerial] == gPlayerData[playerid][pItem24])
					return i;
				else if (slot == 25 && gVehData[i][CarSerial] == gPlayerData[playerid][pItem25])
					return i;
			}
		}
	}
	return 255;
}

stock InsertPlayerPickupItem(playerid, slot, size = 1)
{
	new Float:px, Float:py, Float:pz, Float:pa;
	new hour, minute, second;
	new Float:fSecond;
	GetPlayerPos(playerid, px, py, pz);
	GetPlayerFacingAngle(playerid, pa);
	gettime(hour, minute, second);
	fSecond = float(second);
	fSecond /= 40.0;
	GetXYInFrontOfPlayer(playerid, px, py, 2.0+fSecond);
	for(new i = 0; i < sizeof(gPickupItem); i++)
	{
		if(gPickupItem[i][pickupLifeTime] > 0)
			continue;			
		if (slot == 1)
		{
			gPickupItem[i][PickupItem] = gPlayerData[playerid][pItem1];
			gPickupItem[i][PickupItemType] = gPlayerData[playerid][pItem1type];
			gPickupItem[i][PickupItemParam1] = gPlayerData[playerid][pItem1param];
			gPickupItem[i][PickupItemParam2] = gPlayerData[playerid][pItem1param2];
			gPickupItem[i][PickupItemParam3] = gPlayerData[playerid][pItem1param3];
			gPickupItem[i][PickupItemParam4] = gPlayerData[playerid][pItem1param4];
			strdel(gPickupItem[i][PickupItemParam5], 0, 64);
			strins(gPickupItem[i][PickupItemParam5], gPlayerData[playerid][pItem1param5], 0, 64);
			gPickupItem[i][PickupItemParam6] = size;
		}
		else if (slot == 2)
		{
			gPickupItem[i][PickupItem] = gPlayerData[playerid][pItem2];
			gPickupItem[i][PickupItemType] = gPlayerData[playerid][pItem2type];
			gPickupItem[i][PickupItemParam1] = gPlayerData[playerid][pItem2param];
			gPickupItem[i][PickupItemParam2] = gPlayerData[playerid][pItem2param2];
			gPickupItem[i][PickupItemParam3] = gPlayerData[playerid][pItem2param3];
			gPickupItem[i][PickupItemParam4] = gPlayerData[playerid][pItem2param4];
			strdel(gPickupItem[i][PickupItemParam5], 0, 64);
			strins(gPickupItem[i][PickupItemParam5], gPlayerData[playerid][pItem2param5], 0, 64);
			gPickupItem[i][PickupItemParam6] = size;
		}
		else if (slot == 3)
		{
			gPickupItem[i][PickupItem] = gPlayerData[playerid][pItem3];
			gPickupItem[i][PickupItemType] = gPlayerData[playerid][pItem3type];
			gPickupItem[i][PickupItemParam1] = gPlayerData[playerid][pItem3param];
			gPickupItem[i][PickupItemParam2] = gPlayerData[playerid][pItem3param2];
			gPickupItem[i][PickupItemParam3] = gPlayerData[playerid][pItem3param3];
			gPickupItem[i][PickupItemParam4] = gPlayerData[playerid][pItem3param4];
			strdel(gPickupItem[i][PickupItemParam5], 0, 64);
			strins(gPickupItem[i][PickupItemParam5], gPlayerData[playerid][pItem3param5], 0, 64);
			gPickupItem[i][PickupItemParam6] = size;
		}
		else if (slot == 4)
		{
			gPickupItem[i][PickupItem] = gPlayerData[playerid][pItem4];
			gPickupItem[i][PickupItemType] = gPlayerData[playerid][pItem4type];
			gPickupItem[i][PickupItemParam1] = gPlayerData[playerid][pItem4param];
			gPickupItem[i][PickupItemParam2] = gPlayerData[playerid][pItem4param2];
			gPickupItem[i][PickupItemParam3] = gPlayerData[playerid][pItem4param3];
			gPickupItem[i][PickupItemParam4] = gPlayerData[playerid][pItem4param4];
			strdel(gPickupItem[i][PickupItemParam5], 0, 64);
			strins(gPickupItem[i][PickupItemParam5], gPlayerData[playerid][pItem4param5], 0, 64);
			gPickupItem[i][PickupItemParam6] = size;
		}
		else if (slot == 5)
		{
			gPickupItem[i][PickupItem] = gPlayerData[playerid][pItem5];
			gPickupItem[i][PickupItemType] = gPlayerData[playerid][pItem5type];
			gPickupItem[i][PickupItemParam1] = gPlayerData[playerid][pItem5param];
			gPickupItem[i][PickupItemParam2] = gPlayerData[playerid][pItem5param2];
			gPickupItem[i][PickupItemParam3] = gPlayerData[playerid][pItem5param3];
			gPickupItem[i][PickupItemParam4] = gPlayerData[playerid][pItem5param4];
			strdel(gPickupItem[i][PickupItemParam5], 0, 64);
			strins(gPickupItem[i][PickupItemParam5], gPlayerData[playerid][pItem5param5], 0, 64);
			gPickupItem[i][PickupItemParam6] = size;
		}
		else if (slot == 6)
		{
			gPickupItem[i][PickupItem] = gPlayerData[playerid][pItem6];
			gPickupItem[i][PickupItemType] = gPlayerData[playerid][pItem6type];
			gPickupItem[i][PickupItemParam1] = gPlayerData[playerid][pItem6param];
			gPickupItem[i][PickupItemParam2] = gPlayerData[playerid][pItem6param2];
			gPickupItem[i][PickupItemParam3] = gPlayerData[playerid][pItem6param3];
			gPickupItem[i][PickupItemParam4] = gPlayerData[playerid][pItem6param4];
			strdel(gPickupItem[i][PickupItemParam5], 0, 64);
			strins(gPickupItem[i][PickupItemParam5], gPlayerData[playerid][pItem6param5], 0, 64);
			gPickupItem[i][PickupItemParam6] = size;
		}
		else if (slot == 7)
		{
			gPickupItem[i][PickupItem] = gPlayerData[playerid][pItem7];
			gPickupItem[i][PickupItemType] = gPlayerData[playerid][pItem7type];
			gPickupItem[i][PickupItemParam1] = gPlayerData[playerid][pItem7param];
			gPickupItem[i][PickupItemParam2] = gPlayerData[playerid][pItem7param2];
			gPickupItem[i][PickupItemParam3] = gPlayerData[playerid][pItem7param3];
			gPickupItem[i][PickupItemParam4] = gPlayerData[playerid][pItem7param4];
			strdel(gPickupItem[i][PickupItemParam5], 0, 64);
			strins(gPickupItem[i][PickupItemParam5], gPlayerData[playerid][pItem7param5], 0, 64);
			gPickupItem[i][PickupItemParam6] = size;
		}
		else if (slot == 8)
		{
			gPickupItem[i][PickupItem] = gPlayerData[playerid][pItem8];
			gPickupItem[i][PickupItemType] = gPlayerData[playerid][pItem8type];
			gPickupItem[i][PickupItemParam1] = gPlayerData[playerid][pItem8param];
			gPickupItem[i][PickupItemParam2] = gPlayerData[playerid][pItem8param2];
			gPickupItem[i][PickupItemParam3] = gPlayerData[playerid][pItem8param3];
			gPickupItem[i][PickupItemParam4] = gPlayerData[playerid][pItem8param4];
			strdel(gPickupItem[i][PickupItemParam5], 0, 64);
			strins(gPickupItem[i][PickupItemParam5], gPlayerData[playerid][pItem8param5], 0, 64);
			gPickupItem[i][PickupItemParam6] = size;
		}
		else if (slot == 9)
		{
			gPickupItem[i][PickupItem] = gPlayerData[playerid][pItem9];
			gPickupItem[i][PickupItemType] = gPlayerData[playerid][pItem9type];
			gPickupItem[i][PickupItemParam1] = gPlayerData[playerid][pItem9param];
			gPickupItem[i][PickupItemParam2] = gPlayerData[playerid][pItem9param2];
			gPickupItem[i][PickupItemParam3] = gPlayerData[playerid][pItem9param3];
			gPickupItem[i][PickupItemParam4] = gPlayerData[playerid][pItem9param4];
			strdel(gPickupItem[i][PickupItemParam5], 0, 64);
			strins(gPickupItem[i][PickupItemParam5], gPlayerData[playerid][pItem9param5], 0, 64);
			gPickupItem[i][PickupItemParam6] = size;
		}
		else if (slot == 10)
		{
			gPickupItem[i][PickupItem] = gPlayerData[playerid][pItem10];
			gPickupItem[i][PickupItemType] = gPlayerData[playerid][pItem10type];
			gPickupItem[i][PickupItemParam1] = gPlayerData[playerid][pItem10param];
			gPickupItem[i][PickupItemParam2] = gPlayerData[playerid][pItem10param2];
			gPickupItem[i][PickupItemParam3] = gPlayerData[playerid][pItem10param3];
			gPickupItem[i][PickupItemParam4] = gPlayerData[playerid][pItem10param4];
			strdel(gPickupItem[i][PickupItemParam5], 0, 64);
			strins(gPickupItem[i][PickupItemParam5], gPlayerData[playerid][pItem10param5], 0, 64);
			gPickupItem[i][PickupItemParam6] =size;
		}
		else if (slot == 11)
		{
			gPickupItem[i][PickupItem] = gPlayerData[playerid][pItem11];
			gPickupItem[i][PickupItemType] = gPlayerData[playerid][pItem11type];
			gPickupItem[i][PickupItemParam1] = gPlayerData[playerid][pItem11param];
			gPickupItem[i][PickupItemParam2] = gPlayerData[playerid][pItem11param2];
			gPickupItem[i][PickupItemParam3] = gPlayerData[playerid][pItem11param3];
			gPickupItem[i][PickupItemParam4] = gPlayerData[playerid][pItem11param4];
			strdel(gPickupItem[i][PickupItemParam5], 0, 64);
			strins(gPickupItem[i][PickupItemParam5], gPlayerData[playerid][pItem11param5], 0, 64);
			gPickupItem[i][PickupItemParam6] = size;
		}
		else if (slot == 12)
		{
			gPickupItem[i][PickupItem] = gPlayerData[playerid][pItem12];
			gPickupItem[i][PickupItemType] = gPlayerData[playerid][pItem12type];
			gPickupItem[i][PickupItemParam1] = gPlayerData[playerid][pItem12param];
			gPickupItem[i][PickupItemParam2] = gPlayerData[playerid][pItem12param2];
			gPickupItem[i][PickupItemParam3] = gPlayerData[playerid][pItem12param3];
			gPickupItem[i][PickupItemParam4] = gPlayerData[playerid][pItem12param4];
			strdel(gPickupItem[i][PickupItemParam5], 0, 64);
			strins(gPickupItem[i][PickupItemParam5], gPlayerData[playerid][pItem12param5], 0, 64);
			gPickupItem[i][PickupItemParam6] = size;
		}
		else if (slot == 13)
		{
			gPickupItem[i][PickupItem] = gPlayerData[playerid][pItem13];
			gPickupItem[i][PickupItemType] = gPlayerData[playerid][pItem13type];
			gPickupItem[i][PickupItemParam1] = gPlayerData[playerid][pItem13param];
			gPickupItem[i][PickupItemParam2] = gPlayerData[playerid][pItem13param2];
			gPickupItem[i][PickupItemParam3] = gPlayerData[playerid][pItem13param3];
			gPickupItem[i][PickupItemParam4] = gPlayerData[playerid][pItem13param4];
			strdel(gPickupItem[i][PickupItemParam5], 0, 64);
			strins(gPickupItem[i][PickupItemParam5], gPlayerData[playerid][pItem13param5], 0, 64);
			gPickupItem[i][PickupItemParam6] = size;
		}
		else if (slot == 14)
		{
			gPickupItem[i][PickupItem] = gPlayerData[playerid][pItem14];
			gPickupItem[i][PickupItemType] = gPlayerData[playerid][pItem14type];
			gPickupItem[i][PickupItemParam1] = gPlayerData[playerid][pItem14param];
			gPickupItem[i][PickupItemParam2] = gPlayerData[playerid][pItem14param2];
			gPickupItem[i][PickupItemParam3] = gPlayerData[playerid][pItem14param3];
			gPickupItem[i][PickupItemParam4] = gPlayerData[playerid][pItem14param4];
			strdel(gPickupItem[i][PickupItemParam5], 0, 64);
			strins(gPickupItem[i][PickupItemParam5], gPlayerData[playerid][pItem14param5], 0, 64);
			gPickupItem[i][PickupItemParam6] = size;
		}
		else if (slot == 15)
		{
			gPickupItem[i][PickupItem] = gPlayerData[playerid][pItem15];
			gPickupItem[i][PickupItemType] = gPlayerData[playerid][pItem15type];
			gPickupItem[i][PickupItemParam1] = gPlayerData[playerid][pItem15param];
			gPickupItem[i][PickupItemParam2] = gPlayerData[playerid][pItem15param2];
			gPickupItem[i][PickupItemParam3] = gPlayerData[playerid][pItem15param3];
			gPickupItem[i][PickupItemParam4] = gPlayerData[playerid][pItem15param4];
			strdel(gPickupItem[i][PickupItemParam5], 0, 64);
			strins(gPickupItem[i][PickupItemParam5], gPlayerData[playerid][pItem15param5], 0, 64);
			gPickupItem[i][PickupItemParam6] = size;
		}
		else if (slot == 16)
		{
			gPickupItem[i][PickupItem] = gPlayerData[playerid][pItem16];
			gPickupItem[i][PickupItemType] = gPlayerData[playerid][pItem16type];
			gPickupItem[i][PickupItemParam1] = gPlayerData[playerid][pItem16param];
			gPickupItem[i][PickupItemParam2] = gPlayerData[playerid][pItem16param2];
			gPickupItem[i][PickupItemParam3] = gPlayerData[playerid][pItem16param3];
			gPickupItem[i][PickupItemParam4] = gPlayerData[playerid][pItem16param4];
			strdel(gPickupItem[i][PickupItemParam5], 0, 64);
			strins(gPickupItem[i][PickupItemParam5], gPlayerData[playerid][pItem16param5], 0, 64);
			gPickupItem[i][PickupItemParam6] = size;
		}
		else if (slot == 17)
		{
			gPickupItem[i][PickupItem] = gPlayerData[playerid][pItem17];
			gPickupItem[i][PickupItemType] = gPlayerData[playerid][pItem17type];
			gPickupItem[i][PickupItemParam1] = gPlayerData[playerid][pItem17param];
			gPickupItem[i][PickupItemParam2] = gPlayerData[playerid][pItem17param2];
			gPickupItem[i][PickupItemParam3] = gPlayerData[playerid][pItem17param3];
			gPickupItem[i][PickupItemParam4] = gPlayerData[playerid][pItem17param4];
			strdel(gPickupItem[i][PickupItemParam5], 0, 64);
			strins(gPickupItem[i][PickupItemParam5], gPlayerData[playerid][pItem17param5], 0, 64);
			gPickupItem[i][PickupItemParam6] = size;
		}
		else if (slot == 18)
		{
			gPickupItem[i][PickupItem] = gPlayerData[playerid][pItem18];
			gPickupItem[i][PickupItemType] = gPlayerData[playerid][pItem18type];
			gPickupItem[i][PickupItemParam1] = gPlayerData[playerid][pItem18param];
			gPickupItem[i][PickupItemParam2] = gPlayerData[playerid][pItem18param2];
			gPickupItem[i][PickupItemParam3] = gPlayerData[playerid][pItem18param3];
			gPickupItem[i][PickupItemParam4] = gPlayerData[playerid][pItem18param4];
			strdel(gPickupItem[i][PickupItemParam5], 0, 64);
			strins(gPickupItem[i][PickupItemParam5], gPlayerData[playerid][pItem18param5], 0, 64);
			gPickupItem[i][PickupItemParam6] = size;
		}
		else if (slot == 19)
		{
			gPickupItem[i][PickupItem] = gPlayerData[playerid][pItem19];
			gPickupItem[i][PickupItemType] = gPlayerData[playerid][pItem19type];
			gPickupItem[i][PickupItemParam1] = gPlayerData[playerid][pItem19param];
			gPickupItem[i][PickupItemParam2] = gPlayerData[playerid][pItem19param2];
			gPickupItem[i][PickupItemParam3] = gPlayerData[playerid][pItem19param3];
			gPickupItem[i][PickupItemParam4] = gPlayerData[playerid][pItem19param4];
			strdel(gPickupItem[i][PickupItemParam5], 0, 64);
			strins(gPickupItem[i][PickupItemParam5], gPlayerData[playerid][pItem19param5], 0, 64);
			gPickupItem[i][PickupItemParam6] = size;
		}
		else if (slot == 20)
		{
			gPickupItem[i][PickupItem] = gPlayerData[playerid][pItem20];
			gPickupItem[i][PickupItemType] = gPlayerData[playerid][pItem20type];
			gPickupItem[i][PickupItemParam1] = gPlayerData[playerid][pItem20param];
			gPickupItem[i][PickupItemParam2] = gPlayerData[playerid][pItem20param2];
			gPickupItem[i][PickupItemParam3] = gPlayerData[playerid][pItem20param3];
			gPickupItem[i][PickupItemParam4] = gPlayerData[playerid][pItem20param4];
			strdel(gPickupItem[i][PickupItemParam5], 0, 64);
			strins(gPickupItem[i][PickupItemParam5], gPlayerData[playerid][pItem20param5], 0, 64);
			gPickupItem[i][PickupItemParam6] = size;
		}
		else if (slot == 21)
		{
			gPickupItem[i][PickupItem] = gPlayerData[playerid][pItem21];
			gPickupItem[i][PickupItemType] = gPlayerData[playerid][pItem21type];
			gPickupItem[i][PickupItemParam1] = gPlayerData[playerid][pItem21param];
			gPickupItem[i][PickupItemParam2] = gPlayerData[playerid][pItem21param2];
			gPickupItem[i][PickupItemParam3] = gPlayerData[playerid][pItem21param3];
			gPickupItem[i][PickupItemParam4] = gPlayerData[playerid][pItem21param4];
			strdel(gPickupItem[i][PickupItemParam5], 0, 64);
			strins(gPickupItem[i][PickupItemParam5], gPlayerData[playerid][pItem21param5], 0, 64);
			gPickupItem[i][PickupItemParam6] = size;
		}
		else if (slot == 22)
		{
			gPickupItem[i][PickupItem] = gPlayerData[playerid][pItem22];
			gPickupItem[i][PickupItemType] = gPlayerData[playerid][pItem22type];
			gPickupItem[i][PickupItemParam1] = gPlayerData[playerid][pItem22param];
			gPickupItem[i][PickupItemParam2] = gPlayerData[playerid][pItem22param2];
			gPickupItem[i][PickupItemParam3] = gPlayerData[playerid][pItem22param3];
			gPickupItem[i][PickupItemParam4] = gPlayerData[playerid][pItem22param4];
			strdel(gPickupItem[i][PickupItemParam5], 0, 64);
			strins(gPickupItem[i][PickupItemParam5], gPlayerData[playerid][pItem22param5], 0, 64);
			gPickupItem[i][PickupItemParam6] = size;
		}
		else if (slot == 23)
		{
			gPickupItem[i][PickupItem] = gPlayerData[playerid][pItem23];
			gPickupItem[i][PickupItemType] = gPlayerData[playerid][pItem23type];
			gPickupItem[i][PickupItemParam1] = gPlayerData[playerid][pItem23param];
			gPickupItem[i][PickupItemParam2] = gPlayerData[playerid][pItem23param2];
			gPickupItem[i][PickupItemParam3] = gPlayerData[playerid][pItem23param3];
			gPickupItem[i][PickupItemParam4] = gPlayerData[playerid][pItem23param4];
			strdel(gPickupItem[i][PickupItemParam5], 0, 64);
			strins(gPickupItem[i][PickupItemParam5], gPlayerData[playerid][pItem23param5], 0, 64);
			gPickupItem[i][PickupItemParam6] = size;
		}
		else if (slot == 24)
		{
			gPickupItem[i][PickupItem] = gPlayerData[playerid][pItem24];
			gPickupItem[i][PickupItemType] = gPlayerData[playerid][pItem24type];
			gPickupItem[i][PickupItemParam1] = gPlayerData[playerid][pItem24param];
			gPickupItem[i][PickupItemParam2] = gPlayerData[playerid][pItem24param2];
			gPickupItem[i][PickupItemParam3] = gPlayerData[playerid][pItem24param3];
			gPickupItem[i][PickupItemParam4] = gPlayerData[playerid][pItem24param4];
			strdel(gPickupItem[i][PickupItemParam5], 0, 64);
			strins(gPickupItem[i][PickupItemParam5], gPlayerData[playerid][pItem24param5], 0, 64);
			gPickupItem[i][PickupItemParam6] = size;
		}
		else if (slot == 25)
		{
			gPickupItem[i][PickupItem] = gPlayerData[playerid][pItem25];
			gPickupItem[i][PickupItemType] = gPlayerData[playerid][pItem25type];
			gPickupItem[i][PickupItemParam1] = gPlayerData[playerid][pItem25param];
			gPickupItem[i][PickupItemParam2] = gPlayerData[playerid][pItem25param2];
			gPickupItem[i][PickupItemParam3] = gPlayerData[playerid][pItem25param3];
			gPickupItem[i][PickupItemParam4] = gPlayerData[playerid][pItem25param4];
			strdel(gPickupItem[i][PickupItemParam5], 0, 64);
			strins(gPickupItem[i][PickupItemParam5], gPlayerData[playerid][pItem25param5], 0, 64);
			gPickupItem[i][PickupItemParam6] = size;
		}
		gPickupItem[i][pickupLifeTime] = 2;
		gPickupItem[i][pickupID] = CreateDynamicPickup(1559, 1, px, py, pz, GetPlayerVirtualWorld(i), -1, -1, 50.0);
		gPickupItem[i][pickupX] = px;
		gPickupItem[i][pickupY] = py;
		gPickupItem[i][pickupZ] = pz;
		return 1;
	}
	return 1;
}

/*
* Count how many items in all slot of given type player can carry
*/
stock PlayerCountMaxItemCarry(playerid, itemtype, itemid)
{
	new itemCanCarryCount = 0;
	if(gPlayerData[playerid][pItem1type] == 0)
		itemCanCarryCount += ItemsOnCharacterSlot(itemtype, itemid);
	else if(gPlayerData[playerid][pItem1type] == itemtype && gPlayerData[playerid][pItem1] == itemid)
		itemCanCarryCount += ItemsOnCharacterSlot(itemtype, itemid) - SlotParam6(playerid, 1);
	if(gPlayerData[playerid][pItem2type] == 0)
		itemCanCarryCount += ItemsOnCharacterSlot(itemtype, itemid);
	else if(gPlayerData[playerid][pItem2type] == itemtype && gPlayerData[playerid][pItem2] == itemid)
		itemCanCarryCount += ItemsOnCharacterSlot(itemtype, itemid) - SlotParam6(playerid, 2);
	if(gPlayerData[playerid][pItem3type] == 0)
		itemCanCarryCount += ItemsOnCharacterSlot(itemtype, itemid);
	else if(gPlayerData[playerid][pItem3type] == itemtype && gPlayerData[playerid][pItem3] == itemid)
		itemCanCarryCount += ItemsOnCharacterSlot(itemtype, itemid) - SlotParam6(playerid, 3);
	if(gPlayerData[playerid][pItem4type] == 0)
		itemCanCarryCount += ItemsOnCharacterSlot(itemtype, itemid);
	else if(gPlayerData[playerid][pItem4type] == itemtype && gPlayerData[playerid][pItem4] == itemid)
		itemCanCarryCount += ItemsOnCharacterSlot(itemtype, itemid) - SlotParam6(playerid, 4);
	if(gPlayerData[playerid][pItem5type] == 0)
		itemCanCarryCount += ItemsOnCharacterSlot(itemtype, itemid);
	else if(gPlayerData[playerid][pItem5type] == itemtype && gPlayerData[playerid][pItem5] == itemid)
		itemCanCarryCount += ItemsOnCharacterSlot(itemtype, itemid) - SlotParam6(playerid, 5);
	if(PHaveExpandItem(playerid) || gPlayerData[playerid][pVipItem] > 0)
	{
		if(gPlayerData[playerid][pItem6type] == 0)
			itemCanCarryCount += ItemsOnCharacterSlot(itemtype, itemid);
		else if(gPlayerData[playerid][pItem6type] == itemtype && gPlayerData[playerid][pItem6] == itemid)
			itemCanCarryCount += ItemsOnCharacterSlot(itemtype, itemid) - SlotParam6(playerid, 6);
		if(gPlayerData[playerid][pItem7type] == 0)
			itemCanCarryCount += ItemsOnCharacterSlot(itemtype, itemid);
		else if(gPlayerData[playerid][pItem7type] == itemtype && gPlayerData[playerid][pItem7] == itemid)
			itemCanCarryCount += ItemsOnCharacterSlot(itemtype, itemid) - SlotParam6(playerid, 7);
		if(gPlayerData[playerid][pItem8type] == 0)
			itemCanCarryCount += ItemsOnCharacterSlot(itemtype, itemid);
		else if(gPlayerData[playerid][pItem8type] == itemtype && gPlayerData[playerid][pItem8] == itemid)
			itemCanCarryCount += ItemsOnCharacterSlot(itemtype, itemid) - SlotParam6(playerid, 8);
		if(gPlayerData[playerid][pItem9type] == 0)
			itemCanCarryCount += ItemsOnCharacterSlot(itemtype, itemid);
		else if(gPlayerData[playerid][pItem9type] == itemtype && gPlayerData[playerid][pItem9] == itemid)
			itemCanCarryCount += ItemsOnCharacterSlot(itemtype, itemid) - SlotParam6(playerid, 9);
		if(gPlayerData[playerid][pItem10type] == 0)
			itemCanCarryCount += ItemsOnCharacterSlot(itemtype, itemid);
		else if(gPlayerData[playerid][pItem10type] == itemtype && gPlayerData[playerid][pItem10] == itemid)
			itemCanCarryCount += ItemsOnCharacterSlot(itemtype, itemid) - SlotParam6(playerid, 10);
		if(gPlayerData[playerid][pItem11type] == 0)
			itemCanCarryCount += ItemsOnCharacterSlot(itemtype, itemid);
		else if(gPlayerData[playerid][pItem11type] == itemtype && gPlayerData[playerid][pItem11] == itemid)
			itemCanCarryCount += ItemsOnCharacterSlot(itemtype, itemid) - SlotParam6(playerid, 11);
		if(gPlayerData[playerid][pItem12type] == 0)
			itemCanCarryCount += ItemsOnCharacterSlot(itemtype, itemid);
		else if(gPlayerData[playerid][pItem12type] == itemtype && gPlayerData[playerid][pItem12] == itemid)
			itemCanCarryCount += ItemsOnCharacterSlot(itemtype, itemid) - SlotParam6(playerid, 12);
		if(gPlayerData[playerid][pItem13type] == 0)
			itemCanCarryCount += ItemsOnCharacterSlot(itemtype, itemid);
		else if(gPlayerData[playerid][pItem13type] == itemtype && gPlayerData[playerid][pItem13] == itemid)
			itemCanCarryCount += ItemsOnCharacterSlot(itemtype, itemid) - SlotParam6(playerid, 13);
		if(gPlayerData[playerid][pItem14type] == 0)
			itemCanCarryCount += ItemsOnCharacterSlot(itemtype, itemid);
		else if(gPlayerData[playerid][pItem14type] == itemtype && gPlayerData[playerid][pItem14] == itemid)
			itemCanCarryCount += ItemsOnCharacterSlot(itemtype, itemid) - SlotParam6(playerid, 14);
		if(gPlayerData[playerid][pItem15type] == 0)
			itemCanCarryCount += ItemsOnCharacterSlot(itemtype, itemid);
		else if(gPlayerData[playerid][pItem15type] == itemtype && gPlayerData[playerid][pItem15] == itemid)
			itemCanCarryCount += ItemsOnCharacterSlot(itemtype, itemid) - SlotParam6(playerid, 15);
		if(gPlayerData[playerid][pVipItem] > 0)
		{
			if(gPlayerData[playerid][pItem16type] == 0)
				itemCanCarryCount += ItemsOnCharacterSlot(itemtype, itemid);
			else if(gPlayerData[playerid][pItem16type] == itemtype && gPlayerData[playerid][pItem16] == itemid)
				itemCanCarryCount += ItemsOnCharacterSlot(itemtype, itemid) - SlotParam6(playerid, 16);
			if(gPlayerData[playerid][pItem17type] == 0)
				itemCanCarryCount += ItemsOnCharacterSlot(itemtype, itemid);
			else if(gPlayerData[playerid][pItem17type] == itemtype && gPlayerData[playerid][pItem17] == itemid)
				itemCanCarryCount += ItemsOnCharacterSlot(itemtype, itemid) - SlotParam6(playerid, 17);
			if(gPlayerData[playerid][pItem18type] == 0)
				itemCanCarryCount += ItemsOnCharacterSlot(itemtype, itemid);
			else if(gPlayerData[playerid][pItem18type] == itemtype && gPlayerData[playerid][pItem18] == itemid)
				itemCanCarryCount += ItemsOnCharacterSlot(itemtype, itemid) - SlotParam6(playerid, 18);
			if(gPlayerData[playerid][pItem19type] == 0)
				itemCanCarryCount += ItemsOnCharacterSlot(itemtype, itemid);
			else if(gPlayerData[playerid][pItem19type] == itemtype && gPlayerData[playerid][pItem19] == itemid)
				itemCanCarryCount += ItemsOnCharacterSlot(itemtype, itemid) - SlotParam6(playerid, 19);
			if(gPlayerData[playerid][pItem20type] == 0)
				itemCanCarryCount += ItemsOnCharacterSlot(itemtype, itemid);
			else if(gPlayerData[playerid][pItem20type] == itemtype && gPlayerData[playerid][pItem20] == itemid)
				itemCanCarryCount += ItemsOnCharacterSlot(itemtype, itemid) - SlotParam6(playerid, 20);
			if(gPlayerData[playerid][pItem21type] == 0)
				itemCanCarryCount += ItemsOnCharacterSlot(itemtype, itemid);
			else if(gPlayerData[playerid][pItem21type] == itemtype && gPlayerData[playerid][pItem21] == itemid)
				itemCanCarryCount += ItemsOnCharacterSlot(itemtype, itemid) - SlotParam6(playerid, 21);
			if(gPlayerData[playerid][pItem22type] == 0)
				itemCanCarryCount += ItemsOnCharacterSlot(itemtype, itemid);
			else if(gPlayerData[playerid][pItem22type] == itemtype && gPlayerData[playerid][pItem22] == itemid)
				itemCanCarryCount += ItemsOnCharacterSlot(itemtype, itemid) - SlotParam6(playerid, 22);
			if(gPlayerData[playerid][pItem23type] == 0)
				itemCanCarryCount += ItemsOnCharacterSlot(itemtype, itemid);
			else if(gPlayerData[playerid][pItem23type] == itemtype && gPlayerData[playerid][pItem23] == itemid)
				itemCanCarryCount += ItemsOnCharacterSlot(itemtype, itemid) - SlotParam6(playerid, 23);
			if(gPlayerData[playerid][pItem24type] == 0)
				itemCanCarryCount += ItemsOnCharacterSlot(itemtype, itemid);
			else if(gPlayerData[playerid][pItem24type] == itemtype && gPlayerData[playerid][pItem24] == itemid)
				itemCanCarryCount += ItemsOnCharacterSlot(itemtype, itemid) - SlotParam6(playerid, 24);
			if(gPlayerData[playerid][pItem25type] == 0)
				itemCanCarryCount += ItemsOnCharacterSlot(itemtype, itemid);
			else if(gPlayerData[playerid][pItem25type] == itemtype && gPlayerData[playerid][pItem25] == itemid)
				itemCanCarryCount += ItemsOnCharacterSlot(itemtype, itemid) - SlotParam6(playerid, 25);
		}
	}
	return itemCanCarryCount;
}

/*
* Count how many items in all slot of given type vehicle can carry
*/
stock VehicleCountMaxItemCarry(vehid, itemtype, itemid)
{
	new itemCanCarryCount = 0;
	for(new i = 0; i < sizeof(CarsLenghts); i++)
	{
		if(CarsLenghts[i][lenghtModel] == gVehData[vehid][CarModel])
		{
			if(CarsLenghts[i][trunkSpace] >= 1)
			{
				if(gVehData[vehid][VItem1type] == 0)
					itemCanCarryCount += ItemsOnVehicleSlot(itemtype, itemid);
				else if(gVehData[vehid][vItem1type] == itemtype)
					itemCanCarryCount += ItemsOnVehicleSlot(itemtype, itemid) - VSlotParam6(vehid+1);
			}
			else
				return itemCanCarryCount;
			if(CarsLenghts[i][trunkSpace] >= 2)
			{
				if(gVehData[vehid][VItem2type] == 0)
					itemCanCarryCount += ItemsOnVehicleSlot(itemtype, itemid);
				else if(gVehData[vehid][vItem2type] == itemtype)
					itemCanCarryCount += ItemsOnVehicleSlot(itemtype, itemid) - VSlotParam6(vehid+1);
			}
			else
				return itemCanCarryCount;
			if(CarsLenghts[i][trunkSpace] >= 3)
			{
				if(gVehData[vehid][VItem3type] == 0)
					itemCanCarryCount += ItemsOnVehicleSlot(itemtype, itemid);
				else if(gVehData[vehid][vItem3type] == itemtype)
					itemCanCarryCount += ItemsOnVehicleSlot(itemtype, itemid) - VSlotParam6(vehid+1);
			}
			else
				return itemCanCarryCount;
			if(CarsLenghts[i][trunkSpace] >= 4)
			{
				if(gVehData[vehid][VItem4type] == 0)
					itemCanCarryCount += ItemsOnVehicleSlot(itemtype, itemid);
				else if(gVehData[vehid][vItem4type] == itemtype)
					itemCanCarryCount += ItemsOnVehicleSlot(itemtype, itemid) - VSlotParam6(vehid+1);
			}
			else
				return itemCanCarryCount;
			if(CarsLenghts[i][trunkSpace] >= 5)
			{
				if(gVehData[vehid][VItem5type] == 0)
					itemCanCarryCount += ItemsOnVehicleSlot(itemtype, itemid);
				else if(gVehData[vehid][vItem5type] == itemtype)
					itemCanCarryCount += ItemsOnVehicleSlot(itemtype, itemid) - VSlotParam6(vehid+1);
			}
			else
				return itemCanCarryCount;
			if(CarsLenghts[i][trunkSpace] >= 6)
			{
				if(gVehData[vehid][VItem6type] == 0)
					itemCanCarryCount += ItemsOnVehicleSlot(itemtype, itemid);
				else if(gVehData[vehid][vItem6type] == itemtype)
					itemCanCarryCount += ItemsOnVehicleSlot(itemtype, itemid) - VSlotParam6(vehid+1);
			}
			else
				return itemCanCarryCount;
			if(CarsLenghts[i][trunkSpace] >= 7)
			{
				if(gVehData[vehid][VItem7type] == 0)
					itemCanCarryCount += ItemsOnVehicleSlot(itemtype, itemid);
				else if(gVehData[vehid][vItem7type] == itemtype)
					itemCanCarryCount += ItemsOnVehicleSlot(itemtype, itemid) - VSlotParam6(vehid+1);
			}
			else
				return itemCanCarryCount;
			if(CarsLenghts[i][trunkSpace] >= 8)
			{
				if(gVehData[vehid][VItem8type] == 0)
					itemCanCarryCount += ItemsOnVehicleSlot(itemtype, itemid);
				else if(gVehData[vehid][vItem8type] == itemtype)
					itemCanCarryCount += ItemsOnVehicleSlot(itemtype, itemid) - VSlotParam6(vehid+1);
			}
			else
				return itemCanCarryCount;
			if(CarsLenghts[i][trunkSpace] >= 9)
			{
				if(gVehData[vehid][VItem9type] == 0)
					itemCanCarryCount += ItemsOnVehicleSlot(itemtype, itemid);
				else if(gVehData[vehid][vItem9type] == itemtype)
					itemCanCarryCount += ItemsOnVehicleSlot(itemtype, itemid) - VSlotParam6(vehid+1);
			}
			else
				return itemCanCarryCount;
			if(CarsLenghts[i][trunkSpace] >= 10)
			{
				if(gVehData[vehid][VItem10type] == 0)
					itemCanCarryCount += ItemsOnVehicleSlot(itemtype, itemid);
				else if(gVehData[vehid][vItem10type] == itemtype)
					itemCanCarryCount += ItemsOnVehicleSlot(itemtype, itemid) - VSlotParam6(vehid+1);
			}
			else
				return itemCanCarryCount;
			if(CarsLenghts[i][trunkSpace] >= 11)
			{
				if(gVehData[vehid][VItem11type] == 0)
					itemCanCarryCount += ItemsOnVehicleSlot(itemtype, itemid);
				else if(gVehData[vehid][vItem11type] == itemtype)
					itemCanCarryCount += ItemsOnVehicleSlot(itemtype, itemid) - VSlotParam6(vehid+1);
			}
			else
				return itemCanCarryCount;
			if(CarsLenghts[i][trunkSpace] >= 12)
			{
				if(gVehData[vehid][VItem12type] == 0)
					itemCanCarryCount += ItemsOnVehicleSlot(itemtype, itemid);
				else if(gVehData[vehid][vItem12type] == itemtype)
					itemCanCarryCount += ItemsOnVehicleSlot(itemtype, itemid) - VSlotParam6(vehid+1);
			}
			else
				return itemCanCarryCount;
			if(CarsLenghts[i][trunkSpace] >= 13)
			{
				if(gVehData[vehid][VItem13type] == 0)
					itemCanCarryCount += ItemsOnVehicleSlot(itemtype, itemid);
				else if(gVehData[vehid][vItem13type] == itemtype)
					itemCanCarryCount += ItemsOnVehicleSlot(itemtype, itemid) - VSlotParam6(vehid+1);
			}
			else
				return itemCanCarryCount;
			if(CarsLenghts[i][trunkSpace] >= 14)
			{
				if(gVehData[vehid][VItem14type] == 0)
					itemCanCarryCount += ItemsOnVehicleSlot(itemtype, itemid);
				else if(gVehData[vehid][vItem14type] == itemtype)
					itemCanCarryCount += ItemsOnVehicleSlot(itemtype, itemid) - VSlotParam6(vehid+1);
			}
			else
				return itemCanCarryCount;
			if(CarsLenghts[i][trunkSpace] >= 15)
			{
				if(gVehData[vehid][VItem15type] == 0)
					itemCanCarryCount += ItemsOnVehicleSlot(itemtype, itemid);
				else if(gVehData[vehid][vItem15type] == itemtype)
					itemCanCarryCount += ItemsOnVehicleSlot(itemtype, itemid) - VSlotParam6(vehid+1);
			}
			else
				return itemCanCarryCount;
		}
	}
	return itemCanCarryCount;
}

stock PlayerFreeSlotCount(playerid)
{
	new slotcount = 0;
	if( gPlayerData[playerid][pItem1type] == 0 )
		slotcount++;
	if( gPlayerData[playerid][pItem2type] == 0 )
		slotcount++;
	if( gPlayerData[playerid][pItem3type] == 0 )
		slotcount++;
	if( gPlayerData[playerid][pItem4type] == 0 )
		slotcount++;
	if( gPlayerData[playerid][pItem5type] == 0 )
		slotcount++;
	if( PHaveExpandItem(playerid) || gPlayerData[playerid][pVipItem] > 0 )
	{
		if( gPlayerData[playerid][pItem6type] == 0 )
			slotcount++;
		if( gPlayerData[playerid][pItem7type] == 0 )
			slotcount++;
		if( gPlayerData[playerid][pItem8type] == 0 )
			slotcount++;
		if( gPlayerData[playerid][pItem9type] == 0 )
			slotcount++;
		if( gPlayerData[playerid][pItem10type] == 0 )
			slotcount++;
		if( gPlayerData[playerid][pItem11type] == 0 )
			slotcount++;
		if( gPlayerData[playerid][pItem12type] == 0 )
			slotcount++;
		if( gPlayerData[playerid][pItem13type] == 0 )
			slotcount++;
		if( gPlayerData[playerid][pItem14type] == 0 )
			slotcount++;
		if( gPlayerData[playerid][pItem15type] == 0 )
			slotcount++;
		if( gPlayerData[playerid][pVipItem] > 0 )
		{
			if( gPlayerData[playerid][pItem16type] == 0 )
				slotcount++;
			if( gPlayerData[playerid][pItem17type] == 0 )
				slotcount++;
			if( gPlayerData[playerid][pItem18type] == 0 )
				slotcount++;
			if( gPlayerData[playerid][pItem19type] == 0 )
				slotcount++;
			if( gPlayerData[playerid][pItem20type] == 0 )
				slotcount++;
			if( gPlayerData[playerid][pItem21type] == 0 )
				slotcount++;
			if( gPlayerData[playerid][pItem22type] == 0 )
				slotcount++;
			if( gPlayerData[playerid][pItem23type] == 0 )
				slotcount++;
			if( gPlayerData[playerid][pItem24type] == 0 )
				slotcount++;
			if( gPlayerData[playerid][pItem25type] == 0 )
				slotcount++;
		}
	}
	return slotcount;
}

stock VehicleFreeSlotCount(vehid)
{
	new slotcount = 0;
	for(new i = 0; i < sizeof(CarsLenghts); i++)
	{
		if(CarsLenghts[i][lenghtModel] == gVehData[vehid][CarModel])
		{
			if(CarsLenghts[i][trunkSpace] >= 1)
			{
				if(gVehData[vehid][VItem1type] == 0)
					slotcount++;
			}
			else
				return slotcount;
			if(CarsLenghts[i][trunkSpace] >= 2)
			{
				if(gVehData[vehid][VItem2type] == 0)
					slotcount++;
			}
			else
				return slotcount;
			if(CarsLenghts[i][trunkSpace] >= 3)
			{
				if(gVehData[vehid][VItem3type] == 0)
					slotcount++;
			}
			else
				return slotcount;
			if(CarsLenghts[i][trunkSpace] >= 4)
			{
				if(gVehData[vehid][VItem4type] == 0)
					slotcount++;
			}
			else
				return slotcount;
			if(CarsLenghts[i][trunkSpace] >= 5)
			{
				if(gVehData[vehid][VItem5type] == 0)
					slotcount++;
			}
			else
				return slotcount;
			if(CarsLenghts[i][trunkSpace] >= 6)
			{
				if(gVehData[vehid][VItem6type] == 0)
					slotcount++;
			}
			else
				return slotcount;
			if(CarsLenghts[i][trunkSpace] >= 7)
			{
				if(gVehData[vehid][VItem7type] == 0)
					slotcount++;
			}
			else
				return slotcount;
			if(CarsLenghts[i][trunkSpace] >= 8)
			{
				if(gVehData[vehid][VItem8type] == 0)
					slotcount++;
			}
			else
				return slotcount;
			if(CarsLenghts[i][trunkSpace] >= 9)
			{
				if(gVehData[vehid][VItem9type] == 0)
					slotcount++;
			}
			else
				return slotcount;
			if(CarsLenghts[i][trunkSpace] >= 10)
			{
				if(gVehData[vehid][VItem10type] == 0)
					slotcount++;
			}
			else
				return slotcount;
			if(CarsLenghts[i][trunkSpace] >= 11)
			{
				if(gVehData[vehid][VItem11type] == 0)
					slotcount++;
			}
			else
				return slotcount;
			if(CarsLenghts[i][trunkSpace] >= 12)
			{
				if(gVehData[vehid][VItem12type] == 0)
					slotcount++;
			}
			else
				return slotcount;
			if(CarsLenghts[i][trunkSpace] >= 13)
			{
				if(gVehData[vehid][VItem13type] == 0)
					slotcount++;
			}
			else
				return slotcount;
			if(CarsLenghts[i][trunkSpace] >= 14)
			{
				if(gVehData[vehid][VItem14type] == 0)
					slotcount++;
			}
			else
				return slotcount;
			if(CarsLenghts[i][trunkSpace] >= 15)
			{
				if(gVehData[vehid][VItem15type] == 0)
					slotcount++;
			}
			else
				return slotcount;
		}
	}
	return slotcount;
}

/*
* Cleans player slot
*/
stock RemovePlayerItemUsed(playerid, slot)
{
	if(slot == 1)
	{
		gPlayerData[playerid][pItem1] = 0;
		gPlayerData[playerid][pItem1type] = 0;
		gPlayerData[playerid][pItem1param] = 0;
		gPlayerData[playerid][pItem1param2] = 0;
		gPlayerData[playerid][pItem1param3] = 0;
		gPlayerData[playerid][pItem1param4] = 0;
		strdel(gPlayerData[playerid][pItem1param5], 0, 64);
		strins(gPlayerData[playerid][pItem1param5], "Puste", 0, 64);
		gPlayerData[playerid][pItem1param6] = 0;

		SavePlayerData(playerid, "Item1");
		SavePlayerData(playerid, "Item1type");
		SavePlayerData(playerid, "Item1param");
		SavePlayerData(playerid, "Item1param2");
		SavePlayerData(playerid, "Item1param3");
		SavePlayerData(playerid, "Item1param4");
		SavePlayerData(playerid, "Item1param5");
		SavePlayerData(playerid, "Item1param6");
	}
	else if (slot == 2)
	{
		gPlayerData[playerid][pItem2] = 0;
		gPlayerData[playerid][pItem2type] = 0;
		gPlayerData[playerid][pItem2param] = 0;
		gPlayerData[playerid][pItem2param2] = 0;
		gPlayerData[playerid][pItem2param3] = 0;
		gPlayerData[playerid][pItem2param4] = 0;
		strdel(gPlayerData[playerid][pItem2param5], 0, 64);
		strins(gPlayerData[playerid][pItem2param5], "Puste", 0, 64);
		gPlayerData[playerid][pItem2param6] = 0;

		SavePlayerData(playerid, "Item2");
		SavePlayerData(playerid, "Item2type");
		SavePlayerData(playerid, "Item2param");
		SavePlayerData(playerid, "Item2param2");
		SavePlayerData(playerid, "Item2param3");
		SavePlayerData(playerid, "Item2param4");
		SavePlayerData(playerid, "Item2param5");
		SavePlayerData(playerid, "Item2param6");
	}
	else if (slot == 3)
	{
		gPlayerData[playerid][pItem3] = 0;
		gPlayerData[playerid][pItem3type] = 0;
		gPlayerData[playerid][pItem3param] = 0;
		gPlayerData[playerid][pItem3param2] = 0;
		gPlayerData[playerid][pItem3param3] = 0;
		gPlayerData[playerid][pItem3param4] = 0;
		strdel(gPlayerData[playerid][pItem3param5], 0, 64);
		strins(gPlayerData[playerid][pItem3param5], "Puste", 0, 64);
		gPlayerData[playerid][pItem3param6] = 0;

		SavePlayerData(playerid, "Item3");
		SavePlayerData(playerid, "Item3type");
		SavePlayerData(playerid, "Item3param");
		SavePlayerData(playerid, "Item3param2");
		SavePlayerData(playerid, "Item3param3");
		SavePlayerData(playerid, "Item3param4");
		SavePlayerData(playerid, "Item3param5");
		SavePlayerData(playerid, "Item3param6");
	}
	else if (slot == 4)
	{
		gPlayerData[playerid][pItem4] = 0;
		gPlayerData[playerid][pItem4type] = 0;
		gPlayerData[playerid][pItem4param] = 0;
		gPlayerData[playerid][pItem4param2] = 0;
		gPlayerData[playerid][pItem4param3] = 0;
		gPlayerData[playerid][pItem4param4] = 0;
		strdel(gPlayerData[playerid][pItem4param5], 0, 64);
		strins(gPlayerData[playerid][pItem4param5], "Puste", 0, 64);
		gPlayerData[playerid][pItem4param6] = 0;

		SavePlayerData(playerid, "Item4");
		SavePlayerData(playerid, "Item4type");
		SavePlayerData(playerid, "Item4param");
		SavePlayerData(playerid, "Item4param2");
		SavePlayerData(playerid, "Item4param3");
		SavePlayerData(playerid, "Item4param4");
		SavePlayerData(playerid, "Item4param5");
		SavePlayerData(playerid, "Item4param6");
	}
	else if (slot == 5)
	{
		gPlayerData[playerid][pItem5] = 0;
		gPlayerData[playerid][pItem5type] = 0;
		gPlayerData[playerid][pItem5param] = 0;
		gPlayerData[playerid][pItem5param2] = 0;
		gPlayerData[playerid][pItem5param3] = 0;
		gPlayerData[playerid][pItem5param4] = 0;
		strdel(gPlayerData[playerid][pItem5param5], 0, 64);
		strins(gPlayerData[playerid][pItem5param5], "Puste", 0, 64);
		gPlayerData[playerid][pItem5param6] = 0;

		SavePlayerData(playerid, "Item5");
		SavePlayerData(playerid, "Item5type");
		SavePlayerData(playerid, "Item5param");
		SavePlayerData(playerid, "Item5param2");
		SavePlayerData(playerid, "Item5param3");
		SavePlayerData(playerid, "Item5param4");
		SavePlayerData(playerid, "Item5param5");
		SavePlayerData(playerid, "Item5param6");
	}
	else if (slot == 6)
	{
		gPlayerData[playerid][pItem6] = 0;
		gPlayerData[playerid][pItem6type] = 0;
		gPlayerData[playerid][pItem6param] = 0;
		gPlayerData[playerid][pItem6param2] = 0;
		gPlayerData[playerid][pItem6param3] = 0;
		gPlayerData[playerid][pItem6param4] = 0;
		strdel(gPlayerData[playerid][pItem6param5], 0, 64);
		strins(gPlayerData[playerid][pItem6param5], "Puste", 0, 64);
		gPlayerData[playerid][pItem6param6] = 0;

		SavePlayerData(playerid, "Item6");
		SavePlayerData(playerid, "Item6type");
		SavePlayerData(playerid, "Item6param");
		SavePlayerData(playerid, "Item6param2");
		SavePlayerData(playerid, "Item6param3");
		SavePlayerData(playerid, "Item6param4");
		SavePlayerData(playerid, "Item6param5");
		SavePlayerData(playerid, "Item6param6");
	}
	else if (slot == 7)
	{
		gPlayerData[playerid][pItem7] = 0;
		gPlayerData[playerid][pItem7type] = 0;
		gPlayerData[playerid][pItem7param] = 0;
		gPlayerData[playerid][pItem7param2] = 0;
		gPlayerData[playerid][pItem7param3] = 0;
		gPlayerData[playerid][pItem7param4] = 0;
		strdel(gPlayerData[playerid][pItem7param5], 0, 64);
		strins(gPlayerData[playerid][pItem7param5], "Puste", 0, 64);
		gPlayerData[playerid][pItem7param6] = 0;

		SavePlayerData(playerid, "Item7");
		SavePlayerData(playerid, "Item7type");
		SavePlayerData(playerid, "Item7param");
		SavePlayerData(playerid, "Item7param2");
		SavePlayerData(playerid, "Item7param3");
		SavePlayerData(playerid, "Item7param4");
		SavePlayerData(playerid, "Item7param5");
		SavePlayerData(playerid, "Item7param6");
	}
	else if (slot == 8)
	{
		gPlayerData[playerid][pItem8] = 0;
		gPlayerData[playerid][pItem8type] = 0;
		gPlayerData[playerid][pItem8param] = 0;
		gPlayerData[playerid][pItem8param2] = 0;
		gPlayerData[playerid][pItem8param3] = 0;
		gPlayerData[playerid][pItem8param4] = 0;
		strdel(gPlayerData[playerid][pItem8param5], 0, 64);
		strins(gPlayerData[playerid][pItem8param5], "Puste", 0, 64);
		gPlayerData[playerid][pItem8param6] = 0;

		SavePlayerData(playerid, "Item8");
		SavePlayerData(playerid, "Item8type");
		SavePlayerData(playerid, "Item8param");
		SavePlayerData(playerid, "Item8param2");
		SavePlayerData(playerid, "Item8param3");
		SavePlayerData(playerid, "Item8param4");
		SavePlayerData(playerid, "Item8param5");
		SavePlayerData(playerid, "Item8param6");
	}
	else if (slot == 9)
	{
		gPlayerData[playerid][pItem9] = 0;
		gPlayerData[playerid][pItem9type] = 0;
		gPlayerData[playerid][pItem9param] = 0;
		gPlayerData[playerid][pItem9param2] = 0;
		gPlayerData[playerid][pItem9param3] = 0;
		gPlayerData[playerid][pItem9param4] = 0;
		strdel(gPlayerData[playerid][pItem9param5], 0, 64);
		strins(gPlayerData[playerid][pItem9param5], "Puste", 0, 64);
		gPlayerData[playerid][pItem9param6] = 0;
		
		SavePlayerData(playerid, "Item9");
		SavePlayerData(playerid, "Item9type");
		SavePlayerData(playerid, "Item9param");
		SavePlayerData(playerid, "Item9param2");
		SavePlayerData(playerid, "Item9param3");
		SavePlayerData(playerid, "Item9param4");
		SavePlayerData(playerid, "Item9param5");
		SavePlayerData(playerid, "Item9param6");
	}
	else if (slot == 10)
	{
		gPlayerData[playerid][pItem10] = 0;
		gPlayerData[playerid][pItem10type] = 0;
		gPlayerData[playerid][pItem10param] = 0;
		gPlayerData[playerid][pItem10param2] = 0;
		gPlayerData[playerid][pItem10param3] = 0;
		gPlayerData[playerid][pItem10param4] = 0;
		strdel(gPlayerData[playerid][pItem10param5], 0, 64);
		strins(gPlayerData[playerid][pItem10param5], "Puste", 0, 64);
		gPlayerData[playerid][pItem10param6] = 0;

		SavePlayerData(playerid, "Item10");
		SavePlayerData(playerid, "Item10type");
		SavePlayerData(playerid, "Item10param");
		SavePlayerData(playerid, "Item10param2");
		SavePlayerData(playerid, "Item10param3");
		SavePlayerData(playerid, "Item10param4");
		SavePlayerData(playerid, "Item10param5");
		SavePlayerData(playerid, "Item10param6");
	}
	else if (slot == 11)
	{
		gPlayerData[playerid][pItem11] = 0;
		gPlayerData[playerid][pItem11type] = 0;
		gPlayerData[playerid][pItem11param] = 0;
		gPlayerData[playerid][pItem11param2] = 0;
		gPlayerData[playerid][pItem11param3] = 0;
		gPlayerData[playerid][pItem11param4] = 0;
		strdel(gPlayerData[playerid][pItem11param5], 0, 64);
		strins(gPlayerData[playerid][pItem11param5], "Puste", 0, 64);
		gPlayerData[playerid][pItem11param6] = 0;

		SavePlayerData(playerid, "Item11");
		SavePlayerData(playerid, "Item11type");
		SavePlayerData(playerid, "Item11param");
		SavePlayerData(playerid, "Item11param2");
		SavePlayerData(playerid, "Item11param3");
		SavePlayerData(playerid, "Item11param4");
		SavePlayerData(playerid, "Item11param5");
		SavePlayerData(playerid, "Item11param6");
	}
	else if (slot == 12)
	{
		gPlayerData[playerid][pItem12] = 0;
		gPlayerData[playerid][pItem12type] = 0;
		gPlayerData[playerid][pItem12param] = 0;
		gPlayerData[playerid][pItem12param2] = 0;
		gPlayerData[playerid][pItem12param3] = 0;
		gPlayerData[playerid][pItem12param4] = 0;
		strdel(gPlayerData[playerid][pItem12param5], 0, 64);
		strins(gPlayerData[playerid][pItem12param5], "Puste", 0, 64);
		gPlayerData[playerid][pItem12param6] = 0;

		SavePlayerData(playerid, "Item12");
		SavePlayerData(playerid, "Item12type");
		SavePlayerData(playerid, "Item12param");
		SavePlayerData(playerid, "Item12param2");
		SavePlayerData(playerid, "Item12param3");
		SavePlayerData(playerid, "Item12param4");
		SavePlayerData(playerid, "Item12param5");
		SavePlayerData(playerid, "Item12param6");
	}
	else if (slot == 13)
	{
		gPlayerData[playerid][pItem13] = 0;
		gPlayerData[playerid][pItem13type] = 0;
		gPlayerData[playerid][pItem13param] = 0;
		gPlayerData[playerid][pItem13param2] = 0;
		gPlayerData[playerid][pItem13param3] = 0;
		gPlayerData[playerid][pItem13param4] = 0;
		strdel(gPlayerData[playerid][pItem13param5], 0, 64);
		strins(gPlayerData[playerid][pItem13param5], "Puste", 0, 64);
		gPlayerData[playerid][pItem13param6] = 0;

		SavePlayerData(playerid, "Item13");
		SavePlayerData(playerid, "Item13type");
		SavePlayerData(playerid, "Item13param");
		SavePlayerData(playerid, "Item13param2");
		SavePlayerData(playerid, "Item13param3");
		SavePlayerData(playerid, "Item13param4");
		SavePlayerData(playerid, "Item13param5");
		SavePlayerData(playerid, "Item13param6");
	}
	else if (slot == 14)
	{
		gPlayerData[playerid][pItem14] = 0;
		gPlayerData[playerid][pItem14type] = 0;
		gPlayerData[playerid][pItem14param] = 0;
		gPlayerData[playerid][pItem14param2] = 0;
		gPlayerData[playerid][pItem14param3] = 0;
		gPlayerData[playerid][pItem14param4] = 0;
		strdel(gPlayerData[playerid][pItem14param5], 0, 64);
		strins(gPlayerData[playerid][pItem14param5], "Puste", 0, 64);
		gPlayerData[playerid][pItem14param6] = 0;

		SavePlayerData(playerid, "Item14");
		SavePlayerData(playerid, "Item14type");
		SavePlayerData(playerid, "Item14param");
		SavePlayerData(playerid, "Item14param2");
		SavePlayerData(playerid, "Item14param3");
		SavePlayerData(playerid, "Item14param4");
		SavePlayerData(playerid, "Item14param5");
		SavePlayerData(playerid, "Item14param6");
	}
	else if (slot == 15)
	{
		gPlayerData[playerid][pItem15] = 0;
		gPlayerData[playerid][pItem15type] = 0;
		gPlayerData[playerid][pItem15param] = 0;
		gPlayerData[playerid][pItem15param2] = 0;
		gPlayerData[playerid][pItem15param3] = 0;
		gPlayerData[playerid][pItem15param4] = 0;
		strdel(gPlayerData[playerid][pItem15param5], 0, 64);
		strins(gPlayerData[playerid][pItem15param5], "Puste", 0, 64);
		gPlayerData[playerid][pItem15param6] = 0;

		SavePlayerData(playerid, "Item15");
		SavePlayerData(playerid, "Item15type");
		SavePlayerData(playerid, "Item15param");
		SavePlayerData(playerid, "Item15param2");
		SavePlayerData(playerid, "Item15param3");
		SavePlayerData(playerid, "Item15param4");
		SavePlayerData(playerid, "Item15param5");
		SavePlayerData(playerid, "Item15param6");
	}
	else if (slot == 16)
	{
		gPlayerData[playerid][pItem16] = 0;
		gPlayerData[playerid][pItem16type] = 0;
		gPlayerData[playerid][pItem16param] = 0;
		gPlayerData[playerid][pItem16param2] = 0;
		gPlayerData[playerid][pItem16param3] = 0;
		gPlayerData[playerid][pItem16param4] = 0;
		strdel(gPlayerData[playerid][pItem16param5], 0, 64);
		strins(gPlayerData[playerid][pItem16param5], "Puste", 0, 64);
		gPlayerData[playerid][pItem16param6] = 0;

		SavePlayerData(playerid, "Item16");
		SavePlayerData(playerid, "Item16type");
		SavePlayerData(playerid, "Item16param");
		SavePlayerData(playerid, "Item16param2");
		SavePlayerData(playerid, "Item16param3");
		SavePlayerData(playerid, "Item16param4");
		SavePlayerData(playerid, "Item16param5");
		SavePlayerData(playerid, "Item16param6");
	}
	else if (slot == 17)
	{
		gPlayerData[playerid][pItem17] = 0;
		gPlayerData[playerid][pItem17type] = 0;
		gPlayerData[playerid][pItem17param] = 0;
		gPlayerData[playerid][pItem17param2] = 0;
		gPlayerData[playerid][pItem17param3] = 0;
		gPlayerData[playerid][pItem17param4] = 0;
		strdel(gPlayerData[playerid][pItem17param5], 0, 64);
		strins(gPlayerData[playerid][pItem17param5], "Puste", 0, 64);
		gPlayerData[playerid][pItem17param6] = 0;

		SavePlayerData(playerid, "Item17");
		SavePlayerData(playerid, "Item17type");
		SavePlayerData(playerid, "Item17param");
		SavePlayerData(playerid, "Item17param2");
		SavePlayerData(playerid, "Item17param3");
		SavePlayerData(playerid, "Item17param4");
		SavePlayerData(playerid, "Item17param5");
		SavePlayerData(playerid, "Item17param6");
	}
	else if (slot == 18)
	{
		gPlayerData[playerid][pItem18] = 0;
		gPlayerData[playerid][pItem18type] = 0;
		gPlayerData[playerid][pItem18param] = 0;
		gPlayerData[playerid][pItem18param2] = 0;
		gPlayerData[playerid][pItem18param3] = 0;
		gPlayerData[playerid][pItem18param4] = 0;
		strdel(gPlayerData[playerid][pItem18param5], 0, 64);
		strins(gPlayerData[playerid][pItem18param5], "Puste", 0, 64);
		gPlayerData[playerid][pItem18param6] = 0;

		SavePlayerData(playerid, "Item18");
		SavePlayerData(playerid, "Item18type");
		SavePlayerData(playerid, "Item18param");
		SavePlayerData(playerid, "Item18param2");
		SavePlayerData(playerid, "Item18param3");
		SavePlayerData(playerid, "Item18param4");
		SavePlayerData(playerid, "Item18param5");
		SavePlayerData(playerid, "Item18param6");
	}
	else if (slot == 19)
	{
		gPlayerData[playerid][pItem19] = 0;
		gPlayerData[playerid][pItem19type] = 0;
		gPlayerData[playerid][pItem19param] = 0;
		gPlayerData[playerid][pItem19param2] = 0;
		gPlayerData[playerid][pItem19param3] = 0;
		gPlayerData[playerid][pItem19param4] = 0;
		strdel(gPlayerData[playerid][pItem19param5], 0, 64);
		strins(gPlayerData[playerid][pItem19param5], "Puste", 0, 64);
		gPlayerData[playerid][pItem19param6] = 0;

		SavePlayerData(playerid, "Item19");
		SavePlayerData(playerid, "Item19type");
		SavePlayerData(playerid, "Item19param");
		SavePlayerData(playerid, "Item19param2");
		SavePlayerData(playerid, "Item19param3");
		SavePlayerData(playerid, "Item19param4");
		SavePlayerData(playerid, "Item19param5");
		SavePlayerData(playerid, "Item19param6");
	}
	else if (slot == 20)
	{
		gPlayerData[playerid][pItem20] = 0;
		gPlayerData[playerid][pItem20type] = 0;
		gPlayerData[playerid][pItem20param] = 0;
		gPlayerData[playerid][pItem20param2] = 0;
		gPlayerData[playerid][pItem20param3] = 0;
		gPlayerData[playerid][pItem20param4] = 0;
		strdel(gPlayerData[playerid][pItem20param5], 0, 64);
		strins(gPlayerData[playerid][pItem20param5], "Puste", 0, 64);
		gPlayerData[playerid][pItem20param6] = 0;

		SavePlayerData(playerid, "Item20");
		SavePlayerData(playerid, "Item20type");
		SavePlayerData(playerid, "Item20param");
		SavePlayerData(playerid, "Item20param2");
		SavePlayerData(playerid, "Item20param3");
		SavePlayerData(playerid, "Item20param4");
		SavePlayerData(playerid, "Item20param5");
		SavePlayerData(playerid, "Item20param6");
	}
	else if (slot == 21)
	{
		gPlayerData[playerid][pItem21] = 0;
		gPlayerData[playerid][pItem21type] = 0;
		gPlayerData[playerid][pItem21param] = 0;
		gPlayerData[playerid][pItem21param2] = 0;
		gPlayerData[playerid][pItem21param3] = 0;
		gPlayerData[playerid][pItem21param4] = 0;
		strdel(gPlayerData[playerid][pItem21param5], 0, 64);
		strins(gPlayerData[playerid][pItem21param5], "Puste", 0, 64);
		gPlayerData[playerid][pItem21param6] = 0;

		SavePlayerData(playerid, "Item21");
		SavePlayerData(playerid, "Item21type");
		SavePlayerData(playerid, "Item21param");
		SavePlayerData(playerid, "Item21param2");
		SavePlayerData(playerid, "Item21param3");
		SavePlayerData(playerid, "Item21param4");
		SavePlayerData(playerid, "Item21param5");
		SavePlayerData(playerid, "Item21param6");
	}
	else if (slot == 22)
	{
		gPlayerData[playerid][pItem22] = 0;
		gPlayerData[playerid][pItem22type] = 0;
		gPlayerData[playerid][pItem22param] = 0;
		gPlayerData[playerid][pItem22param2] = 0;
		gPlayerData[playerid][pItem22param3] = 0;
		gPlayerData[playerid][pItem22param4] = 0;
		strdel(gPlayerData[playerid][pItem22param5], 0, 64);
		strins(gPlayerData[playerid][pItem22param5], "Puste", 0, 64);
		gPlayerData[playerid][pItem22param6] = 0;

		SavePlayerData(playerid, "Item22");
		SavePlayerData(playerid, "Item22type");
		SavePlayerData(playerid, "Item22param");
		SavePlayerData(playerid, "Item22param2");
		SavePlayerData(playerid, "Item22param3");
		SavePlayerData(playerid, "Item22param4");
		SavePlayerData(playerid, "Item22param5");
		SavePlayerData(playerid, "Item22param6");
	}
	else if (slot == 23)
	{
		gPlayerData[playerid][pItem23] = 0;
		gPlayerData[playerid][pItem23type] = 0;
		gPlayerData[playerid][pItem23param] = 0;
		gPlayerData[playerid][pItem23param2] = 0;
		gPlayerData[playerid][pItem23param3] = 0;
		gPlayerData[playerid][pItem23param4] = 0;
		strdel(gPlayerData[playerid][pItem23param5], 0, 64);
		strins(gPlayerData[playerid][pItem23param5], "Puste", 0, 64);
		gPlayerData[playerid][pItem23param6] = 0;

		SavePlayerData(playerid, "Item23");
		SavePlayerData(playerid, "Item23type");
		SavePlayerData(playerid, "Item23param");
		SavePlayerData(playerid, "Item23param2");
		SavePlayerData(playerid, "Item23param3");
		SavePlayerData(playerid, "Item23param4");
		SavePlayerData(playerid, "Item23param5");
		SavePlayerData(playerid, "Item23param6");
	}
	else if (slot == 24)
	{
		gPlayerData[playerid][pItem24] = 0;
		gPlayerData[playerid][pItem24type] = 0;
		gPlayerData[playerid][pItem24param] = 0;
		gPlayerData[playerid][pItem24param2] = 0;
		gPlayerData[playerid][pItem24param3] = 0;
		gPlayerData[playerid][pItem24param4] = 0;
		strdel(gPlayerData[playerid][pItem24param5], 0, 64);
		strins(gPlayerData[playerid][pItem24param5], "Puste", 0, 64);
		gPlayerData[playerid][pItem24param6] = 0;

		SavePlayerData(playerid, "Item24");
		SavePlayerData(playerid, "Item24type");
		SavePlayerData(playerid, "Item24param");
		SavePlayerData(playerid, "Item24param2");
		SavePlayerData(playerid, "Item24param3");
		SavePlayerData(playerid, "Item24param4");
		SavePlayerData(playerid, "Item24param5");
		SavePlayerData(playerid, "Item24param6");
	}
	else if (slot == 25)
	{
		gPlayerData[playerid][pItem25] = 0;
		gPlayerData[playerid][pItem25type] = 0;
		gPlayerData[playerid][pItem25param] = 0;
		gPlayerData[playerid][pItem25param2] = 0;
		gPlayerData[playerid][pItem25param3] = 0;
		gPlayerData[playerid][pItem25param4] = 0;
		strdel(gPlayerData[playerid][pItem25param5], 0, 64);
		strins(gPlayerData[playerid][pItem25param5], "Puste", 0, 64);
		gPlayerData[playerid][pItem25param6] = 0;

		SavePlayerData(playerid, "Item25");
		SavePlayerData(playerid, "Item25type");
		SavePlayerData(playerid, "Item25param");
		SavePlayerData(playerid, "Item25param2");
		SavePlayerData(playerid, "Item25param3");
		SavePlayerData(playerid, "Item25param4");
		SavePlayerData(playerid, "Item25param5");
		SavePlayerData(playerid, "Item25param6");
	}
	return 1;
}

/*
* Remove exact amount of item from slot
*/
stock RemovePlayerItemExUsed(playerid, slot, value = 1)
{
	/* Usuniecie punktow z mapki */
	if(SlotParam6(playerid, slot) <= value)
	{
		if( PSlotItemType(playerid, slot) == 1 && ShowSlotItem(playerid, slot) == 105 )
			RemovePlayerMapIcons( playerid, 1 );
		RemovePlayerItemUsed(playerid, slot);
	}
	else
	{
		SetPSlotParam6(playerid, slot, SlotParam6(playerid, slot)-value);
	}
	return 1;
}

/*
* Cleans player slot and create pickup
*/
stock RemovePlayerItem(playerid, slot)
{
	InsertPlayerPickupItem(playerid, slot, SlotParam6(playerid, slot) );
	if(slot == 1)
	{
		gPlayerData[playerid][pItem1] = 0;
		gPlayerData[playerid][pItem1type] = 0;
		gPlayerData[playerid][pItem1param] = 0;
		gPlayerData[playerid][pItem1param2] = 0;
		gPlayerData[playerid][pItem1param3] = 0;
		gPlayerData[playerid][pItem1param4] = 0;
		strdel(gPlayerData[playerid][pItem1param5], 0, 64);
		strins(gPlayerData[playerid][pItem1param5], "Puste", 0, 64);
		gPlayerData[playerid][pItem1param6] = 0;

		SavePlayerData(playerid, "Item1");
		SavePlayerData(playerid, "Item1type");
		SavePlayerData(playerid, "Item1param");
		SavePlayerData(playerid, "Item1param2");
		SavePlayerData(playerid, "Item1param3");
		SavePlayerData(playerid, "Item1param4");
		SavePlayerData(playerid, "Item1param5");
		SavePlayerData(playerid, "Item1param6");
	}
	else if (slot == 2)
	{
		gPlayerData[playerid][pItem2] = 0;
		gPlayerData[playerid][pItem2type] = 0;
		gPlayerData[playerid][pItem2param] = 0;
		gPlayerData[playerid][pItem2param2] = 0;
		gPlayerData[playerid][pItem2param3] = 0;
		gPlayerData[playerid][pItem2param4] = 0;
		strdel(gPlayerData[playerid][pItem2param5], 0, 64);
		strins(gPlayerData[playerid][pItem2param5], "Puste", 0, 64);
		gPlayerData[playerid][pItem2param6] = 0;

		SavePlayerData(playerid, "Item2");
		SavePlayerData(playerid, "Item2type");
		SavePlayerData(playerid, "Item2param");
		SavePlayerData(playerid, "Item2param2");
		SavePlayerData(playerid, "Item2param3");
		SavePlayerData(playerid, "Item2param4");
		SavePlayerData(playerid, "Item2param5");
		SavePlayerData(playerid, "Item2param6");
	}
	else if (slot == 3)
	{
		gPlayerData[playerid][pItem3] = 0;
		gPlayerData[playerid][pItem3type] = 0;
		gPlayerData[playerid][pItem3param] = 0;
		gPlayerData[playerid][pItem3param2] = 0;
		gPlayerData[playerid][pItem3param3] = 0;
		gPlayerData[playerid][pItem3param4] = 0;
		strdel(gPlayerData[playerid][pItem3param5], 0, 64);
		strins(gPlayerData[playerid][pItem3param5], "Puste", 0, 64);
		gPlayerData[playerid][pItem3param6] = 0;

		SavePlayerData(playerid, "Item3");
		SavePlayerData(playerid, "Item3type");
		SavePlayerData(playerid, "Item3param");
		SavePlayerData(playerid, "Item3param2");
		SavePlayerData(playerid, "Item3param3");
		SavePlayerData(playerid, "Item3param4");
		SavePlayerData(playerid, "Item3param5");
		SavePlayerData(playerid, "Item3param6");
	}
	else if (slot == 4)
	{
		gPlayerData[playerid][pItem4] = 0;
		gPlayerData[playerid][pItem4type] = 0;
		gPlayerData[playerid][pItem4param] = 0;
		gPlayerData[playerid][pItem4param2] = 0;
		gPlayerData[playerid][pItem4param3] = 0;
		gPlayerData[playerid][pItem4param4] = 0;
		strdel(gPlayerData[playerid][pItem4param5], 0, 64);
		strins(gPlayerData[playerid][pItem4param5], "Puste", 0, 64);
		gPlayerData[playerid][pItem4param6] = 0;

		SavePlayerData(playerid, "Item4");
		SavePlayerData(playerid, "Item4type");
		SavePlayerData(playerid, "Item4param");
		SavePlayerData(playerid, "Item4param2");
		SavePlayerData(playerid, "Item4param3");
		SavePlayerData(playerid, "Item4param4");
		SavePlayerData(playerid, "Item4param5");
		SavePlayerData(playerid, "Item4param6");
	}
	else if (slot == 5)
	{
		gPlayerData[playerid][pItem5] = 0;
		gPlayerData[playerid][pItem5type] = 0;
		gPlayerData[playerid][pItem5param] = 0;
		gPlayerData[playerid][pItem5param2] = 0;
		gPlayerData[playerid][pItem5param3] = 0;
		gPlayerData[playerid][pItem5param4] = 0;
		strdel(gPlayerData[playerid][pItem5param5], 0, 64);
		strins(gPlayerData[playerid][pItem5param5], "Puste", 0, 64);
		gPlayerData[playerid][pItem5param6] = 0;

		SavePlayerData(playerid, "Item5");
		SavePlayerData(playerid, "Item5type");
		SavePlayerData(playerid, "Item5param");
		SavePlayerData(playerid, "Item5param2");
		SavePlayerData(playerid, "Item5param3");
		SavePlayerData(playerid, "Item5param4");
		SavePlayerData(playerid, "Item5param5");
		SavePlayerData(playerid, "Item5param6");
	}
	else if (slot == 6)
	{
		gPlayerData[playerid][pItem6] = 0;
		gPlayerData[playerid][pItem6type] = 0;
		gPlayerData[playerid][pItem6param] = 0;
		gPlayerData[playerid][pItem6param2] = 0;
		gPlayerData[playerid][pItem6param3] = 0;
		gPlayerData[playerid][pItem6param4] = 0;
		strdel(gPlayerData[playerid][pItem6param5], 0, 64);
		strins(gPlayerData[playerid][pItem6param5], "Puste", 0, 64);
		gPlayerData[playerid][pItem6param6] = 0;

		SavePlayerData(playerid, "Item6");
		SavePlayerData(playerid, "Item6type");
		SavePlayerData(playerid, "Item6param");
		SavePlayerData(playerid, "Item6param2");
		SavePlayerData(playerid, "Item6param3");
		SavePlayerData(playerid, "Item6param4");
		SavePlayerData(playerid, "Item6param5");
		SavePlayerData(playerid, "Item6param6");
	}
	else if (slot == 7)
	{
		gPlayerData[playerid][pItem7] = 0;
		gPlayerData[playerid][pItem7type] = 0;
		gPlayerData[playerid][pItem7param] = 0;
		gPlayerData[playerid][pItem7param2] = 0;
		gPlayerData[playerid][pItem7param3] = 0;
		gPlayerData[playerid][pItem7param4] = 0;
		strdel(gPlayerData[playerid][pItem7param5], 0, 64);
		strins(gPlayerData[playerid][pItem7param5], "Puste", 0, 64);
		gPlayerData[playerid][pItem7param6] = 0;

		SavePlayerData(playerid, "Item7");
		SavePlayerData(playerid, "Item7type");
		SavePlayerData(playerid, "Item7param");
		SavePlayerData(playerid, "Item7param2");
		SavePlayerData(playerid, "Item7param3");
		SavePlayerData(playerid, "Item7param4");
		SavePlayerData(playerid, "Item7param5");
		SavePlayerData(playerid, "Item7param6");
	}
	else if (slot == 8)
	{
		gPlayerData[playerid][pItem8] = 0;
		gPlayerData[playerid][pItem8type] = 0;
		gPlayerData[playerid][pItem8param] = 0;
		gPlayerData[playerid][pItem8param2] = 0;
		gPlayerData[playerid][pItem8param3] = 0;
		gPlayerData[playerid][pItem8param4] = 0;
		strdel(gPlayerData[playerid][pItem8param5], 0, 64);
		strins(gPlayerData[playerid][pItem8param5], "Puste", 0, 64);
		gPlayerData[playerid][pItem8param6] = 0;

		SavePlayerData(playerid, "Item8");
		SavePlayerData(playerid, "Item8type");
		SavePlayerData(playerid, "Item8param");
		SavePlayerData(playerid, "Item8param2");
		SavePlayerData(playerid, "Item8param3");
		SavePlayerData(playerid, "Item8param4");
		SavePlayerData(playerid, "Item8param5");
		SavePlayerData(playerid, "Item8param6");
	}
	else if (slot == 9)
	{
		gPlayerData[playerid][pItem9] = 0;
		gPlayerData[playerid][pItem9type] = 0;
		gPlayerData[playerid][pItem9param] = 0;
		gPlayerData[playerid][pItem9param2] = 0;
		gPlayerData[playerid][pItem9param3] = 0;
		gPlayerData[playerid][pItem9param4] = 0;
		strdel(gPlayerData[playerid][pItem9param5], 0, 64);
		strins(gPlayerData[playerid][pItem9param5], "Puste", 0, 64);
		gPlayerData[playerid][pItem9param6] = 0;
		
		SavePlayerData(playerid, "Item9");
		SavePlayerData(playerid, "Item9type");
		SavePlayerData(playerid, "Item9param");
		SavePlayerData(playerid, "Item9param2");
		SavePlayerData(playerid, "Item9param3");
		SavePlayerData(playerid, "Item9param4");
		SavePlayerData(playerid, "Item9param5");
		SavePlayerData(playerid, "Item9param6");
	}
	else if (slot == 10)
	{
		gPlayerData[playerid][pItem10] = 0;
		gPlayerData[playerid][pItem10type] = 0;
		gPlayerData[playerid][pItem10param] = 0;
		gPlayerData[playerid][pItem10param2] = 0;
		gPlayerData[playerid][pItem10param3] = 0;
		gPlayerData[playerid][pItem10param4] = 0;
		strdel(gPlayerData[playerid][pItem10param5], 0, 64);
		strins(gPlayerData[playerid][pItem10param5], "Puste", 0, 64);
		gPlayerData[playerid][pItem10param6] = 0;

		SavePlayerData(playerid, "Item10");
		SavePlayerData(playerid, "Item10type");
		SavePlayerData(playerid, "Item10param");
		SavePlayerData(playerid, "Item10param2");
		SavePlayerData(playerid, "Item10param3");
		SavePlayerData(playerid, "Item10param4");
		SavePlayerData(playerid, "Item10param5");
		SavePlayerData(playerid, "Item10param6");
	}
	else if (slot == 11)
	{
		gPlayerData[playerid][pItem11] = 0;
		gPlayerData[playerid][pItem11type] = 0;
		gPlayerData[playerid][pItem11param] = 0;
		gPlayerData[playerid][pItem11param2] = 0;
		gPlayerData[playerid][pItem11param3] = 0;
		gPlayerData[playerid][pItem11param4] = 0;
		strdel(gPlayerData[playerid][pItem11param5], 0, 64);
		strins(gPlayerData[playerid][pItem11param5], "Puste", 0, 64);
		gPlayerData[playerid][pItem11param6] = 0;

		SavePlayerData(playerid, "Item11");
		SavePlayerData(playerid, "Item11type");
		SavePlayerData(playerid, "Item11param");
		SavePlayerData(playerid, "Item11param2");
		SavePlayerData(playerid, "Item11param3");
		SavePlayerData(playerid, "Item11param4");
		SavePlayerData(playerid, "Item11param5");
		SavePlayerData(playerid, "Item11param6");
	}
	else if (slot == 12)
	{
		gPlayerData[playerid][pItem12] = 0;
		gPlayerData[playerid][pItem12type] = 0;
		gPlayerData[playerid][pItem12param] = 0;
		gPlayerData[playerid][pItem12param2] = 0;
		gPlayerData[playerid][pItem12param3] = 0;
		gPlayerData[playerid][pItem12param4] = 0;
		strdel(gPlayerData[playerid][pItem12param5], 0, 64);
		strins(gPlayerData[playerid][pItem12param5], "Puste", 0, 64);
		gPlayerData[playerid][pItem12param6] = 0;

		SavePlayerData(playerid, "Item12");
		SavePlayerData(playerid, "Item12type");
		SavePlayerData(playerid, "Item12param");
		SavePlayerData(playerid, "Item12param2");
		SavePlayerData(playerid, "Item12param3");
		SavePlayerData(playerid, "Item12param4");
		SavePlayerData(playerid, "Item12param5");
		SavePlayerData(playerid, "Item12param6");
	}
	else if (slot == 13)
	{
		gPlayerData[playerid][pItem13] = 0;
		gPlayerData[playerid][pItem13type] = 0;
		gPlayerData[playerid][pItem13param] = 0;
		gPlayerData[playerid][pItem13param2] = 0;
		gPlayerData[playerid][pItem13param3] = 0;
		gPlayerData[playerid][pItem13param4] = 0;
		strdel(gPlayerData[playerid][pItem13param5], 0, 64);
		strins(gPlayerData[playerid][pItem13param5], "Puste", 0, 64);
		gPlayerData[playerid][pItem13param6] = 0;

		SavePlayerData(playerid, "Item13");
		SavePlayerData(playerid, "Item13type");
		SavePlayerData(playerid, "Item13param");
		SavePlayerData(playerid, "Item13param2");
		SavePlayerData(playerid, "Item13param3");
		SavePlayerData(playerid, "Item13param4");
		SavePlayerData(playerid, "Item13param5");
		SavePlayerData(playerid, "Item13param6");
	}
	else if (slot == 14)
	{
		gPlayerData[playerid][pItem14] = 0;
		gPlayerData[playerid][pItem14type] = 0;
		gPlayerData[playerid][pItem14param] = 0;
		gPlayerData[playerid][pItem14param2] = 0;
		gPlayerData[playerid][pItem14param3] = 0;
		gPlayerData[playerid][pItem14param4] = 0;
		strdel(gPlayerData[playerid][pItem14param5], 0, 64);
		strins(gPlayerData[playerid][pItem14param5], "Puste", 0, 64);
		gPlayerData[playerid][pItem14param6] = 0;

		SavePlayerData(playerid, "Item14");
		SavePlayerData(playerid, "Item14type");
		SavePlayerData(playerid, "Item14param");
		SavePlayerData(playerid, "Item14param2");
		SavePlayerData(playerid, "Item14param3");
		SavePlayerData(playerid, "Item14param4");
		SavePlayerData(playerid, "Item14param5");
		SavePlayerData(playerid, "Item14param6");
	}
	else if (slot == 15)
	{
		gPlayerData[playerid][pItem15] = 0;
		gPlayerData[playerid][pItem15type] = 0;
		gPlayerData[playerid][pItem15param] = 0;
		gPlayerData[playerid][pItem15param2] = 0;
		gPlayerData[playerid][pItem15param3] = 0;
		gPlayerData[playerid][pItem15param4] = 0;
		strdel(gPlayerData[playerid][pItem15param5], 0, 64);
		strins(gPlayerData[playerid][pItem15param5], "Puste", 0, 64);
		gPlayerData[playerid][pItem15param6] = 0;

		SavePlayerData(playerid, "Item15");
		SavePlayerData(playerid, "Item15type");
		SavePlayerData(playerid, "Item15param");
		SavePlayerData(playerid, "Item15param2");
		SavePlayerData(playerid, "Item15param3");
		SavePlayerData(playerid, "Item15param4");
		SavePlayerData(playerid, "Item15param5");
		SavePlayerData(playerid, "Item15param6");
	}
	else if (slot == 16)
	{
		gPlayerData[playerid][pItem16] = 0;
		gPlayerData[playerid][pItem16type] = 0;
		gPlayerData[playerid][pItem16param] = 0;
		gPlayerData[playerid][pItem16param2] = 0;
		gPlayerData[playerid][pItem16param3] = 0;
		gPlayerData[playerid][pItem16param4] = 0;
		strdel(gPlayerData[playerid][pItem16param5], 0, 64);
		strins(gPlayerData[playerid][pItem16param5], "Puste", 0, 64);
		gPlayerData[playerid][pItem16param6] = 0;

		SavePlayerData(playerid, "Item16");
		SavePlayerData(playerid, "Item16type");
		SavePlayerData(playerid, "Item16param");
		SavePlayerData(playerid, "Item16param2");
		SavePlayerData(playerid, "Item16param3");
		SavePlayerData(playerid, "Item16param4");
		SavePlayerData(playerid, "Item16param5");
		SavePlayerData(playerid, "Item16param6");
	}
	else if (slot == 17)
	{
		gPlayerData[playerid][pItem17] = 0;
		gPlayerData[playerid][pItem17type] = 0;
		gPlayerData[playerid][pItem17param] = 0;
		gPlayerData[playerid][pItem17param2] = 0;
		gPlayerData[playerid][pItem17param3] = 0;
		gPlayerData[playerid][pItem17param4] = 0;
		strdel(gPlayerData[playerid][pItem17param5], 0, 64);
		strins(gPlayerData[playerid][pItem17param5], "Puste", 0, 64);
		gPlayerData[playerid][pItem17param6] = 0;

		SavePlayerData(playerid, "Item17");
		SavePlayerData(playerid, "Item17type");
		SavePlayerData(playerid, "Item17param");
		SavePlayerData(playerid, "Item17param2");
		SavePlayerData(playerid, "Item17param3");
		SavePlayerData(playerid, "Item17param4");
		SavePlayerData(playerid, "Item17param5");
		SavePlayerData(playerid, "Item17param6");
	}
	else if (slot == 18)
	{
		gPlayerData[playerid][pItem18] = 0;
		gPlayerData[playerid][pItem18type] = 0;
		gPlayerData[playerid][pItem18param] = 0;
		gPlayerData[playerid][pItem18param2] = 0;
		gPlayerData[playerid][pItem18param3] = 0;
		gPlayerData[playerid][pItem18param4] = 0;
		strdel(gPlayerData[playerid][pItem18param5], 0, 64);
		strins(gPlayerData[playerid][pItem18param5], "Puste", 0, 64);
		gPlayerData[playerid][pItem18param6] = 0;

		SavePlayerData(playerid, "Item18");
		SavePlayerData(playerid, "Item18type");
		SavePlayerData(playerid, "Item18param");
		SavePlayerData(playerid, "Item18param2");
		SavePlayerData(playerid, "Item18param3");
		SavePlayerData(playerid, "Item18param4");
		SavePlayerData(playerid, "Item18param5");
		SavePlayerData(playerid, "Item18param6");
	}
	else if (slot == 19)
	{
		gPlayerData[playerid][pItem19] = 0;
		gPlayerData[playerid][pItem19type] = 0;
		gPlayerData[playerid][pItem19param] = 0;
		gPlayerData[playerid][pItem19param2] = 0;
		gPlayerData[playerid][pItem19param3] = 0;
		gPlayerData[playerid][pItem19param4] = 0;
		strdel(gPlayerData[playerid][pItem19param5], 0, 64);
		strins(gPlayerData[playerid][pItem19param5], "Puste", 0, 64);
		gPlayerData[playerid][pItem19param6] = 0;

		SavePlayerData(playerid, "Item19");
		SavePlayerData(playerid, "Item19type");
		SavePlayerData(playerid, "Item19param");
		SavePlayerData(playerid, "Item19param2");
		SavePlayerData(playerid, "Item19param3");
		SavePlayerData(playerid, "Item19param4");
		SavePlayerData(playerid, "Item19param5");
		SavePlayerData(playerid, "Item19param6");
	}
	else if (slot == 20)
	{
		gPlayerData[playerid][pItem20] = 0;
		gPlayerData[playerid][pItem20type] = 0;
		gPlayerData[playerid][pItem20param] = 0;
		gPlayerData[playerid][pItem20param2] = 0;
		gPlayerData[playerid][pItem20param3] = 0;
		gPlayerData[playerid][pItem20param4] = 0;
		strdel(gPlayerData[playerid][pItem20param5], 0, 64);
		strins(gPlayerData[playerid][pItem20param5], "Puste", 0, 64);
		gPlayerData[playerid][pItem20param6] = 0;

		SavePlayerData(playerid, "Item20");
		SavePlayerData(playerid, "Item20type");
		SavePlayerData(playerid, "Item20param");
		SavePlayerData(playerid, "Item20param2");
		SavePlayerData(playerid, "Item20param3");
		SavePlayerData(playerid, "Item20param4");
		SavePlayerData(playerid, "Item20param5");
		SavePlayerData(playerid, "Item20param6");
	}
	else if (slot == 21)
	{
		gPlayerData[playerid][pItem21] = 0;
		gPlayerData[playerid][pItem21type] = 0;
		gPlayerData[playerid][pItem21param] = 0;
		gPlayerData[playerid][pItem21param2] = 0;
		gPlayerData[playerid][pItem21param3] = 0;
		gPlayerData[playerid][pItem21param4] = 0;
		strdel(gPlayerData[playerid][pItem21param5], 0, 64);
		strins(gPlayerData[playerid][pItem21param5], "Puste", 0, 64);
		gPlayerData[playerid][pItem21param6] = 0;

		SavePlayerData(playerid, "Item21");
		SavePlayerData(playerid, "Item21type");
		SavePlayerData(playerid, "Item21param");
		SavePlayerData(playerid, "Item21param2");
		SavePlayerData(playerid, "Item21param3");
		SavePlayerData(playerid, "Item21param4");
		SavePlayerData(playerid, "Item21param5");
		SavePlayerData(playerid, "Item21param6");
	}
	else if (slot == 22)
	{
		gPlayerData[playerid][pItem22] = 0;
		gPlayerData[playerid][pItem22type] = 0;
		gPlayerData[playerid][pItem22param] = 0;
		gPlayerData[playerid][pItem22param2] = 0;
		gPlayerData[playerid][pItem22param3] = 0;
		gPlayerData[playerid][pItem22param4] = 0;
		strdel(gPlayerData[playerid][pItem22param5], 0, 64);
		strins(gPlayerData[playerid][pItem22param5], "Puste", 0, 64);
		gPlayerData[playerid][pItem22param6] = 0;

		SavePlayerData(playerid, "Item22");
		SavePlayerData(playerid, "Item22type");
		SavePlayerData(playerid, "Item22param");
		SavePlayerData(playerid, "Item22param2");
		SavePlayerData(playerid, "Item22param3");
		SavePlayerData(playerid, "Item22param4");
		SavePlayerData(playerid, "Item22param5");
		SavePlayerData(playerid, "Item22param6");
	}
	else if (slot == 23)
	{
		gPlayerData[playerid][pItem23] = 0;
		gPlayerData[playerid][pItem23type] = 0;
		gPlayerData[playerid][pItem23param] = 0;
		gPlayerData[playerid][pItem23param2] = 0;
		gPlayerData[playerid][pItem23param3] = 0;
		gPlayerData[playerid][pItem23param4] = 0;
		strdel(gPlayerData[playerid][pItem23param5], 0, 64);
		strins(gPlayerData[playerid][pItem23param5], "Puste", 0, 64);
		gPlayerData[playerid][pItem23param6] = 0;

		SavePlayerData(playerid, "Item23");
		SavePlayerData(playerid, "Item23type");
		SavePlayerData(playerid, "Item23param");
		SavePlayerData(playerid, "Item23param2");
		SavePlayerData(playerid, "Item23param3");
		SavePlayerData(playerid, "Item23param4");
		SavePlayerData(playerid, "Item23param5");
		SavePlayerData(playerid, "Item23param6");
	}
	else if (slot == 24)
	{
		gPlayerData[playerid][pItem24] = 0;
		gPlayerData[playerid][pItem24type] = 0;
		gPlayerData[playerid][pItem24param] = 0;
		gPlayerData[playerid][pItem24param2] = 0;
		gPlayerData[playerid][pItem24param3] = 0;
		gPlayerData[playerid][pItem24param4] = 0;
		strdel(gPlayerData[playerid][pItem24param5], 0, 64);
		strins(gPlayerData[playerid][pItem24param5], "Puste", 0, 64);
		gPlayerData[playerid][pItem24param6] = 0;

		SavePlayerData(playerid, "Item24");
		SavePlayerData(playerid, "Item24type");
		SavePlayerData(playerid, "Item24param");
		SavePlayerData(playerid, "Item24param2");
		SavePlayerData(playerid, "Item24param3");
		SavePlayerData(playerid, "Item24param4");
		SavePlayerData(playerid, "Item24param5");
		SavePlayerData(playerid, "Item24param6");
	}
	else if (slot == 25)
	{
		gPlayerData[playerid][pItem25] = 0;
		gPlayerData[playerid][pItem25type] = 0;
		gPlayerData[playerid][pItem25param] = 0;
		gPlayerData[playerid][pItem25param2] = 0;
		gPlayerData[playerid][pItem25param3] = 0;
		gPlayerData[playerid][pItem25param4] = 0;
		strdel(gPlayerData[playerid][pItem25param5], 0, 64);
		strins(gPlayerData[playerid][pItem25param5], "Puste", 0, 64);
		gPlayerData[playerid][pItem25param6] = 0;

		SavePlayerData(playerid, "Item25");
		SavePlayerData(playerid, "Item25type");
		SavePlayerData(playerid, "Item25param");
		SavePlayerData(playerid, "Item25param2");
		SavePlayerData(playerid, "Item25param3");
		SavePlayerData(playerid, "Item25param4");
		SavePlayerData(playerid, "Item25param5");
		SavePlayerData(playerid, "Item25param6");
	}
	return 1;
}

/*
* Removes just one item from slot and creates pickup
*/
stock RemovePlayerItemEx(playerid, slot)
{
	if(SlotParam6(playerid, slot) <= 1)
	{
		/* Usuniecie punktow z mapki */
		if( PSlotItemType(playerid, slot) == 1 && ShowSlotItem(playerid, slot) == 105 )
			RemovePlayerMapIcons( playerid, 1 );
		RemovePlayerItem(playerid, slot);
	}
	else
	{
		SetPSlotParam6(playerid, slot, SlotParam6(playerid, slot)-1);
		InsertPlayerPickupItem(playerid, slot);
	}
	gJustDropped[playerid] = 2;
	return 1;
}

/*
* Cleans selected vehicle slot
*/
stock RemoveVehItem(vehid, slot)
{
	switch(slot)
	{
		case 1:
		{
			gVehData[vehid-1][VItem1] = 0;
			gVehData[vehid-1][VItem1type] = 0;
			gVehData[vehid-1][VItem1param] = 0;
			gVehData[vehid-1][VItem1param2] = 0;
			gVehData[vehid-1][VItem1param3] = 0;
			gVehData[vehid-1][VItem1param4] = 0;
			strdel(gVehData[vehid-1][VItem1param5], 0, 64);
			strins(gVehData[vehid-1][VItem1param5], "Puste", 0, 64);
			gVehData[vehid-1][VItem1param6] = 0;
			
			SaveVehData(vehid-1, "Item1");
			SaveVehData(vehid-1, "Item1type");
			SaveVehData(vehid-1, "Item1param");
			SaveVehData(vehid-1, "Item1param2");
			SaveVehData(vehid-1, "Item1param3");
			SaveVehData(vehid-1, "Item1param4");
			SaveVehData(vehid-1, "Item1param5");
			SaveVehData(vehid-1, "Item1param6");
		}
		case 2:
		{
			gVehData[vehid-1][VItem2] = 0;
			gVehData[vehid-1][VItem2type] = 0;
			gVehData[vehid-1][VItem2param] = 0;
			gVehData[vehid-1][VItem2param2] = 0;
			gVehData[vehid-1][VItem2param3] = 0;
			gVehData[vehid-1][VItem2param4] = 0;
			strdel(gVehData[vehid-1][VItem2param5], 0, 64);
			strins(gVehData[vehid-1][VItem2param5], "Puste", 0, 64);
			gVehData[vehid-1][VItem2param6] = 0;
			
			SaveVehData(vehid-1, "Item2");
			SaveVehData(vehid-1, "Item2type");
			SaveVehData(vehid-1, "Item2param");
			SaveVehData(vehid-1, "Item2param2");
			SaveVehData(vehid-1, "Item2param3");
			SaveVehData(vehid-1, "Item2param4");
			SaveVehData(vehid-1, "Item2param5");
			SaveVehData(vehid-1, "Item2param6");
		}
		case 3:
		{
			gVehData[vehid-1][VItem3] = 0;
			gVehData[vehid-1][VItem3type] = 0;
			gVehData[vehid-1][VItem3param] = 0;
			gVehData[vehid-1][VItem3param2] = 0;
			gVehData[vehid-1][VItem3param3] = 0;
			gVehData[vehid-1][VItem3param4] = 0;
			strdel(gVehData[vehid-1][VItem3param5], 0, 64);
			strins(gVehData[vehid-1][VItem3param5], "Puste", 0, 64);
			gVehData[vehid-1][VItem3param6] = 0;
			
			SaveVehData(vehid-1, "Item3");
			SaveVehData(vehid-1, "Item3type");
			SaveVehData(vehid-1, "Item3param");
			SaveVehData(vehid-1, "Item3param2");
			SaveVehData(vehid-1, "Item3param3");
			SaveVehData(vehid-1, "Item3param4");
			SaveVehData(vehid-1, "Item3param5");
			SaveVehData(vehid-1, "Item3param6");
		}
		case 4:
		{
			gVehData[vehid-1][VItem4] = 0;
			gVehData[vehid-1][VItem4type] = 0;
			gVehData[vehid-1][VItem4param] = 0;
			gVehData[vehid-1][VItem4param2] = 0;
			gVehData[vehid-1][VItem4param3] = 0;
			gVehData[vehid-1][VItem4param4] = 0;
			strdel(gVehData[vehid-1][VItem4param5], 0, 64);
			strins(gVehData[vehid-1][VItem4param5], "Puste", 0, 64);
			gVehData[vehid-1][VItem4param6] = 0;
			
			SaveVehData(vehid-1, "Item4");
			SaveVehData(vehid-1, "Item4type");
			SaveVehData(vehid-1, "Item4param");
			SaveVehData(vehid-1, "Item4param2");
			SaveVehData(vehid-1, "Item4param3");
			SaveVehData(vehid-1, "Item4param4");
			SaveVehData(vehid-1, "Item4param5");
			SaveVehData(vehid-1, "Item4param6");
		}
		case 5:
		{
			gVehData[vehid-1][VItem5] = 0;
			gVehData[vehid-1][VItem5type] = 0;
			gVehData[vehid-1][VItem5param] = 0;
			gVehData[vehid-1][VItem5param2] = 0;
			gVehData[vehid-1][VItem5param3] = 0;
			gVehData[vehid-1][VItem5param4] = 0;
			strdel(gVehData[vehid-1][VItem5param5], 0, 64);
			strins(gVehData[vehid-1][VItem5param5], "Puste", 0, 64);
			gVehData[vehid-1][VItem5param6] = 0;
			
			SaveVehData(vehid-1, "Item5");
			SaveVehData(vehid-1, "Item5type");
			SaveVehData(vehid-1, "Item5param");
			SaveVehData(vehid-1, "Item5param2");
			SaveVehData(vehid-1, "Item5param3");
			SaveVehData(vehid-1, "Item5param4");
			SaveVehData(vehid-1, "Item5param5");
			SaveVehData(vehid-1, "Item5param6");
		}
		case 6:
		{
			gVehData[vehid-1][VItem6] = 0;
			gVehData[vehid-1][VItem6type] = 0;
			gVehData[vehid-1][VItem6param] = 0;
			gVehData[vehid-1][VItem6param2] = 0;
			gVehData[vehid-1][VItem6param3] = 0;
			gVehData[vehid-1][VItem6param4] = 0;
			strdel(gVehData[vehid-1][VItem6param5], 0, 64);
			strins(gVehData[vehid-1][VItem6param5], "Puste", 0, 64);
			gVehData[vehid-1][VItem6param6] = 0;
			
			SaveVehData(vehid-1, "Item6");
			SaveVehData(vehid-1, "Item6type");
			SaveVehData(vehid-1, "Item6param");
			SaveVehData(vehid-1, "Item6param2");
			SaveVehData(vehid-1, "Item6param3");
			SaveVehData(vehid-1, "Item6param4");
			SaveVehData(vehid-1, "Item6param5");
			SaveVehData(vehid-1, "Item6param6");
		}
		case 7:
		{
			gVehData[vehid-1][VItem7] = 0;
			gVehData[vehid-1][VItem7type] = 0;
			gVehData[vehid-1][VItem7param] = 0;
			gVehData[vehid-1][VItem7param2] = 0;
			gVehData[vehid-1][VItem7param3] = 0;
			gVehData[vehid-1][VItem7param4] = 0;
			strdel(gVehData[vehid-1][VItem7param5], 0, 64);
			strins(gVehData[vehid-1][VItem7param5], "Puste", 0, 64);
			gVehData[vehid-1][VItem7param6] = 0;
			
			SaveVehData(vehid-1, "Item7");
			SaveVehData(vehid-1, "Item7type");
			SaveVehData(vehid-1, "Item7param");
			SaveVehData(vehid-1, "Item7param2");
			SaveVehData(vehid-1, "Item7param3");
			SaveVehData(vehid-1, "Item7param4");
			SaveVehData(vehid-1, "Item7param5");
			SaveVehData(vehid-1, "Item7param6");
		}
		case 8:
		{
			gVehData[vehid-1][VItem8] = 0;
			gVehData[vehid-1][VItem8type] = 0;
			gVehData[vehid-1][VItem8param] = 0;
			gVehData[vehid-1][VItem8param2] = 0;
			gVehData[vehid-1][VItem8param3] = 0;
			gVehData[vehid-1][VItem8param4] = 0;
			strdel(gVehData[vehid-1][VItem8param5], 0, 64);
			strins(gVehData[vehid-1][VItem8param5], "Puste", 0, 64);
			gVehData[vehid-1][VItem8param6] = 0;
			
			SaveVehData(vehid-1, "Item8");
			SaveVehData(vehid-1, "Item8type");
			SaveVehData(vehid-1, "Item8param");
			SaveVehData(vehid-1, "Item8param2");
			SaveVehData(vehid-1, "Item8param3");
			SaveVehData(vehid-1, "Item8param4");
			SaveVehData(vehid-1, "Item8param5");
			SaveVehData(vehid-1, "Item8param6");
		}
		case 9:
		{
			gVehData[vehid-1][VItem9] = 0;
			gVehData[vehid-1][VItem9type] = 0;
			gVehData[vehid-1][VItem9param] = 0;
			gVehData[vehid-1][VItem9param2] = 0;
			gVehData[vehid-1][VItem9param3] = 0;
			gVehData[vehid-1][VItem9param4] = 0;
			strdel(gVehData[vehid-1][VItem9param5], 0, 64);
			strins(gVehData[vehid-1][VItem9param5], "Puste", 0, 64);
			gVehData[vehid-1][VItem9param6] = 0;
			
			SaveVehData(vehid-1, "Item9");
			SaveVehData(vehid-1, "Item9type");
			SaveVehData(vehid-1, "Item9param");
			SaveVehData(vehid-1, "Item9param2");
			SaveVehData(vehid-1, "Item9param3");
			SaveVehData(vehid-1, "Item9param4");
			SaveVehData(vehid-1, "Item9param5");
			SaveVehData(vehid-1, "Item9param6");
		}
		case 10:
		{
			gVehData[vehid-1][VItem10] = 0;
			gVehData[vehid-1][VItem10type] = 0;
			gVehData[vehid-1][VItem10param] = 0;
			gVehData[vehid-1][VItem10param2] = 0;
			gVehData[vehid-1][VItem10param3] = 0;
			gVehData[vehid-1][VItem10param4] = 0;
			strdel(gVehData[vehid-1][VItem10param5], 0, 64);
			strins(gVehData[vehid-1][VItem10param5], "Puste", 0, 64);
			gVehData[vehid-1][VItem10param6] = 0;
			
			SaveVehData(vehid-1, "Item10");
			SaveVehData(vehid-1, "Item10type");
			SaveVehData(vehid-1, "Item10param");
			SaveVehData(vehid-1, "Item10param2");
			SaveVehData(vehid-1, "Item10param3");
			SaveVehData(vehid-1, "Item10param4");
			SaveVehData(vehid-1, "Item10param5");
			SaveVehData(vehid-1, "Item10param6");
		}
		case 11:
		{
			gVehData[vehid-1][VItem11] = 0;
			gVehData[vehid-1][VItem11type] = 0;
			gVehData[vehid-1][VItem11param] = 0;
			gVehData[vehid-1][VItem11param2] = 0;
			gVehData[vehid-1][VItem11param3] = 0;
			gVehData[vehid-1][VItem11param4] = 0;
			strdel(gVehData[vehid-1][VItem11param5], 0, 64);
			strins(gVehData[vehid-1][VItem11param5], "Puste", 0, 64);
			gVehData[vehid-1][VItem11param6] = 0;
			
			SaveVehData(vehid-1, "Item11");
			SaveVehData(vehid-1, "Item11type");
			SaveVehData(vehid-1, "Item11param");
			SaveVehData(vehid-1, "Item11param2");
			SaveVehData(vehid-1, "Item11param3");
			SaveVehData(vehid-1, "Item11param4");
			SaveVehData(vehid-1, "Item11param5");
			SaveVehData(vehid-1, "Item11param6");
		}
		case 12:
		{
			gVehData[vehid-1][VItem12] = 0;
			gVehData[vehid-1][VItem12type] = 0;
			gVehData[vehid-1][VItem12param] = 0;
			gVehData[vehid-1][VItem12param2] = 0;
			gVehData[vehid-1][VItem12param3] = 0;
			gVehData[vehid-1][VItem12param4] = 0;
			strdel(gVehData[vehid-1][VItem12param5], 0, 64);
			strins(gVehData[vehid-1][VItem12param5], "Puste", 0, 64);
			gVehData[vehid-1][VItem12param6] = 0;
			
			SaveVehData(vehid-1, "Item12");
			SaveVehData(vehid-1, "Item12type");
			SaveVehData(vehid-1, "Item12param");
			SaveVehData(vehid-1, "Item12param2");
			SaveVehData(vehid-1, "Item12param3");
			SaveVehData(vehid-1, "Item12param4");
			SaveVehData(vehid-1, "Item12param5");
			SaveVehData(vehid-1, "Item12param6");
		}
		case 13:
		{
			gVehData[vehid-1][VItem13] = 0;
			gVehData[vehid-1][VItem13type] = 0;
			gVehData[vehid-1][VItem13param] = 0;
			gVehData[vehid-1][VItem13param2] = 0;
			gVehData[vehid-1][VItem13param3] = 0;
			gVehData[vehid-1][VItem13param4] = 0;
			strdel(gVehData[vehid-1][VItem13param5], 0, 64);
			strins(gVehData[vehid-1][VItem13param5], "Puste", 0, 64);
			gVehData[vehid-1][VItem13param6] = 0;
			
			SaveVehData(vehid-1, "Item13");
			SaveVehData(vehid-1, "Item13type");
			SaveVehData(vehid-1, "Item13param");
			SaveVehData(vehid-1, "Item13param2");
			SaveVehData(vehid-1, "Item13param3");
			SaveVehData(vehid-1, "Item13param4");
			SaveVehData(vehid-1, "Item13param5");
			SaveVehData(vehid-1, "Item13param6");
		}
		case 14:
		{
			gVehData[vehid-1][VItem14] = 0;
			gVehData[vehid-1][VItem14type] = 0;
			gVehData[vehid-1][VItem14param] = 0;
			gVehData[vehid-1][VItem14param2] = 0;
			gVehData[vehid-1][VItem14param3] = 0;
			gVehData[vehid-1][VItem14param4] = 0;
			strdel(gVehData[vehid-1][VItem14param5], 0, 64);
			strins(gVehData[vehid-1][VItem14param5], "Puste", 0, 64);
			gVehData[vehid-1][VItem14param6] = 0;
			
			SaveVehData(vehid-1, "Item14");
			SaveVehData(vehid-1, "Item14type");
			SaveVehData(vehid-1, "Item14param");
			SaveVehData(vehid-1, "Item14param2");
			SaveVehData(vehid-1, "Item14param3");
			SaveVehData(vehid-1, "Item14param4");
			SaveVehData(vehid-1, "Item14param5");
			SaveVehData(vehid-1, "Item14param6");
		}
		case 15:
		{
			gVehData[vehid-1][VItem15] = 0;
			gVehData[vehid-1][VItem15type] = 0;
			gVehData[vehid-1][VItem15param] = 0;
			gVehData[vehid-1][VItem15param2] = 0;
			gVehData[vehid-1][VItem15param3] = 0;
			gVehData[vehid-1][VItem15param4] = 0;
			strdel(gVehData[vehid-1][VItem15param5], 0, 64);
			strins(gVehData[vehid-1][VItem15param5], "Puste", 0, 64);
			gVehData[vehid-1][VItem15param6] = 0;
			
			SaveVehData(vehid-1, "Item15");
			SaveVehData(vehid-1, "Item15type");
			SaveVehData(vehid-1, "Item15param");
			SaveVehData(vehid-1, "Item15param2");
			SaveVehData(vehid-1, "Item15param3");
			SaveVehData(vehid-1, "Item15param4");
			SaveVehData(vehid-1, "Item15param5");
			SaveVehData(vehid-1, "Item15param6");
		}
	}
}

/*
* Cleans selected house slot
*/
stock RemoveHouseItem(houseid, slot)
{
	if (slot == 1)
	{
		Houses[houseid][HItem1] = 0;
		Houses[houseid][HItem1type] = 0;
		Houses[houseid][HItem1param] = 0;
		Houses[houseid][HItem1param2] = 0;
		Houses[houseid][HItem1param3] = 0;
		Houses[houseid][HItem1param4] = 0;
		strdel(Houses[houseid][HItem1param5], 0, 64);
		strins(Houses[houseid][HItem1param5], "Puste", 0, 64);
		Houses[houseid][HItem1param6] = 0;

		SaveHouseData(houseid, "HItem1");
		SaveHouseData(houseid, "HItem1type");
		SaveHouseData(houseid, "HItem1param");
		SaveHouseData(houseid, "HItem1param2");
		SaveHouseData(houseid, "HItem1param3");
		SaveHouseData(houseid, "HItem1param4");
		SaveHouseData(houseid, "HItem1param5");
		SaveHouseData(houseid, "HItem1param6");
	}
	else if (slot == 2)
	{
		Houses[houseid][HItem2] = 0;
		Houses[houseid][HItem2type] = 0;
		Houses[houseid][HItem2param] = 0;
		Houses[houseid][HItem2param2] = 0;
		Houses[houseid][HItem2param3] = 0;
		Houses[houseid][HItem2param4] = 0;
		strdel(Houses[houseid][HItem2param5], 0, 64);
		strins(Houses[houseid][HItem2param5], "Puste", 0, 64);
		Houses[houseid][HItem2param6] = 0;

		SaveHouseData(houseid, "HItem2");
		SaveHouseData(houseid, "HItem2type");
		SaveHouseData(houseid, "HItem2param");
		SaveHouseData(houseid, "HItem2param2");
		SaveHouseData(houseid, "HItem2param3");
		SaveHouseData(houseid, "HItem2param4");
		SaveHouseData(houseid, "HItem2param5");
		SaveHouseData(houseid, "HItem2param6");
	}
	else if (slot == 3)
	{
		Houses[houseid][HItem3] = 0;
		Houses[houseid][HItem3type] = 0;
		Houses[houseid][HItem3param] = 0;
		Houses[houseid][HItem3param2] = 0;
		Houses[houseid][HItem3param3] = 0;
		Houses[houseid][HItem3param4] = 0;
		strdel(Houses[houseid][HItem3param5], 0, 64);
		strins(Houses[houseid][HItem3param5], "Puste", 0, 64);
		Houses[houseid][HItem3param6] = 0;

		SaveHouseData(houseid, "HItem3");
		SaveHouseData(houseid, "HItem3type");
		SaveHouseData(houseid, "HItem3param");
		SaveHouseData(houseid, "HItem3param2");
		SaveHouseData(houseid, "HItem3param3");
		SaveHouseData(houseid, "HItem3param4");
		SaveHouseData(houseid, "HItem3param5");
		SaveHouseData(houseid, "HItem3param6");
	}
	else if (slot == 4)
	{
		Houses[houseid][HItem4] = 0;
		Houses[houseid][HItem4type] = 0;
		Houses[houseid][HItem4param] = 0;
		Houses[houseid][HItem4param2] = 0;
		Houses[houseid][HItem4param3] = 0;
		Houses[houseid][HItem4param4] = 0;
		strdel(Houses[houseid][HItem4param5], 0, 64);
		strins(Houses[houseid][HItem4param5], "Puste", 0, 64);
		Houses[houseid][HItem4param6] = 0;

		SaveHouseData(houseid, "HItem4");
		SaveHouseData(houseid, "HItem4type");
		SaveHouseData(houseid, "HItem4param");
		SaveHouseData(houseid, "HItem4param2");
		SaveHouseData(houseid, "HItem4param3");
		SaveHouseData(houseid, "HItem4param4");
		SaveHouseData(houseid, "HItem4param5");
		SaveHouseData(houseid, "HItem4param6");
	}
	else if (slot == 5)
	{
		Houses[houseid][HItem5] = 0;
		Houses[houseid][HItem5type] = 0;
		Houses[houseid][HItem5param] = 0;
		Houses[houseid][HItem5param2] = 0;
		Houses[houseid][HItem5param3] = 0;
		Houses[houseid][HItem5param4] = 0;
		strdel(Houses[houseid][HItem5param5], 0, 64);
		strins(Houses[houseid][HItem5param5], "Puste", 0, 64);
		Houses[houseid][HItem5param6] = 0;

		SaveHouseData(houseid, "HItem5");
		SaveHouseData(houseid, "HItem5type");
		SaveHouseData(houseid, "HItem5param");
		SaveHouseData(houseid, "HItem5param2");
		SaveHouseData(houseid, "HItem5param3");
		SaveHouseData(houseid, "HItem5param4");
		SaveHouseData(houseid, "HItem5param5");
		SaveHouseData(houseid, "HItem5param6");
	}
}

/*
* Remove exact amount of item from slot
*/
stock RemoveHouseItemEx(houseid, slot, howMuch = 1)
{
	if(HSlotParam6(houseid, slot) <= howMuch)
		RemoveHouseItem(houseid, slot);
	else
		SetHSlotParam6(houseid, slot, HSlotParam6(houseid, slot)-howMuch);
	return 1;
}

/*
* Remove exact amount of item from slot
*/
stock RemoveVehItemEx(vehid, slot, howMuch = 1)
{
	if(VSlotParam6(vehid, slot) <= howMuch)
		RemoveVehItem(vehid, slot);
	else
		SetVSlotParam6(vehid, slot, VSlotParam6(vehid, slot)-howMuch);
	return 1;
}

stock InsertPlayerItem(playerid, itemidtype, itemid, itemidparam, itemidparam2)
{
	if( itemidtype == 1 && itemid == 105 )
		ShowPlayerMapIcons( playerid, 1 );
	if(gPlayerData[playerid][pItem1type] == 0)
	{
		gPlayerData[playerid][pItem1] = itemid;
		gPlayerData[playerid][pItem1type] = itemidtype;
		gPlayerData[playerid][pItem1param] = itemidparam;
		gPlayerData[playerid][pItem1param2] = itemidparam2;
		gPlayerData[playerid][pItem1param6] = 1;

		SavePlayerData(playerid, "Item1");
		SavePlayerData(playerid, "Item1type");
		SavePlayerData(playerid, "Item1param");
		SavePlayerData(playerid, "Item1param2");
		SavePlayerData(playerid, "Item1param6");

		return 1;
	}
	if(gPlayerData[playerid][pItem2type] == 0)
	{
		gPlayerData[playerid][pItem2] = itemid;
		gPlayerData[playerid][pItem2type] = itemidtype;
		gPlayerData[playerid][pItem2param] = itemidparam;
		gPlayerData[playerid][pItem2param2] = itemidparam2;
		gPlayerData[playerid][pItem2param6] = 1;

		SavePlayerData(playerid, "Item2");
		SavePlayerData(playerid, "Item2type");
		SavePlayerData(playerid, "Item2param");
		SavePlayerData(playerid, "Item2param2");
		SavePlayerData(playerid, "Item2param6");

		return 2;
	}
	if(gPlayerData[playerid][pItem3type] == 0)
	{
		gPlayerData[playerid][pItem3] = itemid;
		gPlayerData[playerid][pItem3type] = itemidtype;
		gPlayerData[playerid][pItem3param] = itemidparam;
		gPlayerData[playerid][pItem3param2] = itemidparam2;
		gPlayerData[playerid][pItem3param6] = 1;

		SavePlayerData(playerid, "Item3");
		SavePlayerData(playerid, "Item3type");
		SavePlayerData(playerid, "Item3param");
		SavePlayerData(playerid, "Item3param2");
		SavePlayerData(playerid, "Item3param6");

		return 3;
	}
	if(gPlayerData[playerid][pItem4type] == 0)
	{
		gPlayerData[playerid][pItem4] = itemid;
		gPlayerData[playerid][pItem4type] = itemidtype;
		gPlayerData[playerid][pItem4param] = itemidparam;
		gPlayerData[playerid][pItem4param2] = itemidparam2;
		gPlayerData[playerid][pItem4param6] = 1;

		SavePlayerData(playerid, "Item4");
		SavePlayerData(playerid, "Item4type");
		SavePlayerData(playerid, "Item4param");
		SavePlayerData(playerid, "Item4param2");
		SavePlayerData(playerid, "Item4param6");

		return 4;
	}
	if(gPlayerData[playerid][pItem5type] == 0)
	{
		gPlayerData[playerid][pItem5] = itemid;
		gPlayerData[playerid][pItem5type] = itemidtype;
		gPlayerData[playerid][pItem5param] = itemidparam;
		gPlayerData[playerid][pItem5param2] = itemidparam2;
		gPlayerData[playerid][pItem5param6] = 1;

		SavePlayerData(playerid, "Item5");
		SavePlayerData(playerid, "Item5type");
		SavePlayerData(playerid, "Item5param");
		SavePlayerData(playerid, "Item5param2");
		SavePlayerData(playerid, "Item5param6");

		return 5;
	}
	if(PHaveExpandItem(playerid) || gPlayerData[playerid][pVipItem] > 0)
	{
		if(gPlayerData[playerid][pItem6type] == 0)
		{
			gPlayerData[playerid][pItem6] = itemid;
			gPlayerData[playerid][pItem6type] = itemidtype;
			gPlayerData[playerid][pItem6param] = itemidparam;
			gPlayerData[playerid][pItem6param2] = itemidparam2;
			gPlayerData[playerid][pItem6param6] = 1;

			SavePlayerData(playerid, "Item6");
			SavePlayerData(playerid, "Item6type");
			SavePlayerData(playerid, "Item6param");
			SavePlayerData(playerid, "Item6param2");
			SavePlayerData(playerid, "Item6param6");

			return 6;
		}
		if(gPlayerData[playerid][pItem7type] == 0)
		{
			gPlayerData[playerid][pItem7] = itemid;
			gPlayerData[playerid][pItem7type] = itemidtype;
			gPlayerData[playerid][pItem7param] = itemidparam;
			gPlayerData[playerid][pItem7param2] = itemidparam2;
			gPlayerData[playerid][pItem7param6] = 1;

			SavePlayerData(playerid, "Item7");
			SavePlayerData(playerid, "Item7type");
			SavePlayerData(playerid, "Item7param");
			SavePlayerData(playerid, "Item7param2");
			SavePlayerData(playerid, "Item7param6");

			return 7;
		}
		if(gPlayerData[playerid][pItem8type] == 0)
		{
			gPlayerData[playerid][pItem8] = itemid;
			gPlayerData[playerid][pItem8type] = itemidtype;
			gPlayerData[playerid][pItem8param] = itemidparam;
			gPlayerData[playerid][pItem8param2] = itemidparam2;
			gPlayerData[playerid][pItem8param6] = 1;

			SavePlayerData(playerid, "Item8");
			SavePlayerData(playerid, "Item8type");
			SavePlayerData(playerid, "Item8param");
			SavePlayerData(playerid, "Item8param2");
			SavePlayerData(playerid, "Item8param6");

			return 8;
		}
		if(gPlayerData[playerid][pItem9type] == 0)
		{
			gPlayerData[playerid][pItem9] = itemid;
			gPlayerData[playerid][pItem9type] = itemidtype;
			gPlayerData[playerid][pItem9param] = itemidparam;
			gPlayerData[playerid][pItem9param2] = itemidparam2;
			gPlayerData[playerid][pItem9param6] = 1;

			SavePlayerData(playerid, "Item9");
			SavePlayerData(playerid, "Item9type");
			SavePlayerData(playerid, "Item9param");
			SavePlayerData(playerid, "Item9param2");
			SavePlayerData(playerid, "Item9param6");

			return 9;
		}
		if(gPlayerData[playerid][pItem10type] == 0)
		{
			gPlayerData[playerid][pItem10] = itemid;
			gPlayerData[playerid][pItem10type] = itemidtype;
			gPlayerData[playerid][pItem10param] = itemidparam;
			gPlayerData[playerid][pItem10param2] = itemidparam2;
			gPlayerData[playerid][pItem10param6] = 1;

			SavePlayerData(playerid, "Item10");
			SavePlayerData(playerid, "Item10type");
			SavePlayerData(playerid, "Item10param");
			SavePlayerData(playerid, "Item10param2");
			SavePlayerData(playerid, "Item10param6");

			return 10;
		}
		if(gPlayerData[playerid][pItem11type] == 0)
		{
			gPlayerData[playerid][pItem11] = itemid;
			gPlayerData[playerid][pItem11type] = itemidtype;
			gPlayerData[playerid][pItem11param] = itemidparam;
			gPlayerData[playerid][pItem11param2] = itemidparam2;
			gPlayerData[playerid][pItem11param6] = 1;

			SavePlayerData(playerid, "Item11");
			SavePlayerData(playerid, "Item11type");
			SavePlayerData(playerid, "Item11param");
			SavePlayerData(playerid, "Item11param2");
			SavePlayerData(playerid, "Item11param6");

			return 11;
		}
		if(gPlayerData[playerid][pItem12type] == 0)
		{
			gPlayerData[playerid][pItem12] = itemid;
			gPlayerData[playerid][pItem12type] = itemidtype;
			gPlayerData[playerid][pItem12param] = itemidparam;
			gPlayerData[playerid][pItem12param2] = itemidparam2;
			gPlayerData[playerid][pItem12param6] = 1;

			SavePlayerData(playerid, "Item12");
			SavePlayerData(playerid, "Item12type");
			SavePlayerData(playerid, "Item12param");
			SavePlayerData(playerid, "Item12param2");
			SavePlayerData(playerid, "Item12param6");

			return 12;
		}
		if(gPlayerData[playerid][pItem13type] == 0)
		{
			gPlayerData[playerid][pItem13] = itemid;
			gPlayerData[playerid][pItem13type] = itemidtype;
			gPlayerData[playerid][pItem13param] = itemidparam;
			gPlayerData[playerid][pItem13param2] = itemidparam2;
			gPlayerData[playerid][pItem13param6] = 1;

			SavePlayerData(playerid, "Item13");
			SavePlayerData(playerid, "Item13type");
			SavePlayerData(playerid, "Item13param");
			SavePlayerData(playerid, "Item13param2");
			SavePlayerData(playerid, "Item13param6");

			return 13;
		}
		if(gPlayerData[playerid][pItem14type] == 0)
		{
			gPlayerData[playerid][pItem14] = itemid;
			gPlayerData[playerid][pItem14type] = itemidtype;
			gPlayerData[playerid][pItem14param] = itemidparam;
			gPlayerData[playerid][pItem14param2] = itemidparam2;
			gPlayerData[playerid][pItem14param6] = 1;

			SavePlayerData(playerid, "Item14");
			SavePlayerData(playerid, "Item14type");
			SavePlayerData(playerid, "Item14param");
			SavePlayerData(playerid, "Item14param2");
			SavePlayerData(playerid, "Item14param6");

			return 14;
		}
		if(gPlayerData[playerid][pItem15type] == 0)
		{
			gPlayerData[playerid][pItem15] = itemid;
			gPlayerData[playerid][pItem15type] = itemidtype;
			gPlayerData[playerid][pItem15param] = itemidparam;
			gPlayerData[playerid][pItem15param2] = itemidparam2;
			gPlayerData[playerid][pItem15param6] = 1;

			SavePlayerData(playerid, "Item15");
			SavePlayerData(playerid, "Item15type");
			SavePlayerData(playerid, "Item15param");
			SavePlayerData(playerid, "Item15param2");
			SavePlayerData(playerid, "Item15param6");

			return 15;
		}
		if(gPlayerData[playerid][pVipItem] > 0)
		{
			if(gPlayerData[playerid][pItem16type] == 0)
			{
				gPlayerData[playerid][pItem16] = itemid;
				gPlayerData[playerid][pItem16type] = itemidtype;
				gPlayerData[playerid][pItem16param] = itemidparam;
				gPlayerData[playerid][pItem16param2] = itemidparam2;
				gPlayerData[playerid][pItem16param6] = 1;

				SavePlayerData(playerid, "Item16");
				SavePlayerData(playerid, "Item16type");
				SavePlayerData(playerid, "Item16param");
				SavePlayerData(playerid, "Item16param2");
				SavePlayerData(playerid, "Item16param6");

				return 16;
			}
			if(gPlayerData[playerid][pItem17type] == 0)
			{
				gPlayerData[playerid][pItem17] = itemid;
				gPlayerData[playerid][pItem17type] = itemidtype;
				gPlayerData[playerid][pItem17param] = itemidparam;
				gPlayerData[playerid][pItem17param2] = itemidparam2;
				gPlayerData[playerid][pItem17param6] = 1;

				SavePlayerData(playerid, "Item17");
				SavePlayerData(playerid, "Item17type");
				SavePlayerData(playerid, "Item17param");
				SavePlayerData(playerid, "Item17param2");
				SavePlayerData(playerid, "Item17param6");

				return 17;
			}
			if(gPlayerData[playerid][pItem18type] == 0)
			{
				gPlayerData[playerid][pItem18] = itemid;
				gPlayerData[playerid][pItem18type] = itemidtype;
				gPlayerData[playerid][pItem18param] = itemidparam;
				gPlayerData[playerid][pItem18param2] = itemidparam2;
				gPlayerData[playerid][pItem18param6] = 1;

				SavePlayerData(playerid, "Item18");
				SavePlayerData(playerid, "Item18type");
				SavePlayerData(playerid, "Item18param");
				SavePlayerData(playerid, "Item18param2");
				SavePlayerData(playerid, "Item18param6");

				return 18;
			}
			if(gPlayerData[playerid][pItem19type] == 0)
			{
				gPlayerData[playerid][pItem19] = itemid;
				gPlayerData[playerid][pItem19type] = itemidtype;
				gPlayerData[playerid][pItem19param] = itemidparam;
				gPlayerData[playerid][pItem19param2] = itemidparam2;
				gPlayerData[playerid][pItem19param6] = 1;

				SavePlayerData(playerid, "Item19");
				SavePlayerData(playerid, "Item19type");
				SavePlayerData(playerid, "Item19param");
				SavePlayerData(playerid, "Item19param2");
				SavePlayerData(playerid, "Item19param6");

				return 19;
			}
			if(gPlayerData[playerid][pItem20type] == 0)
			{
				gPlayerData[playerid][pItem20] = itemid;
				gPlayerData[playerid][pItem20type] = itemidtype;
				gPlayerData[playerid][pItem20param] = itemidparam;
				gPlayerData[playerid][pItem20param2] = itemidparam2;
				gPlayerData[playerid][pItem20param6] = 1;

				SavePlayerData(playerid, "Item20");
				SavePlayerData(playerid, "Item20type");
				SavePlayerData(playerid, "Item20param");
				SavePlayerData(playerid, "Item20param2");
				SavePlayerData(playerid, "Item20param6");

				return 20;
			}
			if(gPlayerData[playerid][pItem21type] == 0)
			{
				gPlayerData[playerid][pItem21] = itemid;
				gPlayerData[playerid][pItem21type] = itemidtype;
				gPlayerData[playerid][pItem21param] = itemidparam;
				gPlayerData[playerid][pItem21param2] = itemidparam2;
				gPlayerData[playerid][pItem21param6] = 1;

				SavePlayerData(playerid, "Item21");
				SavePlayerData(playerid, "Item21type");
				SavePlayerData(playerid, "Item21param");
				SavePlayerData(playerid, "Item21param2");
				SavePlayerData(playerid, "Item21param6");

				return 21;
			}
			if(gPlayerData[playerid][pItem22type] == 0)
			{
				gPlayerData[playerid][pItem22] = itemid;
				gPlayerData[playerid][pItem22type] = itemidtype;
				gPlayerData[playerid][pItem22param] = itemidparam;
				gPlayerData[playerid][pItem22param2] = itemidparam2;
				gPlayerData[playerid][pItem22param6] = 1;

				SavePlayerData(playerid, "Item22");
				SavePlayerData(playerid, "Item22type");
				SavePlayerData(playerid, "Item22param");
				SavePlayerData(playerid, "Item22param2");
				SavePlayerData(playerid, "Item22param6");

				return 22;
			}
			if(gPlayerData[playerid][pItem23type] == 0)
			{
				gPlayerData[playerid][pItem23] = itemid;
				gPlayerData[playerid][pItem23type] = itemidtype;
				gPlayerData[playerid][pItem23param] = itemidparam;
				gPlayerData[playerid][pItem23param2] = itemidparam2;
				gPlayerData[playerid][pItem23param6] = 1;

				SavePlayerData(playerid, "Item23");
				SavePlayerData(playerid, "Item23type");
				SavePlayerData(playerid, "Item23param");
				SavePlayerData(playerid, "Item23param2");
				SavePlayerData(playerid, "Item23param6");

				return 23;
			}
			if(gPlayerData[playerid][pItem24type] == 0)
			{
				gPlayerData[playerid][pItem24] = itemid;
				gPlayerData[playerid][pItem24type] = itemidtype;
				gPlayerData[playerid][pItem24param] = itemidparam;
				gPlayerData[playerid][pItem24param2] = itemidparam2;
				gPlayerData[playerid][pItem24param6] = 1;

				SavePlayerData(playerid, "Item24");
				SavePlayerData(playerid, "Item24type");
				SavePlayerData(playerid, "Item24param");
				SavePlayerData(playerid, "Item24param2");
				SavePlayerData(playerid, "Item24param6");

				return 24;
			}
			if(gPlayerData[playerid][pItem25type] == 0)
			{
				gPlayerData[playerid][pItem25] = itemid;
				gPlayerData[playerid][pItem25type] = itemidtype;
				gPlayerData[playerid][pItem25param] = itemidparam;
				gPlayerData[playerid][pItem25param2] = itemidparam2;
				gPlayerData[playerid][pItem25param6] = 1;

				SavePlayerData(playerid, "Item25");
				SavePlayerData(playerid, "Item25type");
				SavePlayerData(playerid, "Item25param");
				SavePlayerData(playerid, "Item25param2");
				SavePlayerData(playerid, "Item25param6");

				return 25;
			}
		}
	}
	return 0;
}

stock InsertPlayerItemEx(playerid, itemidtype, itemid, itemidparam, itemidparam2, itemidparam3 = 0, itemidparam4 = 0, itemidparam5[] = "Puste", itemidparam6 = 1, checkWeight = 0 )
{
	new slot, oldSlot = 0, lastSucceedSlot = 0;
	if(itemidtype == 1)
	{
		// TODO: move ShowPlayerMapIcons to place when the item is already given
		if( itemid == 105 )
			ShowPlayerMapIcons( playerid, 1 );
		while(itemidparam6 > 0 && oldSlot < 25)
		{
			slot = PHaveItem(playerid, itemidtype, itemid, oldSlot+1);
			if(slot > 0)
			{
				lastSucceedSlot = oldSlot = slot;
				if(ItemsOnCharacterSlot(itemidtype, itemid) - itemidparam6 - SlotParam6(playerid, slot) < 0)
				{
					itemidparam6 -= ItemsOnCharacterSlot(itemidtype, itemid) - SlotParam6(playerid, slot);
					SetPSlotParam6(playerid, slot, ItemsOnCharacterSlot(itemidtype, itemid));
				}
				else
				{
					SetPSlotParam6(playerid, slot, SlotParam6(playerid, slot) + itemidparam6);
					return slot;
				}
			}
			else 
				oldSlot++;
		}
		if(itemidparam6 > 0 && PlayerFreeSlotCount(playerid) == 0)
			return lastSucceedSlot;
	}
	if(checkWeight)
	{
		if(PItemWeight(playerid) + ItemWeight(itemidtype, itemid) > gPlayerData[playerid][pMaxWeight])
			return -1;
	}
	slot = 0;
	lastSucceedSlot = 0;
	while(itemidparam6 > 0 && slot < 25)
	{
		slot++;
		if(gPlayerData[playerid][pItem1type] == 0 && slot == 1)
		{
			gPlayerData[playerid][pItem1] = itemid;
			gPlayerData[playerid][pItem1type] = itemidtype;
			gPlayerData[playerid][pItem1param] = itemidparam;
			gPlayerData[playerid][pItem1param2] = itemidparam2;
			gPlayerData[playerid][pItem1param3] = itemidparam3;
			gPlayerData[playerid][pItem1param4] = itemidparam4;
			strdel(gPlayerData[playerid][pItem1param5], 0, 64);
			strins(gPlayerData[playerid][pItem1param5], itemidparam5, 0, 64);
			if(ItemsOnCharacterSlot(itemidtype, itemid) - itemidparam6 > 0)
			{
				gPlayerData[playerid][pItem1param6] = itemidparam6;
				itemidparam6 = 0;
			}
			else
			{
				gPlayerData[playerid][pItem1param6] = ItemsOnCharacterSlot(itemidtype, itemid);
				itemidparam6 -= ItemsOnCharacterSlot(itemidtype, itemid);
			}
			SavePlayerData(playerid, "Item1");
			SavePlayerData(playerid, "Item1type");
			SavePlayerData(playerid, "Item1param");
			SavePlayerData(playerid, "Item1param2");
			SavePlayerData(playerid, "Item1param3");
			SavePlayerData(playerid, "Item1param4");
			SavePlayerData(playerid, "Item1param5");
			SavePlayerData(playerid, "Item1param6");
			
			lastSucceedSlot = 1;
		}
		else if(gPlayerData[playerid][pItem2type] == 0 && slot == 2)
		{
			gPlayerData[playerid][pItem2] = itemid;
			gPlayerData[playerid][pItem2type] = itemidtype;
			gPlayerData[playerid][pItem2param] = itemidparam;
			gPlayerData[playerid][pItem2param2] = itemidparam2;
			gPlayerData[playerid][pItem2param3] = itemidparam3;
			gPlayerData[playerid][pItem2param4] = itemidparam4;
			strdel(gPlayerData[playerid][pItem2param5], 0, 64);
			strins(gPlayerData[playerid][pItem2param5], itemidparam5, 0, 64);
			if(ItemsOnCharacterSlot(itemidtype, itemid) - itemidparam6 > 0)
			{
				gPlayerData[playerid][pItem2param6] = itemidparam6;
				itemidparam6 = 0;
			}
			else
			{
				gPlayerData[playerid][pItem2param6] = ItemsOnCharacterSlot(itemidtype, itemid);
				itemidparam6 -= ItemsOnCharacterSlot(itemidtype, itemid);
			}

			SavePlayerData(playerid, "Item2");
			SavePlayerData(playerid, "Item2type");
			SavePlayerData(playerid, "Item2param");
			SavePlayerData(playerid, "Item2param2");
			SavePlayerData(playerid, "Item2param3");
			SavePlayerData(playerid, "Item2param4");
			SavePlayerData(playerid, "Item2param5");
			SavePlayerData(playerid, "Item2param6");

			lastSucceedSlot = 2;
		}
		else if(gPlayerData[playerid][pItem3type] == 0 && slot == 3)
		{
			gPlayerData[playerid][pItem3] = itemid;
			gPlayerData[playerid][pItem3type] = itemidtype;
			gPlayerData[playerid][pItem3param] = itemidparam;
			gPlayerData[playerid][pItem3param2] = itemidparam2;
			gPlayerData[playerid][pItem3param3] = itemidparam3;
			gPlayerData[playerid][pItem3param4] = itemidparam4;
			strdel(gPlayerData[playerid][pItem3param5], 0, 64);
			strins(gPlayerData[playerid][pItem3param5], itemidparam5, 0, 64);
			if(ItemsOnCharacterSlot(itemidtype, itemid) - itemidparam6 > 0)
			{
				gPlayerData[playerid][pItem3param6] = itemidparam6;
				itemidparam6 = 0;
			}
			else
			{
				gPlayerData[playerid][pItem3param6] = ItemsOnCharacterSlot(itemidtype, itemid);
				itemidparam6 -= ItemsOnCharacterSlot(itemidtype, itemid);
			}

			SavePlayerData(playerid, "Item3");
			SavePlayerData(playerid, "Item3type");
			SavePlayerData(playerid, "Item3param");
			SavePlayerData(playerid, "Item3param2");
			SavePlayerData(playerid, "Item3param3");
			SavePlayerData(playerid, "Item3param4");
			SavePlayerData(playerid, "Item3param5");
			SavePlayerData(playerid, "Item3param6");

			lastSucceedSlot = 3;
		}
		else if(gPlayerData[playerid][pItem4type] == 0 && slot == 4)
		{
			gPlayerData[playerid][pItem4] = itemid;
			gPlayerData[playerid][pItem4type] = itemidtype;
			gPlayerData[playerid][pItem4param] = itemidparam;
			gPlayerData[playerid][pItem4param2] = itemidparam2;
			gPlayerData[playerid][pItem4param3] = itemidparam3;
			gPlayerData[playerid][pItem4param4] = itemidparam4;
			strdel(gPlayerData[playerid][pItem4param5], 0, 64);
			strins(gPlayerData[playerid][pItem4param5], itemidparam5, 0, 64);
			if(ItemsOnCharacterSlot(itemidtype, itemid) - itemidparam6 > 0)
			{
				gPlayerData[playerid][pItem4param6] = itemidparam6;
				itemidparam6 = 0;
			}
			else
			{
				gPlayerData[playerid][pItem4param6] = ItemsOnCharacterSlot(itemidtype, itemid);
				itemidparam6 -= ItemsOnCharacterSlot(itemidtype, itemid);
			}

			SavePlayerData(playerid, "Item4");
			SavePlayerData(playerid, "Item4type");
			SavePlayerData(playerid, "Item4param");
			SavePlayerData(playerid, "Item4param2");
			SavePlayerData(playerid, "Item4param3");
			SavePlayerData(playerid, "Item4param4");
			SavePlayerData(playerid, "Item4param5");
			SavePlayerData(playerid, "Item4param6");

			lastSucceedSlot = 4;
		}
		else if(gPlayerData[playerid][pItem5type] == 0 && slot == 5)
		{
			gPlayerData[playerid][pItem5] = itemid;
			gPlayerData[playerid][pItem5type] = itemidtype;
			gPlayerData[playerid][pItem5param] = itemidparam;
			gPlayerData[playerid][pItem5param2] = itemidparam2;
			gPlayerData[playerid][pItem5param3] = itemidparam3;
			gPlayerData[playerid][pItem5param4] = itemidparam4;
			strdel(gPlayerData[playerid][pItem5param5], 0, 64);
			strins(gPlayerData[playerid][pItem5param5], itemidparam5, 0, 64);
			if(ItemsOnCharacterSlot(itemidtype, itemid) - itemidparam6 > 0)
			{
				gPlayerData[playerid][pItem5param6] = itemidparam6;
				itemidparam6 = 0;
			}
			else
			{
				gPlayerData[playerid][pItem5param6] = ItemsOnCharacterSlot(itemidtype, itemid);
				itemidparam6 -= ItemsOnCharacterSlot(itemidtype, itemid);
			}

			SavePlayerData(playerid, "Item5");
			SavePlayerData(playerid, "Item5type");
			SavePlayerData(playerid, "Item5param");
			SavePlayerData(playerid, "Item5param2");
			SavePlayerData(playerid, "Item5param3");
			SavePlayerData(playerid, "Item5param4");
			SavePlayerData(playerid, "Item5param5");
			SavePlayerData(playerid, "Item5param6");

			lastSucceedSlot = 5;
		}
		if(PHaveExpandItem(playerid) || gPlayerData[playerid][pVipItem] > 0)
		{
			if(gPlayerData[playerid][pItem6type] == 0 && slot == 6)
			{
				gPlayerData[playerid][pItem6] = itemid;
				gPlayerData[playerid][pItem6type] = itemidtype;
				gPlayerData[playerid][pItem6param] = itemidparam;
				gPlayerData[playerid][pItem6param2] = itemidparam2;
				gPlayerData[playerid][pItem6param3] = itemidparam3;
				gPlayerData[playerid][pItem6param4] = itemidparam4;
				strdel(gPlayerData[playerid][pItem6param5], 0, 64);
				strins(gPlayerData[playerid][pItem6param5], itemidparam5, 0, 64);
				if(ItemsOnCharacterSlot(itemidtype, itemid) - itemidparam6 > 0)
				{
					gPlayerData[playerid][pItem6param6] = itemidparam6;
					itemidparam6 = 0;
				}
				else
				{
					gPlayerData[playerid][pItem6param6] = ItemsOnCharacterSlot(itemidtype, itemid);
					itemidparam6 -= ItemsOnCharacterSlot(itemidtype, itemid);
				}

				SavePlayerData(playerid, "Item6");
				SavePlayerData(playerid, "Item6type");
				SavePlayerData(playerid, "Item6param");
				SavePlayerData(playerid, "Item6param2");
				SavePlayerData(playerid, "Item6param3");
				SavePlayerData(playerid, "Item6param4");
				SavePlayerData(playerid, "Item6param5");
				SavePlayerData(playerid, "Item6param6");
				
				lastSucceedSlot = 6;
			}
			else if(gPlayerData[playerid][pItem7type] == 0 && slot == 7)
			{
				gPlayerData[playerid][pItem7] = itemid;
				gPlayerData[playerid][pItem7type] = itemidtype;
				gPlayerData[playerid][pItem7param] = itemidparam;
				gPlayerData[playerid][pItem7param2] = itemidparam2;
				gPlayerData[playerid][pItem7param3] = itemidparam3;
				gPlayerData[playerid][pItem7param4] = itemidparam4;
				strdel(gPlayerData[playerid][pItem7param5], 0, 64);
				strins(gPlayerData[playerid][pItem7param5], itemidparam5, 0, 64);
				if(ItemsOnCharacterSlot(itemidtype, itemid) - itemidparam6 > 0)
				{
					gPlayerData[playerid][pItem7param6] = itemidparam6;
					itemidparam6 = 0;
				}
				else
				{
					gPlayerData[playerid][pItem7param6] = ItemsOnCharacterSlot(itemidtype, itemid);
					itemidparam6 -= ItemsOnCharacterSlot(itemidtype, itemid);
				}

				SavePlayerData(playerid, "Item7");
				SavePlayerData(playerid, "Item7type");
				SavePlayerData(playerid, "Item7param");
				SavePlayerData(playerid, "Item7param2");
				SavePlayerData(playerid, "Item7param3");
				SavePlayerData(playerid, "Item7param4");
				SavePlayerData(playerid, "Item7param5");
				SavePlayerData(playerid, "Item7param6");

				lastSucceedSlot = 7;
			}
			else if(gPlayerData[playerid][pItem8type] == 0 && slot == 8)
			{
				gPlayerData[playerid][pItem8] = itemid;
				gPlayerData[playerid][pItem8type] = itemidtype;
				gPlayerData[playerid][pItem8param] = itemidparam;
				gPlayerData[playerid][pItem8param2] = itemidparam2;
				gPlayerData[playerid][pItem8param3] = itemidparam3;
				gPlayerData[playerid][pItem8param4] = itemidparam4;
				strdel(gPlayerData[playerid][pItem8param5], 0, 64);
				strins(gPlayerData[playerid][pItem8param5], itemidparam5, 0, 64);
				if(ItemsOnCharacterSlot(itemidtype, itemid) - itemidparam6 > 0)
				{
					gPlayerData[playerid][pItem8param6] = itemidparam6;
					itemidparam6 = 0;
				}
				else
				{
					gPlayerData[playerid][pItem8param6] = ItemsOnCharacterSlot(itemidtype, itemid);
					itemidparam6 -= ItemsOnCharacterSlot(itemidtype, itemid);
				}

				SavePlayerData(playerid, "Item8");
				SavePlayerData(playerid, "Item8type");
				SavePlayerData(playerid, "Item8param");
				SavePlayerData(playerid, "Item8param2");
				SavePlayerData(playerid, "Item8param3");
				SavePlayerData(playerid, "Item8param4");
				SavePlayerData(playerid, "Item8param5");
				SavePlayerData(playerid, "Item8param6");

				lastSucceedSlot = 8;
			}
			else if(gPlayerData[playerid][pItem9type] == 0 && slot == 9)
			{
				gPlayerData[playerid][pItem9] = itemid;
				gPlayerData[playerid][pItem9type] = itemidtype;
				gPlayerData[playerid][pItem9param] = itemidparam;
				gPlayerData[playerid][pItem9param2] = itemidparam2;
				gPlayerData[playerid][pItem9param3] = itemidparam3;
				gPlayerData[playerid][pItem9param4] = itemidparam4;
				strdel(gPlayerData[playerid][pItem9param5], 0, 64);
				strins(gPlayerData[playerid][pItem9param5], itemidparam5, 0, 64);
				if(ItemsOnCharacterSlot(itemidtype, itemid) - itemidparam6 > 0)
				{
					gPlayerData[playerid][pItem9param6] = itemidparam6;
					itemidparam6 = 0;
				}
				else
				{
					gPlayerData[playerid][pItem9param6] = ItemsOnCharacterSlot(itemidtype, itemid);
					itemidparam6 -= ItemsOnCharacterSlot(itemidtype, itemid);
				}

				SavePlayerData(playerid, "Item9");
				SavePlayerData(playerid, "Item9type");
				SavePlayerData(playerid, "Item9param");
				SavePlayerData(playerid, "Item9param2");
				SavePlayerData(playerid, "Item9param3");
				SavePlayerData(playerid, "Item9param4");
				SavePlayerData(playerid, "Item9param5");
				SavePlayerData(playerid, "Item9param6");

				lastSucceedSlot = 9;
			}
			else if(gPlayerData[playerid][pItem10type] == 0 && slot == 10)
			{
				gPlayerData[playerid][pItem10] = itemid;
				gPlayerData[playerid][pItem10type] = itemidtype;
				gPlayerData[playerid][pItem10param] = itemidparam;
				gPlayerData[playerid][pItem10param2] = itemidparam2;
				gPlayerData[playerid][pItem10param3] = itemidparam3;
				gPlayerData[playerid][pItem10param4] = itemidparam4;
				strdel(gPlayerData[playerid][pItem10param5], 0, 64);
				strins(gPlayerData[playerid][pItem10param5], itemidparam5, 0, 64);
				if(ItemsOnCharacterSlot(itemidtype, itemid) - itemidparam6 > 0)
				{
					gPlayerData[playerid][pItem10param6] = itemidparam6;
					itemidparam6 = 0;
				}
				else
				{
					gPlayerData[playerid][pItem10param6] = ItemsOnCharacterSlot(itemidtype, itemid);
					itemidparam6 -= ItemsOnCharacterSlot(itemidtype, itemid);
				}

				SavePlayerData(playerid, "Item10");
				SavePlayerData(playerid, "Item10type");
				SavePlayerData(playerid, "Item10param");
				SavePlayerData(playerid, "Item10param2");
				SavePlayerData(playerid, "Item10param3");
				SavePlayerData(playerid, "Item10param4");
				SavePlayerData(playerid, "Item10param5");
				SavePlayerData(playerid, "Item10param6");

				lastSucceedSlot = 10;
			}
			else if(gPlayerData[playerid][pItem11type] == 0 && slot == 11)
			{
				gPlayerData[playerid][pItem11] = itemid;
				gPlayerData[playerid][pItem11type] = itemidtype;
				gPlayerData[playerid][pItem11param] = itemidparam;
				gPlayerData[playerid][pItem11param2] = itemidparam2;
				gPlayerData[playerid][pItem11param3] = itemidparam3;
				gPlayerData[playerid][pItem11param4] = itemidparam4;
				strdel(gPlayerData[playerid][pItem11param5], 0, 64);
				strins(gPlayerData[playerid][pItem11param5], itemidparam5, 0, 64);
				if(ItemsOnCharacterSlot(itemidtype, itemid) - itemidparam6 > 0)
				{
					gPlayerData[playerid][pItem11param6] = itemidparam6;
					itemidparam6 = 0;
				}
				else
				{
					gPlayerData[playerid][pItem11param6] = ItemsOnCharacterSlot(itemidtype, itemid);
					itemidparam6 -= ItemsOnCharacterSlot(itemidtype, itemid);
				}

				SavePlayerData(playerid, "Item11");
				SavePlayerData(playerid, "Item11type");
				SavePlayerData(playerid, "Item11param");
				SavePlayerData(playerid, "Item11param2");
				SavePlayerData(playerid, "Item11param3");
				SavePlayerData(playerid, "Item11param4");
				SavePlayerData(playerid, "Item11param5");
				SavePlayerData(playerid, "Item11param6");

				lastSucceedSlot = 11;
			}
			else if(gPlayerData[playerid][pItem12type] == 0 && slot == 12)
			{
				gPlayerData[playerid][pItem12] = itemid;
				gPlayerData[playerid][pItem12type] = itemidtype;
				gPlayerData[playerid][pItem12param] = itemidparam;
				gPlayerData[playerid][pItem12param2] = itemidparam2;
				gPlayerData[playerid][pItem12param3] = itemidparam3;
				gPlayerData[playerid][pItem12param4] = itemidparam4;
				strdel(gPlayerData[playerid][pItem12param5], 0, 64);
				strins(gPlayerData[playerid][pItem12param5], itemidparam5, 0, 64);
				if(ItemsOnCharacterSlot(itemidtype, itemid) - itemidparam6 > 0)
				{
					gPlayerData[playerid][pItem12param6] = itemidparam6;
					itemidparam6 = 0;
				}
				else
				{
					gPlayerData[playerid][pItem12param6] = ItemsOnCharacterSlot(itemidtype, itemid);
					itemidparam6 -= ItemsOnCharacterSlot(itemidtype, itemid);
				}

				SavePlayerData(playerid, "Item12");
				SavePlayerData(playerid, "Item12type");
				SavePlayerData(playerid, "Item12param");
				SavePlayerData(playerid, "Item12param2");
				SavePlayerData(playerid, "Item12param3");
				SavePlayerData(playerid, "Item12param4");
				SavePlayerData(playerid, "Item12param5");
				SavePlayerData(playerid, "Item12param6");

				lastSucceedSlot = 12;
			}
			else if(gPlayerData[playerid][pItem13type] == 0 && slot == 13)
			{
				gPlayerData[playerid][pItem13] = itemid;
				gPlayerData[playerid][pItem13type] = itemidtype;
				gPlayerData[playerid][pItem13param] = itemidparam;
				gPlayerData[playerid][pItem13param2] = itemidparam2;
				gPlayerData[playerid][pItem13param3] = itemidparam3;
				gPlayerData[playerid][pItem13param4] = itemidparam4;
				strdel(gPlayerData[playerid][pItem13param5], 0, 64);
				strins(gPlayerData[playerid][pItem13param5], itemidparam5, 0, 64);
				if(ItemsOnCharacterSlot(itemidtype, itemid) - itemidparam6 > 0)
				{
					gPlayerData[playerid][pItem13param6] = itemidparam6;
					itemidparam6 = 0;
				}
				else
				{
					gPlayerData[playerid][pItem13param6] = ItemsOnCharacterSlot(itemidtype, itemid);
					itemidparam6 -= ItemsOnCharacterSlot(itemidtype, itemid);
				}

				SavePlayerData(playerid, "Item13");
				SavePlayerData(playerid, "Item13type");
				SavePlayerData(playerid, "Item13param");
				SavePlayerData(playerid, "Item13param2");
				SavePlayerData(playerid, "Item13param3");
				SavePlayerData(playerid, "Item13param4");
				SavePlayerData(playerid, "Item13param5");
				SavePlayerData(playerid, "Item13param6");

				lastSucceedSlot = 13;
			}
			else if(gPlayerData[playerid][pItem14type] == 0 && slot == 14)
			{
				gPlayerData[playerid][pItem14] = itemid;
				gPlayerData[playerid][pItem14type] = itemidtype;
				gPlayerData[playerid][pItem14param] = itemidparam;
				gPlayerData[playerid][pItem14param2] = itemidparam2;
				gPlayerData[playerid][pItem14param3] = itemidparam3;
				gPlayerData[playerid][pItem14param4] = itemidparam4;
				strdel(gPlayerData[playerid][pItem14param5], 0, 64);
				strins(gPlayerData[playerid][pItem14param5], itemidparam5, 0, 64);
				if(ItemsOnCharacterSlot(itemidtype, itemid) - itemidparam6 > 0)
				{
					gPlayerData[playerid][pItem14param6] = itemidparam6;
					itemidparam6 = 0;
				}
				else
				{
					gPlayerData[playerid][pItem14param6] = ItemsOnCharacterSlot(itemidtype, itemid);
					itemidparam6 -= ItemsOnCharacterSlot(itemidtype, itemid);
				}

				SavePlayerData(playerid, "Item14");
				SavePlayerData(playerid, "Item14type");
				SavePlayerData(playerid, "Item14param");
				SavePlayerData(playerid, "Item14param2");
				SavePlayerData(playerid, "Item14param3");
				SavePlayerData(playerid, "Item14param4");
				SavePlayerData(playerid, "Item14param5");
				SavePlayerData(playerid, "Item14param6");

				lastSucceedSlot = 14;
			}
			else if(gPlayerData[playerid][pItem15type] == 0 && slot == 15)
			{
				gPlayerData[playerid][pItem15] = itemid;
				gPlayerData[playerid][pItem15type] = itemidtype;
				gPlayerData[playerid][pItem15param] = itemidparam;
				gPlayerData[playerid][pItem15param2] = itemidparam2;
				gPlayerData[playerid][pItem15param3] = itemidparam3;
				gPlayerData[playerid][pItem15param4] = itemidparam4;
				strdel(gPlayerData[playerid][pItem15param5], 0, 64);
				strins(gPlayerData[playerid][pItem15param5], itemidparam5, 0, 64);
				if(ItemsOnCharacterSlot(itemidtype, itemid) - itemidparam6 > 0)
				{
					gPlayerData[playerid][pItem15param6] = itemidparam6;
					itemidparam6 = 0;
				}
				else
				{
					gPlayerData[playerid][pItem15param6] = ItemsOnCharacterSlot(itemidtype, itemid);
					itemidparam6 -= ItemsOnCharacterSlot(itemidtype, itemid);
				}

				SavePlayerData(playerid, "Item15");
				SavePlayerData(playerid, "Item15type");
				SavePlayerData(playerid, "Item15param");
				SavePlayerData(playerid, "Item15param2");
				SavePlayerData(playerid, "Item15param3");
				SavePlayerData(playerid, "Item15param4");
				SavePlayerData(playerid, "Item15param5");
				SavePlayerData(playerid, "Item15param6");

				lastSucceedSlot = 15;
			}
			if(gPlayerData[playerid][pVipItem] > 0)
			{
				if(gPlayerData[playerid][pItem16type] == 0 && slot == 16)
				{
					gPlayerData[playerid][pItem16] = itemid;
					gPlayerData[playerid][pItem16type] = itemidtype;
					gPlayerData[playerid][pItem16param] = itemidparam;
					gPlayerData[playerid][pItem16param2] = itemidparam2;
					gPlayerData[playerid][pItem16param3] = itemidparam3;
					gPlayerData[playerid][pItem16param4] = itemidparam4;
					strdel(gPlayerData[playerid][pItem16param5], 0, 64);
					strins(gPlayerData[playerid][pItem16param5], itemidparam5, 0, 64);
					if(ItemsOnCharacterSlot(itemidtype, itemid) - itemidparam6 > 0)
					{
						gPlayerData[playerid][pItem16param6] = itemidparam6;
						itemidparam6 = 0;
					}
					else
					{
						gPlayerData[playerid][pItem16param6] = ItemsOnCharacterSlot(itemidtype, itemid);
						itemidparam6 -= ItemsOnCharacterSlot(itemidtype, itemid);
					}

					SavePlayerData(playerid, "Item16");
					SavePlayerData(playerid, "Item16type");
					SavePlayerData(playerid, "Item16param");
					SavePlayerData(playerid, "Item16param2");
					SavePlayerData(playerid, "Item16param3");
					SavePlayerData(playerid, "Item16param4");
					SavePlayerData(playerid, "Item16param5");
					SavePlayerData(playerid, "Item16param6");

					lastSucceedSlot = 16;
				}
				else if(gPlayerData[playerid][pItem17type] == 0 && slot == 17)
				{
					gPlayerData[playerid][pItem17] = itemid;
					gPlayerData[playerid][pItem17type] = itemidtype;
					gPlayerData[playerid][pItem17param] = itemidparam;
					gPlayerData[playerid][pItem17param2] = itemidparam2;
					gPlayerData[playerid][pItem17param3] = itemidparam3;
					gPlayerData[playerid][pItem17param4] = itemidparam4;
					strdel(gPlayerData[playerid][pItem17param5], 0, 64);
					strins(gPlayerData[playerid][pItem17param5], itemidparam5, 0, 64);
					if(ItemsOnCharacterSlot(itemidtype, itemid) - itemidparam6 > 0)
					{
						gPlayerData[playerid][pItem17param6] = itemidparam6;
						itemidparam6 = 0;
					}
					else
					{
						gPlayerData[playerid][pItem17param6] = ItemsOnCharacterSlot(itemidtype, itemid);
						itemidparam6 -= ItemsOnCharacterSlot(itemidtype, itemid);
					}

					SavePlayerData(playerid, "Item17");
					SavePlayerData(playerid, "Item17type");
					SavePlayerData(playerid, "Item17param");
					SavePlayerData(playerid, "Item17param2");
					SavePlayerData(playerid, "Item17param3");
					SavePlayerData(playerid, "Item17param4");
					SavePlayerData(playerid, "Item17param5");
					SavePlayerData(playerid, "Item17param6");

					lastSucceedSlot = 17;
				}
				else if(gPlayerData[playerid][pItem18type] == 0 && slot == 18)
				{
					gPlayerData[playerid][pItem18] = itemid;
					gPlayerData[playerid][pItem18type] = itemidtype;
					gPlayerData[playerid][pItem18param] = itemidparam;
					gPlayerData[playerid][pItem18param2] = itemidparam2;
					gPlayerData[playerid][pItem18param3] = itemidparam3;
					gPlayerData[playerid][pItem18param4] = itemidparam4;
					strdel(gPlayerData[playerid][pItem18param5], 0, 64);
					strins(gPlayerData[playerid][pItem18param5], itemidparam5, 0, 64);
					if(ItemsOnCharacterSlot(itemidtype, itemid) - itemidparam6 > 0)
					{
						gPlayerData[playerid][pItem18param6] = itemidparam6;
						itemidparam6 = 0;
					}
					else
					{
						gPlayerData[playerid][pItem18param6] = ItemsOnCharacterSlot(itemidtype, itemid);
						itemidparam6 -= ItemsOnCharacterSlot(itemidtype, itemid);
					}

					SavePlayerData(playerid, "Item18");
					SavePlayerData(playerid, "Item18type");
					SavePlayerData(playerid, "Item18param");
					SavePlayerData(playerid, "Item18param2");
					SavePlayerData(playerid, "Item18param3");
					SavePlayerData(playerid, "Item18param4");
					SavePlayerData(playerid, "Item18param5");
					SavePlayerData(playerid, "Item18param6");

					lastSucceedSlot = 18;
				}
				else if(gPlayerData[playerid][pItem19type] == 0 && slot == 19)
				{
					gPlayerData[playerid][pItem19] = itemid;
					gPlayerData[playerid][pItem19type] = itemidtype;
					gPlayerData[playerid][pItem19param] = itemidparam;
					gPlayerData[playerid][pItem19param2] = itemidparam2;
					gPlayerData[playerid][pItem19param3] = itemidparam3;
					gPlayerData[playerid][pItem19param4] = itemidparam4;
					strdel(gPlayerData[playerid][pItem19param5], 0, 64);
					strins(gPlayerData[playerid][pItem19param5], itemidparam5, 0, 64);
					if(ItemsOnCharacterSlot(itemidtype, itemid) - itemidparam6 > 0)
					{
						gPlayerData[playerid][pItem19param6] = itemidparam6;
						itemidparam6 = 0;
					}
					else
					{
						gPlayerData[playerid][pItem19param6] = ItemsOnCharacterSlot(itemidtype, itemid);
						itemidparam6 -= ItemsOnCharacterSlot(itemidtype, itemid);
					}

					SavePlayerData(playerid, "Item19");
					SavePlayerData(playerid, "Item19type");
					SavePlayerData(playerid, "Item19param");
					SavePlayerData(playerid, "Item19param2");
					SavePlayerData(playerid, "Item19param3");
					SavePlayerData(playerid, "Item19param4");
					SavePlayerData(playerid, "Item19param5");
					SavePlayerData(playerid, "Item19param6");

					lastSucceedSlot = 19;
				}
				else if(gPlayerData[playerid][pItem20type] == 0 && slot == 20)
				{
					gPlayerData[playerid][pItem20] = itemid;
					gPlayerData[playerid][pItem20type] = itemidtype;
					gPlayerData[playerid][pItem20param] = itemidparam;
					gPlayerData[playerid][pItem20param2] = itemidparam2;
					gPlayerData[playerid][pItem20param3] = itemidparam3;
					gPlayerData[playerid][pItem20param4] = itemidparam4;
					strdel(gPlayerData[playerid][pItem20param5], 0, 64);
					strins(gPlayerData[playerid][pItem20param5], itemidparam5, 0, 64);
					if(ItemsOnCharacterSlot(itemidtype, itemid) - itemidparam6 > 0)
					{
						gPlayerData[playerid][pItem20param6] = itemidparam6;
						itemidparam6 = 0;
					}
					else
					{
						gPlayerData[playerid][pItem20param6] = ItemsOnCharacterSlot(itemidtype, itemid);
						itemidparam6 -= ItemsOnCharacterSlot(itemidtype, itemid);
					}

					SavePlayerData(playerid, "Item20");
					SavePlayerData(playerid, "Item20type");
					SavePlayerData(playerid, "Item20param");
					SavePlayerData(playerid, "Item20param2");
					SavePlayerData(playerid, "Item20param3");
					SavePlayerData(playerid, "Item20param4");
					SavePlayerData(playerid, "Item20param5");
					SavePlayerData(playerid, "Item20param6");

					lastSucceedSlot = 20;
				}
				else if(gPlayerData[playerid][pItem21type] == 0 && slot == 21)
				{
					gPlayerData[playerid][pItem21] = itemid;
					gPlayerData[playerid][pItem21type] = itemidtype;
					gPlayerData[playerid][pItem21param] = itemidparam;
					gPlayerData[playerid][pItem21param2] = itemidparam2;
					gPlayerData[playerid][pItem21param3] = itemidparam3;
					gPlayerData[playerid][pItem21param4] = itemidparam4;
					strdel(gPlayerData[playerid][pItem21param5], 0, 64);
					strins(gPlayerData[playerid][pItem21param5], itemidparam5, 0, 64);
					if(ItemsOnCharacterSlot(itemidtype, itemid) - itemidparam6 > 0)
					{
						gPlayerData[playerid][pItem21param6] = itemidparam6;
						itemidparam6 = 0;
					}
					else
					{
						gPlayerData[playerid][pItem21param6] = ItemsOnCharacterSlot(itemidtype, itemid);
						itemidparam6 -= ItemsOnCharacterSlot(itemidtype, itemid);
					}

					SavePlayerData(playerid, "Item21");
					SavePlayerData(playerid, "Item21type");
					SavePlayerData(playerid, "Item21param");
					SavePlayerData(playerid, "Item21param2");
					SavePlayerData(playerid, "Item21param3");
					SavePlayerData(playerid, "Item21param4");
					SavePlayerData(playerid, "Item21param5");
					SavePlayerData(playerid, "Item21param6");

					lastSucceedSlot = 21;
				}
				else if(gPlayerData[playerid][pItem22type] == 0 && slot == 22)
				{
					gPlayerData[playerid][pItem22] = itemid;
					gPlayerData[playerid][pItem22type] = itemidtype;
					gPlayerData[playerid][pItem22param] = itemidparam;
					gPlayerData[playerid][pItem22param2] = itemidparam2;
					gPlayerData[playerid][pItem22param3] = itemidparam3;
					gPlayerData[playerid][pItem22param4] = itemidparam4;
					strdel(gPlayerData[playerid][pItem22param5], 0, 64);
					strins(gPlayerData[playerid][pItem22param5], itemidparam5, 0, 64);
					if(ItemsOnCharacterSlot(itemidtype, itemid) - itemidparam6 > 0)
					{
						gPlayerData[playerid][pItem22param6] = itemidparam6;
						itemidparam6 = 0;
					}
					else
					{
						gPlayerData[playerid][pItem22param6] = ItemsOnCharacterSlot(itemidtype, itemid);
						itemidparam6 -= ItemsOnCharacterSlot(itemidtype, itemid);
					}

					SavePlayerData(playerid, "Item22");
					SavePlayerData(playerid, "Item22type");
					SavePlayerData(playerid, "Item22param");
					SavePlayerData(playerid, "Item22param2");
					SavePlayerData(playerid, "Item22param3");
					SavePlayerData(playerid, "Item22param4");
					SavePlayerData(playerid, "Item22param5");
					SavePlayerData(playerid, "Item22param6");

					lastSucceedSlot = 22;
				}
				else if(gPlayerData[playerid][pItem23type] == 0 && slot == 23)
				{
					gPlayerData[playerid][pItem23] = itemid;
					gPlayerData[playerid][pItem23type] = itemidtype;
					gPlayerData[playerid][pItem23param] = itemidparam;
					gPlayerData[playerid][pItem23param2] = itemidparam2;
					gPlayerData[playerid][pItem23param3] = itemidparam3;
					gPlayerData[playerid][pItem23param4] = itemidparam4;
					strdel(gPlayerData[playerid][pItem23param5], 0, 64);
					strins(gPlayerData[playerid][pItem23param5], itemidparam5, 0, 64);
					if(ItemsOnCharacterSlot(itemidtype, itemid) - itemidparam6 > 0)
					{
						gPlayerData[playerid][pItem23param6] = itemidparam6;
						itemidparam6 = 0;
					}
					else
					{
						gPlayerData[playerid][pItem23param6] = ItemsOnCharacterSlot(itemidtype, itemid);
						itemidparam6 -= ItemsOnCharacterSlot(itemidtype, itemid);
					}

					SavePlayerData(playerid, "Item23");
					SavePlayerData(playerid, "Item23type");
					SavePlayerData(playerid, "Item23param");
					SavePlayerData(playerid, "Item23param2");
					SavePlayerData(playerid, "Item23param3");
					SavePlayerData(playerid, "Item23param4");
					SavePlayerData(playerid, "Item23param5");
					SavePlayerData(playerid, "Item23param6");

					lastSucceedSlot = 23;
				}
				else if(gPlayerData[playerid][pItem24type] == 0 && slot == 24)
				{
					gPlayerData[playerid][pItem24] = itemid;
					gPlayerData[playerid][pItem24type] = itemidtype;
					gPlayerData[playerid][pItem24param] = itemidparam;
					gPlayerData[playerid][pItem24param2] = itemidparam2;
					gPlayerData[playerid][pItem24param3] = itemidparam3;
					gPlayerData[playerid][pItem24param4] = itemidparam4;
					strdel(gPlayerData[playerid][pItem24param5], 0, 64);
					strins(gPlayerData[playerid][pItem24param5], itemidparam5, 0, 64);
					if(ItemsOnCharacterSlot(itemidtype, itemid) - itemidparam6 > 0)
					{
						gPlayerData[playerid][pItem24param6] = itemidparam6;
						itemidparam6 = 0;
					}
					else
					{
						gPlayerData[playerid][pItem24param6] = ItemsOnCharacterSlot(itemidtype, itemid);
						itemidparam6 -= ItemsOnCharacterSlot(itemidtype, itemid);
					}

					SavePlayerData(playerid, "Item24");
					SavePlayerData(playerid, "Item24type");
					SavePlayerData(playerid, "Item24param");
					SavePlayerData(playerid, "Item24param2");
					SavePlayerData(playerid, "Item24param3");
					SavePlayerData(playerid, "Item24param4");
					SavePlayerData(playerid, "Item24param5");
					SavePlayerData(playerid, "Item24param6");

					lastSucceedSlot = 24;
				}
				else if(gPlayerData[playerid][pItem25type] == 0 && slot == 25)
				{
					gPlayerData[playerid][pItem25] = itemid;
					gPlayerData[playerid][pItem25type] = itemidtype;
					gPlayerData[playerid][pItem25param] = itemidparam;
					gPlayerData[playerid][pItem25param2] = itemidparam2;
					gPlayerData[playerid][pItem25param3] = itemidparam3;
					gPlayerData[playerid][pItem25param4] = itemidparam4;
					strdel(gPlayerData[playerid][pItem25param5], 0, 64);
					strins(gPlayerData[playerid][pItem25param5], itemidparam5, 0, 64);
					if(ItemsOnCharacterSlot(itemidtype, itemid) - itemidparam6 > 0)
					{
						gPlayerData[playerid][pItem25param6] = itemidparam6;
						itemidparam6 = 0;
					}
					else
					{
						gPlayerData[playerid][pItem25param6] = ItemsOnCharacterSlot(itemidtype, itemid);
						itemidparam6 -= ItemsOnCharacterSlot(itemidtype, itemid);
					}

					SavePlayerData(playerid, "Item25");
					SavePlayerData(playerid, "Item25type");
					SavePlayerData(playerid, "Item25param");
					SavePlayerData(playerid, "Item25param2");
					SavePlayerData(playerid, "Item25param3");
					SavePlayerData(playerid, "Item25param4");
					SavePlayerData(playerid, "Item25param5");
					SavePlayerData(playerid, "Item25param6");

					lastSucceedSlot = 25;
				}
			}
		}
	}
	return lastSucceedSlot;
}

stock InsertHouseItem(houseid, itemtype, itemid, itemparam, itemparam2, itemparam3, itemparam4, itemparam5[] = "Puste", itemparam6 = 1)
{
	if(Houses[houseid][HItem1type] == 0)
	{
		Houses[houseid][HItem1] = itemid;
		Houses[houseid][HItem1type] = itemtype;
		Houses[houseid][HItem1param] = itemparam;
		Houses[houseid][HItem1param2] = itemparam2;
		Houses[houseid][HItem1param3] = itemparam3;
		Houses[houseid][HItem1param4] = itemparam4;
		strdel(Houses[houseid][HItem1param5], 0, 64);
		strins(Houses[houseid][HItem1param5], itemparam5, 0, 64);
		Houses[houseid][HItem1param6] = itemparam6;

		SaveHouseData(houseid, "HItem1");
		SaveHouseData(houseid, "HItem1type");
		SaveHouseData(houseid, "HItem1param");
		SaveHouseData(houseid, "HItem1param2");
		SaveHouseData(houseid, "HItem1param3");
		SaveHouseData(houseid, "HItem1param4");
		SaveHouseData(houseid, "HItem1param5");
		SaveHouseData(houseid, "HItem1param6");

		return 1;
	}
	if(Houses[houseid][HItem2type] == 0)
	{
		Houses[houseid][HItem2] = itemid;
		Houses[houseid][HItem2type] = itemtype;
		Houses[houseid][HItem2param] = itemparam;
		Houses[houseid][HItem2param2] = itemparam2;
		Houses[houseid][HItem2param3] = itemparam3;
		Houses[houseid][HItem2param4] = itemparam4;
		strdel(Houses[houseid][HItem2param5], 0, 64);
		strins(Houses[houseid][HItem2param5], itemparam5, 0, 64);
		Houses[houseid][HItem2param6] = itemparam6;

		SaveHouseData(houseid, "HItem2");
		SaveHouseData(houseid, "HItem2type");
		SaveHouseData(houseid, "HItem2param");
		SaveHouseData(houseid, "HItem2param2");
		SaveHouseData(houseid, "HItem2param3");
		SaveHouseData(houseid, "HItem2param4");
		SaveHouseData(houseid, "HItem2param5");
		SaveHouseData(houseid, "HItem2param6");

		return 2;
	}
	if(Houses[houseid][HItem3type] == 0)
	{
		Houses[houseid][HItem3] = itemid;
		Houses[houseid][HItem3type] = itemtype;
		Houses[houseid][HItem3param] = itemparam;
		Houses[houseid][HItem3param2] = itemparam2;
		Houses[houseid][HItem3param3] = itemparam3;
		Houses[houseid][HItem3param4] = itemparam4;
		strdel(Houses[houseid][HItem3param5], 0, 64);
		strins(Houses[houseid][HItem3param5], itemparam5, 0, 64);
		Houses[houseid][HItem3param6] = itemparam6;
		
		SaveHouseData(houseid, "HItem3");
		SaveHouseData(houseid, "HItem3type");
		SaveHouseData(houseid, "HItem3param");
		SaveHouseData(houseid, "HItem3param2");
		SaveHouseData(houseid, "HItem3param3");
		SaveHouseData(houseid, "HItem3param4");
		SaveHouseData(houseid, "HItem3param5");
		SaveHouseData(houseid, "HItem3param6");

		return 3;
	}
	if(Houses[houseid][HItem4type] == 0)
	{
		Houses[houseid][HItem4] = itemid;
		Houses[houseid][HItem4type] = itemtype;
		Houses[houseid][HItem4param] = itemparam;
		Houses[houseid][HItem4param2] = itemparam2;
		Houses[houseid][HItem4param3] = itemparam3;
		Houses[houseid][HItem4param4] = itemparam4;
		strdel(Houses[houseid][HItem4param5], 0, 64);
		strins(Houses[houseid][HItem4param5], itemparam5, 0, 64);
		Houses[houseid][HItem4param6] = itemparam6;

		SaveHouseData(houseid, "HItem4");
		SaveHouseData(houseid, "HItem4type");
		SaveHouseData(houseid, "HItem4param");
		SaveHouseData(houseid, "HItem4param2");
		SaveHouseData(houseid, "HItem4param3");
		SaveHouseData(houseid, "HItem4param4");
		SaveHouseData(houseid, "HItem4param5");
		SaveHouseData(houseid, "HItem4param6");

		return 4;
	}
	if(Houses[houseid][HItem5type] == 0)
	{
		Houses[houseid][HItem5] = itemid;
		Houses[houseid][HItem5type] = itemtype;
		Houses[houseid][HItem5param] = itemparam;
		Houses[houseid][HItem5param2] = itemparam2;
		Houses[houseid][HItem5param3] = itemparam3;
		Houses[houseid][HItem5param4] = itemparam4;
		strdel(Houses[houseid][HItem5param5], 0, 64);
		strins(Houses[houseid][HItem5param5], itemparam5, 0, 64);
		Houses[houseid][HItem5param6] = itemparam6;

		SaveHouseData(houseid, "HItem5");
		SaveHouseData(houseid, "HItem5type");
		SaveHouseData(houseid, "HItem5param");
		SaveHouseData(houseid, "HItem5param2");
		SaveHouseData(houseid, "HItem5param3");
		SaveHouseData(houseid, "HItem5param4");
		SaveHouseData(houseid, "HItem5param5");
		SaveHouseData(houseid, "HItem5param6");

		return 5;
	}
	return 0;
}

stock InsertVehItem(vehid, itemtype, itemid, itemparam, itemparam2, itemparam3, itemparam4, itemparam5[] = "Puste", itemparam6 = 1)
{
	new id = -1;
	for(new i = 0; i < sizeof(CarsLenghts); i++)
	{
		if( gVehData[vehid-1][CarModel] == CarsLenghts[i][lenghtModel] )
			id = i;
	}
	if( id == -1 )
		return 0;
	new slot, oldSlot = 0, lastSucceedSlot = 0;
	if(itemtype == 1)
	{
		while(itemparam6 > 0 && oldSlot < 15)
		{
			slot = VHaveItem(vehid, itemtype, itemid, oldSlot+1);
			if(slot > 0)
			{
				printf("BlahX");
				lastSucceedSlot = oldSlot = slot;
				if(ItemsOnVehicleSlot(itemtype, itemid) - itemparam6 - VSlotParam6(vehid, slot) < 0)
				{
					itemparam6 -= ItemsOnVehicleSlot(itemtype, itemid) - VSlotParam6(vehid, slot);
					SetVSlotParam6(vehid, slot, ItemsOnVehicleSlot(itemtype, itemid));
				}
				else
				{
					SetVSlotParam6(vehid, slot, VSlotParam6(vehid, slot) + itemparam6);
					return slot;
				}
			}
			else 
				oldSlot++;
		}
		if(itemparam6 > 0 && VehicleFreeSlotCount(vehid) == 0)
			return lastSucceedSlot;
	}
	slot = 0;
	lastSucceedSlot = 0;
	while(itemparam6 > 0 && slot < 15)
	{
		slot++;
		if(gVehData[vehid-1][VItem1type] == 0 && CarsLenghts[id][trunkSpace] > 0 && slot == 1)
		{
			gVehData[vehid-1][VItem1] = itemid;
			gVehData[vehid-1][VItem1type] = itemtype;
			gVehData[vehid-1][VItem1param] = itemparam;
			gVehData[vehid-1][VItem1param2] = itemparam2;
			gVehData[vehid-1][VItem1param3] = itemparam3;
			gVehData[vehid-1][VItem1param4] = itemparam4;
			strdel(gVehData[vehid-1][VItem1param5], 0, 64);
			strins(gVehData[vehid-1][VItem1param5], itemparam5, 0, 64);
			if(ItemsOnVehicleSlot(itemtype, itemid) - itemparam6 > 0)
			{
				gVehData[vehid-1][VItem1param6] = itemparam6;
				itemparam6 = 0;
			}
			else
			{
				gVehData[vehid-1][VItem1param6] = ItemsOnVehicleSlot(itemtype, itemid);
				itemparam6 -= ItemsOnVehicleSlot(itemtype, itemid);
			}
			
			SaveVehData(vehid-1, "Item1");
			SaveVehData(vehid-1, "Item1type");
			SaveVehData(vehid-1, "Item1param");
			SaveVehData(vehid-1, "Item1param2");
			SaveVehData(vehid-1, "Item1param3");
			SaveVehData(vehid-1, "Item1param4");
			SaveVehData(vehid-1, "Item1param5");
			SaveVehData(vehid-1, "Item1param6");
			
			lastSucceedSlot = 1;
		}
		if(gVehData[vehid-1][VItem2type] == 0 && CarsLenghts[id][trunkSpace] > 1 && slot == 2)
		{
			gVehData[vehid-1][VItem2] = itemid;
			gVehData[vehid-1][VItem2type] = itemtype;
			gVehData[vehid-1][VItem2param] = itemparam;
			gVehData[vehid-1][VItem2param2] = itemparam2;
			gVehData[vehid-1][VItem2param3] = itemparam3;
			gVehData[vehid-1][VItem2param4] = itemparam4;
			strdel(gVehData[vehid-1][VItem2param5], 0, 64);
			strins(gVehData[vehid-1][VItem2param5], itemparam5, 0, 64);
			if(ItemsOnVehicleSlot(itemtype, itemid) - itemparam6 > 0)
			{
				gVehData[vehid-1][VItem2param6] = itemparam6;
				itemparam6 = 0;
			}
			else
			{
				gVehData[vehid-1][VItem2param6] = ItemsOnVehicleSlot(itemtype, itemid);
				itemparam6 -= ItemsOnVehicleSlot(itemtype, itemid);
			}
			
			SaveVehData(vehid-1, "Item2");
			SaveVehData(vehid-1, "Item2type");
			SaveVehData(vehid-1, "Item2param");
			SaveVehData(vehid-1, "Item2param2");
			SaveVehData(vehid-1, "Item2param3");
			SaveVehData(vehid-1, "Item2param4");
			SaveVehData(vehid-1, "Item2param5");
			SaveVehData(vehid-1, "Item2param6");
			
			lastSucceedSlot = 2;
		}
		if(gVehData[vehid-1][VItem3type] == 0 && CarsLenghts[id][trunkSpace] > 2 && slot == 3)
		{
			gVehData[vehid-1][VItem3] = itemid;
			gVehData[vehid-1][VItem3type] = itemtype;
			gVehData[vehid-1][VItem3param] = itemparam;
			gVehData[vehid-1][VItem3param2] = itemparam2;
			gVehData[vehid-1][VItem3param3] = itemparam3;
			gVehData[vehid-1][VItem3param4] = itemparam4;
			strdel(gVehData[vehid-1][VItem3param5], 0, 64);
			strins(gVehData[vehid-1][VItem3param5], itemparam5, 0, 64);
			if(ItemsOnVehicleSlot(itemtype, itemid) - itemparam6 > 0)
			{
				gVehData[vehid-1][VItem3param6] = itemparam6;
				itemparam6 = 0;
			}
			else
			{
				gVehData[vehid-1][VItem3param6] = ItemsOnVehicleSlot(itemtype, itemid);
				itemparam6 -= ItemsOnVehicleSlot(itemtype, itemid);
			}
			
			SaveVehData(vehid-1, "Item3");
			SaveVehData(vehid-1, "Item3type");
			SaveVehData(vehid-1, "Item3param");
			SaveVehData(vehid-1, "Item3param2");
			SaveVehData(vehid-1, "Item3param3");
			SaveVehData(vehid-1, "Item3param4");
			SaveVehData(vehid-1, "Item3param5");
			SaveVehData(vehid-1, "Item3param6");
			
			lastSucceedSlot = 3;
		}
		if(gVehData[vehid-1][VItem4type] == 0 && CarsLenghts[id][trunkSpace] > 3 && slot == 4)
		{
			gVehData[vehid-1][VItem4] = itemid;
			gVehData[vehid-1][VItem4type] = itemtype;
			gVehData[vehid-1][VItem4param] = itemparam;
			gVehData[vehid-1][VItem4param2] = itemparam2;
			gVehData[vehid-1][VItem4param3] = itemparam3;
			gVehData[vehid-1][VItem4param4] = itemparam4;
			strdel(gVehData[vehid-1][VItem4param5], 0, 64);
			strins(gVehData[vehid-1][VItem4param5], itemparam5, 0, 64);
			if(ItemsOnVehicleSlot(itemtype, itemid) - itemparam6 > 0)
			{
				gVehData[vehid-1][VItem4param6] = itemparam6;
				itemparam6 = 0;
			}
			else
			{
				gVehData[vehid-1][VItem4param6] = ItemsOnVehicleSlot(itemtype, itemid);
				itemparam6 -= ItemsOnVehicleSlot(itemtype, itemid);
			}
			
			SaveVehData(vehid-1, "Item4");
			SaveVehData(vehid-1, "Item4type");
			SaveVehData(vehid-1, "Item4param");
			SaveVehData(vehid-1, "Item4param2");
			SaveVehData(vehid-1, "Item4param3");
			SaveVehData(vehid-1, "Item4param4");
			SaveVehData(vehid-1, "Item4param5");
			SaveVehData(vehid-1, "Item4param6");
			
			lastSucceedSlot = 4;
		}
		if(gVehData[vehid-1][VItem5type] == 0 && CarsLenghts[id][trunkSpace] > 4 && slot == 5)
		{
			gVehData[vehid-1][VItem5] = itemid;
			gVehData[vehid-1][VItem5type] = itemtype;
			gVehData[vehid-1][VItem5param] = itemparam;
			gVehData[vehid-1][VItem5param2] = itemparam2;
			gVehData[vehid-1][VItem5param3] = itemparam3;
			gVehData[vehid-1][VItem5param4] = itemparam4;
			strdel(gVehData[vehid-1][VItem5param5], 0, 64);
			strins(gVehData[vehid-1][VItem5param5], itemparam5, 0, 64);
			if(ItemsOnVehicleSlot(itemtype, itemid) - itemparam6 > 0)
			{
				gVehData[vehid-1][VItem5param6] = itemparam6;
				itemparam6 = 0;
			}
			else
			{
				gVehData[vehid-1][VItem5param6] = ItemsOnVehicleSlot(itemtype, itemid);
				itemparam6 -= ItemsOnVehicleSlot(itemtype, itemid);
			}
			
			SaveVehData(vehid-1, "Item5");
			SaveVehData(vehid-1, "Item5type");
			SaveVehData(vehid-1, "Item5param");
			SaveVehData(vehid-1, "Item5param2");
			SaveVehData(vehid-1, "Item5param3");
			SaveVehData(vehid-1, "Item5param4");
			SaveVehData(vehid-1, "Item5param5");
			SaveVehData(vehid-1, "Item5param6");
			
			lastSucceedSlot = 5;
		}
		if(gVehData[vehid-1][VItem6type] == 0 && CarsLenghts[id][trunkSpace] > 5 && slot == 6)
		{
			gVehData[vehid-1][VItem6] = itemid;
			gVehData[vehid-1][VItem6type] = itemtype;
			gVehData[vehid-1][VItem6param] = itemparam;
			gVehData[vehid-1][VItem6param2] = itemparam2;
			gVehData[vehid-1][VItem6param3] = itemparam3;
			gVehData[vehid-1][VItem6param4] = itemparam4;
			strdel(gVehData[vehid-1][VItem6param5], 0, 64);
			strins(gVehData[vehid-1][VItem6param5], itemparam5, 0, 64);
			if(ItemsOnVehicleSlot(itemtype, itemid) - itemparam6 > 0)
			{
				gVehData[vehid-1][VItem6param6] = itemparam6;
				itemparam6 = 0;
			}
			else
			{
				gVehData[vehid-1][VItem6param6] = ItemsOnVehicleSlot(itemtype, itemid);
				itemparam6 -= ItemsOnVehicleSlot(itemtype, itemid);
			}
			
			SaveVehData(vehid-1, "Item6");
			SaveVehData(vehid-1, "Item6type");
			SaveVehData(vehid-1, "Item6param");
			SaveVehData(vehid-1, "Item6param2");
			SaveVehData(vehid-1, "Item6param3");
			SaveVehData(vehid-1, "Item6param4");
			SaveVehData(vehid-1, "Item6param5");
			SaveVehData(vehid-1, "Item6param6");
			
			lastSucceedSlot = 6;
		}
		if(gVehData[vehid-1][VItem7type] == 0 && CarsLenghts[id][trunkSpace] > 6 && slot == 7)
		{
			gVehData[vehid-1][VItem7] = itemid;
			gVehData[vehid-1][VItem7type] = itemtype;
			gVehData[vehid-1][VItem7param] = itemparam;
			gVehData[vehid-1][VItem7param2] = itemparam2;
			gVehData[vehid-1][VItem7param3] = itemparam3;
			gVehData[vehid-1][VItem7param4] = itemparam4;
			strdel(gVehData[vehid-1][VItem7param5], 0, 64);
			strins(gVehData[vehid-1][VItem7param5], itemparam5, 0, 64);
			if(ItemsOnVehicleSlot(itemtype, itemid) - itemparam6 > 0)
			{
				gVehData[vehid-1][VItem7param6] = itemparam6;
				itemparam6 = 0;
			}
			else
			{
				gVehData[vehid-1][VItem7param6] = ItemsOnVehicleSlot(itemtype, itemid);
				itemparam6 -= ItemsOnVehicleSlot(itemtype, itemid);
			}
			
			SaveVehData(vehid-1, "Item7");
			SaveVehData(vehid-1, "Item7type");
			SaveVehData(vehid-1, "Item7param");
			SaveVehData(vehid-1, "Item7param2");
			SaveVehData(vehid-1, "Item7param3");
			SaveVehData(vehid-1, "Item7param4");
			SaveVehData(vehid-1, "Item7param5");
			SaveVehData(vehid-1, "Item7param6");
			
			lastSucceedSlot = 7;
		}
		if(gVehData[vehid-1][VItem8type] == 0 && CarsLenghts[id][trunkSpace] > 7 && slot == 8)
		{
			gVehData[vehid-1][VItem8] = itemid;
			gVehData[vehid-1][VItem8type] = itemtype;
			gVehData[vehid-1][VItem8param] = itemparam;
			gVehData[vehid-1][VItem8param2] = itemparam2;
			gVehData[vehid-1][VItem8param3] = itemparam3;
			gVehData[vehid-1][VItem8param4] = itemparam4;
			strdel(gVehData[vehid-1][VItem8param5], 0, 64);
			strins(gVehData[vehid-1][VItem8param5], itemparam5, 0, 64);
			if(ItemsOnVehicleSlot(itemtype, itemid) - itemparam6 > 0)
			{
				gVehData[vehid-1][VItem8param6] = itemparam6;
				itemparam6 = 0;
			}
			else
			{
				gVehData[vehid-1][VItem8param6] = ItemsOnVehicleSlot(itemtype, itemid);
				itemparam6 -= ItemsOnVehicleSlot(itemtype, itemid);
			}
			
			SaveVehData(vehid-1, "Item8");
			SaveVehData(vehid-1, "Item8type");
			SaveVehData(vehid-1, "Item8param");
			SaveVehData(vehid-1, "Item8param2");
			SaveVehData(vehid-1, "Item8param3");
			SaveVehData(vehid-1, "Item8param4");
			SaveVehData(vehid-1, "Item8param5");
			SaveVehData(vehid-1, "Item8param6");
			
			lastSucceedSlot = 8;
		}
		if(gVehData[vehid-1][VItem9type] == 0 && CarsLenghts[id][trunkSpace] > 8 && slot == 9)
		{
			gVehData[vehid-1][VItem9] = itemid;
			gVehData[vehid-1][VItem9type] = itemtype;
			gVehData[vehid-1][VItem9param] = itemparam;
			gVehData[vehid-1][VItem9param2] = itemparam2;
			gVehData[vehid-1][VItem9param3] = itemparam3;
			gVehData[vehid-1][VItem9param4] = itemparam4;
			strdel(gVehData[vehid-1][VItem9param5], 0, 64);
			strins(gVehData[vehid-1][VItem9param5], itemparam5, 0, 64);
			if(ItemsOnVehicleSlot(itemtype, itemid) - itemparam6 > 0)
			{
				gVehData[vehid-1][VItem9param6] = itemparam6;
				itemparam6 = 0;
			}
			else
			{
				gVehData[vehid-1][VItem9param6] = ItemsOnVehicleSlot(itemtype, itemid);
				itemparam6 -= ItemsOnVehicleSlot(itemtype, itemid);
			}
			
			SaveVehData(vehid-1, "Item9");
			SaveVehData(vehid-1, "Item9type");
			SaveVehData(vehid-1, "Item9param");
			SaveVehData(vehid-1, "Item9param2");
			SaveVehData(vehid-1, "Item9param3");
			SaveVehData(vehid-1, "Item9param4");
			SaveVehData(vehid-1, "Item9param5");
			SaveVehData(vehid-1, "Item9param6");
			
			lastSucceedSlot = 9;
		}
		if(gVehData[vehid-1][VItem10type] == 0 && CarsLenghts[id][trunkSpace] > 9 && slot == 10)
		{
			gVehData[vehid-1][VItem10] = itemid;
			gVehData[vehid-1][VItem10type] = itemtype;
			gVehData[vehid-1][VItem10param] = itemparam;
			gVehData[vehid-1][VItem10param2] = itemparam2;
			gVehData[vehid-1][VItem10param3] = itemparam3;
			gVehData[vehid-1][VItem10param4] = itemparam4;
			strdel(gVehData[vehid-1][VItem10param5], 0, 64);
			strins(gVehData[vehid-1][VItem10param5], itemparam5, 0, 64);
			if(ItemsOnVehicleSlot(itemtype, itemid) - itemparam6 > 0)
			{
				gVehData[vehid-1][VItem10param6] = itemparam6;
				itemparam6 = 0;
			}
			else
			{
				gVehData[vehid-1][VItem10param6] = ItemsOnVehicleSlot(itemtype, itemid);
				itemparam6 -= ItemsOnVehicleSlot(itemtype, itemid);
			}
			
			SaveVehData(vehid-1, "Item10");
			SaveVehData(vehid-1, "Item10type");
			SaveVehData(vehid-1, "Item10param");
			SaveVehData(vehid-1, "Item10param2");
			SaveVehData(vehid-1, "Item10param3");
			SaveVehData(vehid-1, "Item10param4");
			SaveVehData(vehid-1, "Item10param5");
			SaveVehData(vehid-1, "Item10param6");
			
			lastSucceedSlot = 10;
		}
		if(gVehData[vehid-1][VItem11type] == 0 && CarsLenghts[id][trunkSpace] > 10 && slot == 11)
		{
			gVehData[vehid-1][VItem11] = itemid;
			gVehData[vehid-1][VItem11type] = itemtype;
			gVehData[vehid-1][VItem11param] = itemparam;
			gVehData[vehid-1][VItem11param2] = itemparam2;
			gVehData[vehid-1][VItem11param3] = itemparam3;
			gVehData[vehid-1][VItem11param4] = itemparam4;
			strdel(gVehData[vehid-1][VItem11param5], 0, 64);
			strins(gVehData[vehid-1][VItem11param5], itemparam5, 0, 64);
			if(ItemsOnVehicleSlot(itemtype, itemid) - itemparam6 > 0)
			{
				gVehData[vehid-1][VItem11param6] = itemparam6;
				itemparam6 = 0;
			}
			else
			{
				gVehData[vehid-1][VItem11param6] = ItemsOnVehicleSlot(itemtype, itemid);
				itemparam6 -= ItemsOnVehicleSlot(itemtype, itemid);
			}
			
			SaveVehData(vehid-1, "Item11");
			SaveVehData(vehid-1, "Item11type");
			SaveVehData(vehid-1, "Item11param");
			SaveVehData(vehid-1, "Item11param2");
			SaveVehData(vehid-1, "Item11param3");
			SaveVehData(vehid-1, "Item11param4");
			SaveVehData(vehid-1, "Item11param5");
			SaveVehData(vehid-1, "Item11param6");
			
			lastSucceedSlot = 11;
		}
		if(gVehData[vehid-1][VItem12type] == 0 && CarsLenghts[id][trunkSpace] > 11 && slot == 12)
		{
			gVehData[vehid-1][VItem12] = itemid;
			gVehData[vehid-1][VItem12type] = itemtype;
			gVehData[vehid-1][VItem12param] = itemparam;
			gVehData[vehid-1][VItem12param2] = itemparam2;
			gVehData[vehid-1][VItem12param3] = itemparam3;
			gVehData[vehid-1][VItem12param4] = itemparam4;
			strdel(gVehData[vehid-1][VItem12param5], 0, 64);
			strins(gVehData[vehid-1][VItem12param5], itemparam5, 0, 64);
			if(ItemsOnVehicleSlot(itemtype, itemid) - itemparam6 > 0)
			{
				gVehData[vehid-1][VItem12param6] = itemparam6;
				itemparam6 = 0;
			}
			else
			{
				gVehData[vehid-1][VItem12param6] = ItemsOnVehicleSlot(itemtype, itemid);
				itemparam6 -= ItemsOnVehicleSlot(itemtype, itemid);
			}
			
			SaveVehData(vehid-1, "Item12");
			SaveVehData(vehid-1, "Item12type");
			SaveVehData(vehid-1, "Item12param");
			SaveVehData(vehid-1, "Item12param2");
			SaveVehData(vehid-1, "Item12param3");
			SaveVehData(vehid-1, "Item12param4");
			SaveVehData(vehid-1, "Item12param5");
			SaveVehData(vehid-1, "Item12param6");
			
			lastSucceedSlot = 12;
		}
		if(gVehData[vehid-1][VItem13type] == 0 && CarsLenghts[id][trunkSpace] > 12 && slot == 13)
		{
			gVehData[vehid-1][VItem13] = itemid;
			gVehData[vehid-1][VItem13type] = itemtype;
			gVehData[vehid-1][VItem13param] = itemparam;
			gVehData[vehid-1][VItem13param2] = itemparam2;
			gVehData[vehid-1][VItem13param3] = itemparam3;
			gVehData[vehid-1][VItem13param4] = itemparam4;
			strdel(gVehData[vehid-1][VItem13param5], 0, 64);
			strins(gVehData[vehid-1][VItem13param5], itemparam5, 0, 64);
			if(ItemsOnVehicleSlot(itemtype, itemid) - itemparam6 > 0)
			{
				gVehData[vehid-1][VItem13param6] = itemparam6;
				itemparam6 = 0;
			}
			else
			{
				gVehData[vehid-1][VItem13param6] = ItemsOnVehicleSlot(itemtype, itemid);
				itemparam6 -= ItemsOnVehicleSlot(itemtype, itemid);
			}
			
			SaveVehData(vehid-1, "Item13");
			SaveVehData(vehid-1, "Item13type");
			SaveVehData(vehid-1, "Item13param");
			SaveVehData(vehid-1, "Item13param2");
			SaveVehData(vehid-1, "Item13param3");
			SaveVehData(vehid-1, "Item13param4");
			SaveVehData(vehid-1, "Item13param5");
			SaveVehData(vehid-1, "Item13param6");
			
			lastSucceedSlot = 13;
		}
		if(gVehData[vehid-1][VItem14type] == 0 && CarsLenghts[id][trunkSpace] > 13 && slot == 14)
		{
			gVehData[vehid-1][VItem14] = itemid;
			gVehData[vehid-1][VItem14type] = itemtype;
			gVehData[vehid-1][VItem14param] = itemparam;
			gVehData[vehid-1][VItem14param2] = itemparam2;
			gVehData[vehid-1][VItem14param3] = itemparam3;
			gVehData[vehid-1][VItem14param4] = itemparam4;
			strdel(gVehData[vehid-1][VItem14param5], 0, 64);
			strins(gVehData[vehid-1][VItem14param5], itemparam5, 0, 64);
			if(ItemsOnVehicleSlot(itemtype, itemid) - itemparam6 > 0)
			{
				gVehData[vehid-1][VItem14param6] = itemparam6;
				itemparam6 = 0;
			}
			else
			{
				gVehData[vehid-1][VItem14param6] = ItemsOnVehicleSlot(itemtype, itemid);
				itemparam6 -= ItemsOnVehicleSlot(itemtype, itemid);
			}
			
			SaveVehData(vehid-1, "Item14");
			SaveVehData(vehid-1, "Item14type");
			SaveVehData(vehid-1, "Item14param");
			SaveVehData(vehid-1, "Item14param2");
			SaveVehData(vehid-1, "Item14param3");
			SaveVehData(vehid-1, "Item14param4");
			SaveVehData(vehid-1, "Item14param5");
			SaveVehData(vehid-1, "Item14param6");
			
			lastSucceedSlot = 14;
		}
		if(gVehData[vehid-1][VItem15type] == 0 && CarsLenghts[id][trunkSpace] > 14 && slot == 15)
		{
			gVehData[vehid-1][VItem15] = itemid;
			gVehData[vehid-1][VItem15type] = itemtype;
			gVehData[vehid-1][VItem15param] = itemparam;
			gVehData[vehid-1][VItem15param2] = itemparam2;
			gVehData[vehid-1][VItem15param3] = itemparam3;
			gVehData[vehid-1][VItem15param4] = itemparam4;
			strdel(gVehData[vehid-1][VItem15param5], 0, 64);
			strins(gVehData[vehid-1][VItem15param5], itemparam5, 0, 64);
			if(ItemsOnVehicleSlot(itemtype, itemid) - itemparam6 > 0)
			{
				gVehData[vehid-1][VItem15param6] = itemparam6;
				itemparam6 = 0;
			}
			else
			{
				gVehData[vehid-1][VItem15param6] = ItemsOnVehicleSlot(itemtype, itemid);
				itemparam6 -= ItemsOnVehicleSlot(itemtype, itemid);
			}
			
			SaveVehData(vehid-1, "Item15");
			SaveVehData(vehid-1, "Item15type");
			SaveVehData(vehid-1, "Item15param");
			SaveVehData(vehid-1, "Item15param2");
			SaveVehData(vehid-1, "Item15param3");
			SaveVehData(vehid-1, "Item15param4");
			SaveVehData(vehid-1, "Item15param5");
			SaveVehData(vehid-1, "Item15param6");
			
			lastSucceedSlot = 15;
		}
	}
	return lastSucceedSlot;
}

stock SetPSlotParam1(playerid, slot, value)
{
	if(slot == 1)
	{
		gPlayerData[playerid][pItem1param] = value;
		SavePlayerData(playerid, "Item1param");
		return 1;
	}
	if(slot == 2)
	{
		gPlayerData[playerid][pItem2param] = value;
		SavePlayerData(playerid, "Item2param");
		return 1;
	}
	if(slot == 3)
	{
		gPlayerData[playerid][pItem3param] = value;
		SavePlayerData(playerid, "Item3param");
		return 1;
	}
	if(slot == 4)
	{
		gPlayerData[playerid][pItem4param] = value;
		SavePlayerData(playerid, "Item4param");
		return 1;
	}
	if(slot == 5)
	{
		gPlayerData[playerid][pItem5param] = value;
		SavePlayerData(playerid, "Item5param");
		return 1;
	}
	if(PHaveExpandItem(playerid) || gPlayerData[playerid][pVipItem] > 0)
	{
		if(slot == 6)
		{
			gPlayerData[playerid][pItem6param] = value;
			SavePlayerData(playerid, "Item6param");
			return 1;
		}
		if(slot == 7)
		{
			gPlayerData[playerid][pItem7param] = value;
			SavePlayerData(playerid, "Item7param");
			return 1;
		}
		if(slot == 8)
		{
			gPlayerData[playerid][pItem8param] = value;
			SavePlayerData(playerid, "Item8param");
			return 1;
		}
		if(slot == 9)
		{
			gPlayerData[playerid][pItem9param] = value;
			SavePlayerData(playerid, "Item9param");
			return 1;
		}
		if(slot == 10)
		{
			gPlayerData[playerid][pItem10param] = value;
			SavePlayerData(playerid, "Item10param");
			return 1;
		}
		if(slot == 11)
		{
			gPlayerData[playerid][pItem11param] = value;
			SavePlayerData(playerid, "Item11param");
			return 1;
		}
		if(slot == 12)
		{
			gPlayerData[playerid][pItem12param] = value;
			SavePlayerData(playerid, "Item12param");
			return 1;
		}
		if(slot == 13)
		{
			gPlayerData[playerid][pItem13param] = value;
			SavePlayerData(playerid, "Item13param");
			return 1;
		}
		if(slot == 14)
		{
			gPlayerData[playerid][pItem14param] = value;
			SavePlayerData(playerid, "Item14param");
			return 1;
		}
		if(slot == 15)
		{
			gPlayerData[playerid][pItem15param] = value;
			SavePlayerData(playerid, "Item15param");
			return 1;
		}
		if(gPlayerData[playerid][pVipItem] > 0)
		{
			if(slot == 16)
			{
				gPlayerData[playerid][pItem16param] = value;
				SavePlayerData(playerid, "Item16param");
				return 1;
			}
			if(slot == 17)
			{
				gPlayerData[playerid][pItem17param] = value;
				SavePlayerData(playerid, "Item17param");
				return 1;
			}
			if(slot == 18)
			{
				gPlayerData[playerid][pItem18param] = value;
				SavePlayerData(playerid, "Item18param");
				return 1;
			}
			if(slot == 19)
			{
				gPlayerData[playerid][pItem19param] = value;
				SavePlayerData(playerid, "Item19param");
				return 1;
			}
			if(slot == 20)
			{
				gPlayerData[playerid][pItem20param] = value;
				SavePlayerData(playerid, "Item20param");
				return 1;
			}
			if(slot == 21)
			{
				gPlayerData[playerid][pItem21param] = value;
				SavePlayerData(playerid, "Item21param");
				return 1;
			}
			if(slot == 22)
			{
				gPlayerData[playerid][pItem22param] = value;
				SavePlayerData(playerid, "Item22param");
				return 1;
			}
			if(slot == 23)
			{
				gPlayerData[playerid][pItem23param] = value;
				SavePlayerData(playerid, "Item23param");
				return 1;
			}
			if(slot == 24)
			{
				gPlayerData[playerid][pItem24param] = value;
				SavePlayerData(playerid, "Item24param");
				return 1;
			}
			if(slot == 25)
			{
				gPlayerData[playerid][pItem25param] = value;
				SavePlayerData(playerid, "Item25param");
				return 1;
			}
		}
	}
	return 0;
}

stock SetPSlotParam2(playerid, slot, value)
{
	if(slot == 1)
	{
		gPlayerData[playerid][pItem1param2] = value;
		SavePlayerData(playerid, "Item1param2");
		return 1;
	}
	if(slot == 2)
	{
		gPlayerData[playerid][pItem2param2] = value;
		SavePlayerData(playerid, "Item2param2");
		return 1;
	}
	if(slot == 3)
	{
		gPlayerData[playerid][pItem3param2] = value;
		SavePlayerData(playerid, "Item3param2");
		return 1;
	}
	if(slot == 4)
	{
		gPlayerData[playerid][pItem4param2] = value;
		SavePlayerData(playerid, "Item4param2");
		return 1;
	}
	if(slot == 5)
	{
		gPlayerData[playerid][pItem5param2] = value;
		SavePlayerData(playerid, "Item5param2");
		return 1;
	}
	if(PHaveExpandItem(playerid) || gPlayerData[playerid][pVipItem] > 0)
	{
		if(slot == 6)
		{
			gPlayerData[playerid][pItem6param2] = value;
			SavePlayerData(playerid, "Item6param2");
			return 1;
		}
		if(slot == 7)
		{
			gPlayerData[playerid][pItem7param2] = value;
			SavePlayerData(playerid, "Item7param2");
			return 1;
		}
		if(slot == 8)
		{
			gPlayerData[playerid][pItem8param2] = value;
			SavePlayerData(playerid, "Item8param2");
			return 1;
		}
		if(slot == 9)
		{
			gPlayerData[playerid][pItem9param2] = value;
			SavePlayerData(playerid, "Item9param2");
			return 1;
		}
		if(slot == 10)
		{
			gPlayerData[playerid][pItem10param2] = value;
			SavePlayerData(playerid, "Item10param2");
			return 1;
		}
		if(slot == 11)
		{
			gPlayerData[playerid][pItem11param2] = value;
			SavePlayerData(playerid, "Item11param2");
			return 1;
		}
		if(slot == 12)
		{
			gPlayerData[playerid][pItem12param2] = value;
			SavePlayerData(playerid, "Item12param2");
			return 1;
		}
		if(slot == 13)
		{
			gPlayerData[playerid][pItem13param2] = value;
			SavePlayerData(playerid, "Item13param2");
			return 1;
		}
		if(slot == 14)
		{
			gPlayerData[playerid][pItem14param2] = value;
			SavePlayerData(playerid, "Item14param2");
			return 1;
		}
		if(slot == 15)
		{
			gPlayerData[playerid][pItem15param2] = value;
			SavePlayerData(playerid, "Item15param2");
			return 1;
		}
		if(gPlayerData[playerid][pVipItem] > 0)
		{
			if(slot == 16)
			{
				gPlayerData[playerid][pItem16param2] = value;
				SavePlayerData(playerid, "Item16param2");
				return 1;
			}
			if(slot == 17)
			{
				gPlayerData[playerid][pItem17param2] = value;
				SavePlayerData(playerid, "Item17param2");
				return 1;
			}
			if(slot == 18)
			{
				gPlayerData[playerid][pItem18param2] = value;
				SavePlayerData(playerid, "Item18param2");
				return 1;
			}
			if(slot == 19)
			{
				gPlayerData[playerid][pItem19param2] = value;
				SavePlayerData(playerid, "Item19param2");
				return 1;
			}
			if(slot == 20)
			{
				gPlayerData[playerid][pItem20param2] = value;
				SavePlayerData(playerid, "Item20param2");
				return 1;
			}
			if(slot == 21)
			{
				gPlayerData[playerid][pItem21param2] = value;
				SavePlayerData(playerid, "Item21param2");
				return 1;
			}
			if(slot == 22)
			{
				gPlayerData[playerid][pItem22param2] = value;
				SavePlayerData(playerid, "Item22param2");
				return 1;
			}
			if(slot == 23)
			{
				gPlayerData[playerid][pItem23param2] = value;
				SavePlayerData(playerid, "Item23param2");
				return 1;
			}
			if(slot == 24)
			{
				gPlayerData[playerid][pItem24param2] = value;
				SavePlayerData(playerid, "Item24param2");
				return 1;
			}
			if(slot == 25)
			{
				gPlayerData[playerid][pItem25param2] = value;
				SavePlayerData(playerid, "Item25param2");
				return 1;
			}
		}
	}
	return 0;
}

stock SetPSlotParam3(playerid, slot, value)
{
	if(slot == 1)
	{
		gPlayerData[playerid][pItem1param3] = value;
		SavePlayerData(playerid, "Item1param3");
		return 1;
	}
	if(slot == 2)
	{
		gPlayerData[playerid][pItem2param3] = value;
		SavePlayerData(playerid, "Item2param3");
		return 1;
	}
	if(slot == 3)
	{
		gPlayerData[playerid][pItem3param3] = value;
		SavePlayerData(playerid, "Item3param3");
		return 1;
	}
	if(slot == 4)
	{
		gPlayerData[playerid][pItem4param3] = value;
		SavePlayerData(playerid, "Item4param3");
		return 1;
	}
	if(slot == 5)
	{
		gPlayerData[playerid][pItem5param3] = value;
		SavePlayerData(playerid, "Item5param3");
		return 1;
	}
	if(PHaveExpandItem(playerid) || gPlayerData[playerid][pVipItem] > 0)
	{
		if(slot == 6)
		{
			gPlayerData[playerid][pItem6param3] = value;
			SavePlayerData(playerid, "Item6param3");
			return 1;
		}
		if(slot == 7)
		{
			gPlayerData[playerid][pItem7param3] = value;
			SavePlayerData(playerid, "Item7param3");
			return 1;
		}
		if(slot == 8)
		{
			gPlayerData[playerid][pItem8param3] = value;
			SavePlayerData(playerid, "Item8param3");
			return 1;
		}
		if(slot == 9)
		{
			gPlayerData[playerid][pItem9param3] = value;
			SavePlayerData(playerid, "Item9param3");
			return 1;
		}
		if(slot == 10)
		{
			gPlayerData[playerid][pItem10param3] = value;
			SavePlayerData(playerid, "Item10param3");
			return 1;
		}
		if(slot == 11)
		{
			gPlayerData[playerid][pItem11param3] = value;
			SavePlayerData(playerid, "Item11param3");
			return 1;
		}
		if(slot == 12)
		{
			gPlayerData[playerid][pItem12param3] = value;
			SavePlayerData(playerid, "Item12param3");
			return 1;
		}
		if(slot == 13)
		{
			gPlayerData[playerid][pItem13param3] = value;
			SavePlayerData(playerid, "Item13param3");
			return 1;
		}
		if(slot == 14)
		{
			gPlayerData[playerid][pItem14param3] = value;
			SavePlayerData(playerid, "Item14param3");
			return 1;
		}
		if(slot == 15)
		{
			gPlayerData[playerid][pItem15param3] = value;
			SavePlayerData(playerid, "Item15param3");
			return 1;
		}
		if(gPlayerData[playerid][pVipItem] > 0)
		{
			if(slot == 16)
			{
				gPlayerData[playerid][pItem16param3] = value;
				SavePlayerData(playerid, "Item16param3");
				return 1;
			}
			if(slot == 17)
			{
				gPlayerData[playerid][pItem17param3] = value;
				SavePlayerData(playerid, "Item17param3");
				return 1;
			}
			if(slot == 18)
			{
				gPlayerData[playerid][pItem18param3] = value;
				SavePlayerData(playerid, "Item18param3");
				return 1;
			}
			if(slot == 19)
			{
				gPlayerData[playerid][pItem19param3] = value;
				SavePlayerData(playerid, "Item19param3");
				return 1;
			}
			if(slot == 20)
			{
				gPlayerData[playerid][pItem20param3] = value;
				SavePlayerData(playerid, "Item20param3");
				return 1;
			}
			if(slot == 21)
			{
				gPlayerData[playerid][pItem21param3] = value;
				SavePlayerData(playerid, "Item21param3");
				return 1;
			}
			if(slot == 22)
			{
				gPlayerData[playerid][pItem22param3] = value;
				SavePlayerData(playerid, "Item22param3");
				return 1;
			}
			if(slot == 23)
			{
				gPlayerData[playerid][pItem23param3] = value;
				SavePlayerData(playerid, "Item23param3");
				return 1;
			}
			if(slot == 24)
			{
				gPlayerData[playerid][pItem24param3] = value;
				SavePlayerData(playerid, "Item24param3");
				return 1;
			}
			if(slot == 25)
			{
				gPlayerData[playerid][pItem25param3] = value;
				SavePlayerData(playerid, "Item25param3");
				return 1;
			}
		}
	}
	return 0;
}

stock SetPSlotParam4(playerid, slot, value)
{
	if(slot == 1)
	{
		gPlayerData[playerid][pItem1param4] = value;
		SavePlayerData(playerid, "Item1param4");
		return 1;
	}
	if(slot == 2)
	{
		gPlayerData[playerid][pItem2param4] = value;
		SavePlayerData(playerid, "Item2param4");
		return 1;
	}
	if(slot == 3)
	{
		gPlayerData[playerid][pItem3param4] = value;
		SavePlayerData(playerid, "Item3param4");
		return 1;
	}
	if(slot == 4)
	{
		gPlayerData[playerid][pItem4param4] = value;
		SavePlayerData(playerid, "Item4param4");
		return 1;
	}
	if(slot == 5)
	{
		gPlayerData[playerid][pItem5param4] = value;
		SavePlayerData(playerid, "Item5param4");
		return 1;
	}
	if(PHaveExpandItem(playerid) || gPlayerData[playerid][pVipItem] > 0)
	{
		if(slot == 6)
		{
			gPlayerData[playerid][pItem6param4] = value;
			SavePlayerData(playerid, "Item6param4");
			return 1;
		}
		if(slot == 7)
		{
			gPlayerData[playerid][pItem7param4] = value;
			SavePlayerData(playerid, "Item7param4");
			return 1;
		}
		if(slot == 8)
		{
			gPlayerData[playerid][pItem8param4] = value;
			SavePlayerData(playerid, "Item8param4");
			return 1;
		}
		if(slot == 9)
		{
			gPlayerData[playerid][pItem9param4] = value;
			SavePlayerData(playerid, "Item9param4");
			return 1;
		}
		if(slot == 10)
		{
			gPlayerData[playerid][pItem10param4] = value;
			SavePlayerData(playerid, "Item10param4");
			return 1;
		}
		if(slot == 11)
		{
			gPlayerData[playerid][pItem11param4] = value;
			SavePlayerData(playerid, "Item11param4");
			return 1;
		}
		if(slot == 12)
		{
			gPlayerData[playerid][pItem12param4] = value;
			SavePlayerData(playerid, "Item12param4");
			return 1;
		}
		if(slot == 13)
		{
			gPlayerData[playerid][pItem13param4] = value;
			SavePlayerData(playerid, "Item13param4");
			return 1;
		}
		if(slot == 14)
		{
			gPlayerData[playerid][pItem14param4] = value;
			SavePlayerData(playerid, "Item14param4");
			return 1;
		}
		if(slot == 15)
		{
			gPlayerData[playerid][pItem15param4] = value;
			SavePlayerData(playerid, "Item15param4");
			return 1;
		}
		if(gPlayerData[playerid][pVipItem] > 0)
		{
			if(slot == 16)
			{
				gPlayerData[playerid][pItem16param4] = value;
				SavePlayerData(playerid, "Item16param4");
				return 1;
			}
			if(slot == 17)
			{
				gPlayerData[playerid][pItem17param4] = value;
				SavePlayerData(playerid, "Item17param4");
				return 1;
			}
			if(slot == 18)
			{
				gPlayerData[playerid][pItem18param4] = value;
				SavePlayerData(playerid, "Item18param4");
				return 1;
			}
			if(slot == 19)
			{
				gPlayerData[playerid][pItem19param4] = value;
				SavePlayerData(playerid, "Item19param4");
				return 1;
			}
			if(slot == 20)
			{
				gPlayerData[playerid][pItem20param4] = value;
				SavePlayerData(playerid, "Item20param4");
				return 1;
			}
			if(slot == 21)
			{
				gPlayerData[playerid][pItem21param4] = value;
				SavePlayerData(playerid, "Item21param4");
				return 1;
			}
			if(slot == 22)
			{
				gPlayerData[playerid][pItem22param4] = value;
				SavePlayerData(playerid, "Item22param4");
				return 1;
			}
			if(slot == 23)
			{
				gPlayerData[playerid][pItem23param4] = value;
				SavePlayerData(playerid, "Item23param4");
				return 1;
			}
			if(slot == 24)
			{
				gPlayerData[playerid][pItem24param4] = value;
				SavePlayerData(playerid, "Item24param4");
				return 1;
			}
			if(slot == 25)
			{
				gPlayerData[playerid][pItem25param4] = value;
				SavePlayerData(playerid, "Item25param4");
				return 1;
			}
		}
	}
	return 0;
}

stock SetPSlotParam6(playerid, slot, value)
{
	if(slot == 1)
	{
		gPlayerData[playerid][pItem1param6] = value;
		SavePlayerData(playerid, "Item1param6");
		return 1;
	}
	if(slot == 2)
	{
		gPlayerData[playerid][pItem2param6] = value;
		SavePlayerData(playerid, "Item2param6");
		return 1;
	}
	if(slot == 3)
	{
		gPlayerData[playerid][pItem3param6] = value;
		SavePlayerData(playerid, "Item3param6");
		return 1;
	}
	if(slot == 4)
	{
		gPlayerData[playerid][pItem4param6] = value;
		SavePlayerData(playerid, "Item4param6");
		return 1;
	}
	if(slot == 5)
	{
		gPlayerData[playerid][pItem5param6] = value;
		SavePlayerData(playerid, "Item5param6");
		return 1;
	}
	if(PHaveExpandItem(playerid) || gPlayerData[playerid][pVipItem] > 0)
	{
		if(slot == 6)
		{
			gPlayerData[playerid][pItem6param6] = value;
			SavePlayerData(playerid, "Item6param6");
			return 1;
		}
		if(slot == 7)
		{
			gPlayerData[playerid][pItem7param6] = value;
			SavePlayerData(playerid, "Item7param6");
			return 1;
		}
		if(slot == 8)
		{
			gPlayerData[playerid][pItem8param6] = value;
			SavePlayerData(playerid, "Item8param6");
			return 1;
		}
		if(slot == 9)
		{
			gPlayerData[playerid][pItem9param6] = value;
			SavePlayerData(playerid, "Item9param6");
			return 1;
		}
		if(slot == 10)
		{
			gPlayerData[playerid][pItem10param6] = value;
			SavePlayerData(playerid, "Item10param6");
			return 1;
		}
		if(slot == 11)
		{
			gPlayerData[playerid][pItem11param6] = value;
			SavePlayerData(playerid, "Item11param6");
			return 1;
		}
		if(slot == 12)
		{
			gPlayerData[playerid][pItem12param6] = value;
			SavePlayerData(playerid, "Item12param6");
			return 1;
		}
		if(slot == 13)
		{
			gPlayerData[playerid][pItem13param6] = value;
			SavePlayerData(playerid, "Item13param6");
			return 1;
		}
		if(slot == 14)
		{
			gPlayerData[playerid][pItem14param6] = value;
			SavePlayerData(playerid, "Item14param6");
			return 1;
		}
		if(slot == 15)
		{
			gPlayerData[playerid][pItem15param6] = value;
			SavePlayerData(playerid, "Item15param6");
			return 1;
		}
		if(gPlayerData[playerid][pVipItem] > 0)
		{
			if(slot == 16)
			{
				gPlayerData[playerid][pItem16param6] = value;
				SavePlayerData(playerid, "Item16param6");
				return 1;
			}
			if(slot == 17)
			{
				gPlayerData[playerid][pItem17param6] = value;
				SavePlayerData(playerid, "Item17param6");
				return 1;
			}
			if(slot == 18)
			{
				gPlayerData[playerid][pItem18param6] = value;
				SavePlayerData(playerid, "Item18param6");
				return 1;
			}
			if(slot == 19)
			{
				gPlayerData[playerid][pItem19param6] = value;
				SavePlayerData(playerid, "Item19param6");
				return 1;
			}
			if(slot == 20)
			{
				gPlayerData[playerid][pItem20param6] = value;
				SavePlayerData(playerid, "Item20param6");
				return 1;
			}
			if(slot == 21)
			{
				gPlayerData[playerid][pItem21param6] = value;
				SavePlayerData(playerid, "Item21param6");
				return 1;
			}
			if(slot == 22)
			{
				gPlayerData[playerid][pItem22param6] = value;
				SavePlayerData(playerid, "Item22param6");
				return 1;
			}
			if(slot == 23)
			{
				gPlayerData[playerid][pItem23param6] = value;
				SavePlayerData(playerid, "Item23param6");
				return 1;
			}
			if(slot == 24)
			{
				gPlayerData[playerid][pItem24param6] = value;
				SavePlayerData(playerid, "Item24param6");
				return 1;
			}
			if(slot == 25)
			{
				gPlayerData[playerid][pItem25param6] = value;
				SavePlayerData(playerid, "Item25param6");
				return 1;
			}
		}
	}
	return 0;
}

stock SetHSlotParam6(hid, slot, value)
{
	if(slot == 1)
	{
		Houses[hid][HItem1param6] = value;
		SaveHouseData(hid, "HItem1param6");
		return 1;
	}
	if(slot == 2)
	{
		Houses[hid][HItem2param6] = value;
		SaveHouseData(hid, "HItem2param6");
		return 1;
	}
	if(slot == 3)
	{
		Houses[hid][HItem3param6] = value;
		SaveHouseData(hid, "HItem3param6");
		return 1;
	}
	if(slot == 4)
	{
		Houses[hid][HItem4param6] = value;
		SaveHouseData(hid, "HItem4param6");
		return 1;
	}
	if(slot == 5)
	{
		Houses[hid][HItem5param6] = value;
		SaveHouseData(hid, "HItem5param6");
		return 1;
	}
	return 0;
}

stock SetVSlotParam6(vehid, slot, value)
{
	switch(slot)
	{
		case 1:
		{
			gVehData[vehid-1][VItem1param6] = value;
			SaveVehData(vehid-1, "Item1param6");
			return 1;
		}
		case 2:
		{
			gVehData[vehid-1][VItem2param6] = value;
			SaveVehData(vehid-1, "Item2param6");
			return 1;
		}
		case 3:
		{
			gVehData[vehid-1][VItem3param6] = value;
			SaveVehData(vehid-1, "Item3param6");
			return 1;
		}
		case 4:
		{
			gVehData[vehid-1][VItem4param6] = value;
			SaveVehData(vehid-1, "Item4param6");
			return 1;
		}
		case 5:
		{
			gVehData[vehid-1][VItem5param6] = value;
			SaveVehData(vehid-1, "Item5param6");
			return 1;
		}
		case 6:
		{
			gVehData[vehid-1][VItem6param6] = value;
			SaveVehData(vehid-1, "Item6param6");
			return 1;
		}
		case 7:
		{
			gVehData[vehid-1][VItem7param6] = value;
			SaveVehData(vehid-1, "Item7param6");
			return 1;
		}
		case 8:
		{
			gVehData[vehid-1][VItem8param6] = value;
			SaveVehData(vehid-1, "Item8param6");
			return 1;
		}
		case 9:
		{
			gVehData[vehid-1][VItem9param6] = value;
			SaveVehData(vehid-1, "Item9param6");
			return 1;
		}
		case 10:
		{
			gVehData[vehid-1][VItem10param6] = value;
			SaveVehData(vehid-1, "Item10param6");
			return 1;
		}
		case 11:
		{
			gVehData[vehid-1][VItem11param6] = value;
			SaveVehData(vehid-1, "Item11param6");
			return 1;
		}
		case 12:
		{
			gVehData[vehid-1][VItem12param6] = value;
			SaveVehData(vehid-1, "Item12param6");
			return 1;
		}
		case 13:
		{
			gVehData[vehid-1][VItem13param6] = value;
			SaveVehData(vehid-1, "Item13param6");
			return 1;
		}
		case 14:
		{
			gVehData[vehid-1][VItem14param6] = value;
			SaveVehData(vehid-1, "Item14param6");
			return 1;
		}
		case 15:
		{
			gVehData[vehid-1][VItem15param6] = value;
			SaveVehData(vehid-1, "Item15param6");
			return 1;
		}
	}
	return 0;
}

stock SlotParam1(playerid, slot)
{
	if(slot == 1)
	{
		return gPlayerData[playerid][pItem1param];
	}
	if(slot == 2)
	{
		return gPlayerData[playerid][pItem2param];
	}
	if(slot == 3)
	{
		return gPlayerData[playerid][pItem3param];
	}
	if(slot == 4)
	{
		return gPlayerData[playerid][pItem4param];
	}
	if(slot == 5)
	{
		return gPlayerData[playerid][pItem5param];
	}
	if(slot == 6)
	{
		return gPlayerData[playerid][pItem6param];
	}
	if(slot == 7)
	{
		return gPlayerData[playerid][pItem7param];
	}
	if(slot == 8)
	{
		return gPlayerData[playerid][pItem8param];
	}
	if(slot == 9)
	{
		return gPlayerData[playerid][pItem9param];
	}
	if(slot == 10)
	{
		return gPlayerData[playerid][pItem10param];
	}
	if(slot == 11)
	{
		return gPlayerData[playerid][pItem11param];
	}
	if(slot == 12)
	{
		return gPlayerData[playerid][pItem12param];
	}
	if(slot == 13)
	{
		return gPlayerData[playerid][pItem13param];
	}
	if(slot == 14)
	{
		return gPlayerData[playerid][pItem14param];
	}
	if(slot == 15)
	{
		return gPlayerData[playerid][pItem15param];
	}
	if(gPlayerData[playerid][pVipItem] > 0)
	{
		if(slot == 16)
		{
			return gPlayerData[playerid][pItem16param];
		}
		if(slot == 17)
		{
			return gPlayerData[playerid][pItem17param];
		}
		if(slot == 18)
		{
			return gPlayerData[playerid][pItem18param];
		}
		if(slot == 19)
		{
			return gPlayerData[playerid][pItem19param];
		}
		if(slot == 20)
		{
			return gPlayerData[playerid][pItem20param];
		}
		if(slot == 21)
		{
			return gPlayerData[playerid][pItem21param];
		}
		if(slot == 22)
		{
			return gPlayerData[playerid][pItem22param];
		}
		if(slot == 23)
		{
			return gPlayerData[playerid][pItem23param];
		}
		if(slot == 24)
		{
			return gPlayerData[playerid][pItem24param];
		}
		if(slot == 25)
		{
			return gPlayerData[playerid][pItem25param];
		}
	}
	return 0;
}

stock SlotParam2(playerid, slot)
{
	if(slot == 1)
	{
		return gPlayerData[playerid][pItem1param2];
	}
	if(slot == 2)
	{
		return gPlayerData[playerid][pItem2param2];
	}
	if(slot == 3)
	{
		return gPlayerData[playerid][pItem3param2];
	}
	if(slot == 4)
	{
		return gPlayerData[playerid][pItem4param2];
	}
	if(slot == 5)
	{
		return gPlayerData[playerid][pItem5param2];
	}
	if(PHaveExpandItem(playerid) || gPlayerData[playerid][pVipItem] > 0)
	{
		if(slot == 6)
		{
			return gPlayerData[playerid][pItem6param2];
		}
		if(slot == 7)
		{
			return gPlayerData[playerid][pItem7param2];
		}
		if(slot == 8)
		{
			return gPlayerData[playerid][pItem8param2];
		}
		if(slot == 9)
		{
			return gPlayerData[playerid][pItem9param2];
		}
		if(slot == 10)
		{
			return gPlayerData[playerid][pItem10param2];
		}
		if(slot == 11)
		{
			return gPlayerData[playerid][pItem11param2];
		}
		if(slot == 12)
		{
			return gPlayerData[playerid][pItem12param2];
		}
		if(slot == 13)
		{
			return gPlayerData[playerid][pItem13param2];
		}
		if(slot == 14)
		{
			return gPlayerData[playerid][pItem14param2];
		}
		if(slot == 15)
		{
			return gPlayerData[playerid][pItem15param2];
		}
		if(gPlayerData[playerid][pVipItem] > 0)
		{
			if(slot == 16)
			{
				return gPlayerData[playerid][pItem16param2];
			}
			if(slot == 17)
			{
				return gPlayerData[playerid][pItem17param2];
			}
			if(slot == 18)
			{
				return gPlayerData[playerid][pItem18param2];
			}
			if(slot == 19)
			{
				return gPlayerData[playerid][pItem19param2];
			}
			if(slot == 20)
			{
				return gPlayerData[playerid][pItem20param2];
			}
			if(slot == 21)
			{
				return gPlayerData[playerid][pItem21param2];
			}
			if(slot == 22)
			{
				return gPlayerData[playerid][pItem22param2];
			}
			if(slot == 23)
			{
				return gPlayerData[playerid][pItem23param2];
			}
			if(slot == 24)
			{
				return gPlayerData[playerid][pItem24param2];
			}
			if(slot == 25)
			{
				return gPlayerData[playerid][pItem25param2];
			}
		}
	}
	return 0;
}

stock SlotParam3(playerid, slot)
{
	if(slot == 1)
	{
		return gPlayerData[playerid][pItem1param3];
	}
	if(slot == 2)
	{
		return gPlayerData[playerid][pItem2param3];
	}
	if(slot == 3)
	{
		return gPlayerData[playerid][pItem3param3];
	}
	if(slot == 4)
	{
		return gPlayerData[playerid][pItem4param3];
	}
	if(slot == 5)
	{
		return gPlayerData[playerid][pItem5param3];
	}
	if(PHaveExpandItem(playerid) || gPlayerData[playerid][pVipItem] > 0)
	{
		if(slot == 6)
		{
			return gPlayerData[playerid][pItem6param3];
		}
		if(slot == 7)
		{
			return gPlayerData[playerid][pItem7param3];
		}
		if(slot == 8)
		{
			return gPlayerData[playerid][pItem8param3];
		}
		if(slot == 9)
		{
			return gPlayerData[playerid][pItem9param3];
		}
		if(slot == 10)
		{
			return gPlayerData[playerid][pItem10param3];
		}
		if(slot == 11)
		{
			return gPlayerData[playerid][pItem11param3];
		}
		if(slot == 12)
		{
			return gPlayerData[playerid][pItem12param3];
		}
		if(slot == 13)
		{
			return gPlayerData[playerid][pItem13param3];
		}
		if(slot == 14)
		{
			return gPlayerData[playerid][pItem14param3];
		}
		if(slot == 15)
		{
			return gPlayerData[playerid][pItem15param3];
		}
		if(gPlayerData[playerid][pVipItem] > 0)
		{
			if(slot == 16)
			{
				return gPlayerData[playerid][pItem16param3];
			}
			if(slot == 17)
			{
				return gPlayerData[playerid][pItem17param3];
			}
			if(slot == 18)
			{
				return gPlayerData[playerid][pItem18param3];
			}
			if(slot == 19)
			{
				return gPlayerData[playerid][pItem19param3];
			}
			if(slot == 20)
			{
				return gPlayerData[playerid][pItem20param3];
			}
			if(slot == 21)
			{
				return gPlayerData[playerid][pItem21param3];
			}
			if(slot == 22)
			{
				return gPlayerData[playerid][pItem22param3];
			}
			if(slot == 23)
			{
				return gPlayerData[playerid][pItem23param3];
			}
			if(slot == 24)
			{
				return gPlayerData[playerid][pItem24param3];
			}
			if(slot == 25)
			{
				return gPlayerData[playerid][pItem25param3];
			}
		}
	}
	return 0;
}

stock SlotParam4(playerid, slot)
{
	if(slot == 1)
	{
		return gPlayerData[playerid][pItem1param4];
	}
	if(slot == 2)
	{
		return gPlayerData[playerid][pItem2param4];
	}
	if(slot == 3)
	{
		return gPlayerData[playerid][pItem3param4];
	}
	if(slot == 4)
	{
		return gPlayerData[playerid][pItem4param4];
	}
	if(slot == 5)
	{
		return gPlayerData[playerid][pItem5param4];
	}
	if(PHaveExpandItem(playerid) || gPlayerData[playerid][pVipItem] > 0)
	{
		if(slot == 6)
		{
			return gPlayerData[playerid][pItem6param4];
		}
		if(slot == 7)
		{
			return gPlayerData[playerid][pItem7param4];
		}
		if(slot == 8)
		{
			return gPlayerData[playerid][pItem8param4];
		}
		if(slot == 9)
		{
			return gPlayerData[playerid][pItem9param4];
		}
		if(slot == 10)
		{
			return gPlayerData[playerid][pItem10param4];
		}
		if(slot == 11)
		{
			return gPlayerData[playerid][pItem11param4];
		}
		if(slot == 12)
		{
			return gPlayerData[playerid][pItem12param4];
		}
		if(slot == 13)
		{
			return gPlayerData[playerid][pItem13param4];
		}
		if(slot == 14)
		{
			return gPlayerData[playerid][pItem14param4];
		}
		if(slot == 15)
		{
			return gPlayerData[playerid][pItem15param4];
		}
		if(gPlayerData[playerid][pVipItem] > 0)
		{
			if(slot == 16)
			{
				return gPlayerData[playerid][pItem16param4];
			}
			if(slot == 17)
			{
				return gPlayerData[playerid][pItem17param4];
			}
			if(slot == 18)
			{
				return gPlayerData[playerid][pItem18param4];
			}
			if(slot == 19)
			{
				return gPlayerData[playerid][pItem19param4];
			}
			if(slot == 20)
			{
				return gPlayerData[playerid][pItem20param4];
			}
			if(slot == 21)
			{
				return gPlayerData[playerid][pItem21param4];
			}
			if(slot == 22)
			{
				return gPlayerData[playerid][pItem22param4];
			}
			if(slot == 23)
			{
				return gPlayerData[playerid][pItem23param4];
			}
			if(slot == 24)
			{
				return gPlayerData[playerid][pItem24param4];
			}
			if(slot == 25)
			{
				return gPlayerData[playerid][pItem25param4];
			}
		}
	}
	return 0;
}

stock SlotParam5(playerid, slot)
{
	if(slot == 1)
	{
		gDSelectedItemP5[playerid] = gPlayerData[playerid][pItem1param5];
	}
	else if (slot == 2)
	{
		gDSelectedItemP5[playerid] = gPlayerData[playerid][pItem2param5];
	}
	else if (slot == 3)
	{
		gDSelectedItemP5[playerid] = gPlayerData[playerid][pItem3param5];
	}
	else if (slot == 4)
	{
		gDSelectedItemP5[playerid] = gPlayerData[playerid][pItem4param5];
	}
	else if (slot == 5)
	{
		gDSelectedItemP5[playerid] = gPlayerData[playerid][pItem5param5];
	}
	else if (PHaveExpandItem(playerid) || gPlayerData[playerid][pVipItem] > 0)
	{
		if (slot == 6)
		{
			gDSelectedItemP5[playerid] = gPlayerData[playerid][pItem6param5];
		}
		else if (slot == 7)
		{
			gDSelectedItemP5[playerid] = gPlayerData[playerid][pItem7param5];
		}
		else if (slot == 8)
		{
			gDSelectedItemP5[playerid] = gPlayerData[playerid][pItem8param5];
		}
		else if (slot == 9)
		{
			gDSelectedItemP5[playerid] = gPlayerData[playerid][pItem9param5];
		}
		else if (slot == 10)
		{
			gDSelectedItemP5[playerid] = gPlayerData[playerid][pItem10param5];
		}
		else if (slot == 11)
		{
			gDSelectedItemP5[playerid] = gPlayerData[playerid][pItem11param5];
		}
		else if (slot == 12)
		{
			gDSelectedItemP5[playerid] = gPlayerData[playerid][pItem12param5];
		}
		else if (slot == 13)
		{
			gDSelectedItemP5[playerid] = gPlayerData[playerid][pItem13param5];
		}
		else if (slot == 14)
		{
			gDSelectedItemP5[playerid] = gPlayerData[playerid][pItem14param5];
		}
		else if (slot == 15)
		{
			gDSelectedItemP5[playerid] = gPlayerData[playerid][pItem15param5];
		}
		else if (gPlayerData[playerid][pVipItem] > 0)
		{
			if (slot == 16)
			{
				gDSelectedItemP5[playerid] = gPlayerData[playerid][pItem16param5];
			}
			else if (slot == 17)
			{
				gDSelectedItemP5[playerid] = gPlayerData[playerid][pItem17param5];
			}
			else if (slot == 18)
			{
				gDSelectedItemP5[playerid] = gPlayerData[playerid][pItem18param5];
			}
			else if (slot == 19)
			{
				gDSelectedItemP5[playerid] = gPlayerData[playerid][pItem19param5];
			}
			else if (slot == 20)
			{
				gDSelectedItemP5[playerid] = gPlayerData[playerid][pItem20param5];
			}
			else if (slot == 21)
			{
				gDSelectedItemP5[playerid] = gPlayerData[playerid][pItem21param5];
			}
			else if (slot == 22)
			{
				gDSelectedItemP5[playerid] = gPlayerData[playerid][pItem22param5];
			}
			else if (slot == 23)
			{
				gDSelectedItemP5[playerid] = gPlayerData[playerid][pItem23param5];
			}
			else if (slot == 24)
			{
				gDSelectedItemP5[playerid] = gPlayerData[playerid][pItem24param5];
			}
			else if (slot == 25)
			{
				gDSelectedItemP5[playerid] = gPlayerData[playerid][pItem25param5];
			}
		}
	}
	return 0;
}

stock SlotParam6(playerid, slot)
{
	if(slot == 1)
	{
		return gPlayerData[playerid][pItem1param6];
	}
	if(slot == 2)
	{
		return gPlayerData[playerid][pItem2param6];
	}
	if(slot == 3)
	{
		return gPlayerData[playerid][pItem3param6];
	}
	if(slot == 4)
	{
		return gPlayerData[playerid][pItem4param6];
	}
	if(slot == 5)
	{
		return gPlayerData[playerid][pItem5param6];
	}
	if(PHaveExpandItem(playerid) || gPlayerData[playerid][pVipItem] > 0)
	{
		if(slot == 6)
		{
			return gPlayerData[playerid][pItem6param6];
		}
		if(slot == 7)
		{
			return gPlayerData[playerid][pItem7param6];
		}
		if(slot == 8)
		{
			return gPlayerData[playerid][pItem8param6];
		}
		if(slot == 9)
		{
			return gPlayerData[playerid][pItem9param6];
		}
		if(slot == 10)
		{
			return gPlayerData[playerid][pItem10param6];
		}
		if(slot == 11)
		{
			return gPlayerData[playerid][pItem11param6];
		}
		if(slot == 12)
		{
			return gPlayerData[playerid][pItem12param6];
		}
		if(slot == 13)
		{
			return gPlayerData[playerid][pItem13param6];
		}
		if(slot == 14)
		{
			return gPlayerData[playerid][pItem14param6];
		}
		if(slot == 15)
		{
			return gPlayerData[playerid][pItem15param6];
		}
		if(gPlayerData[playerid][pVipItem] > 0)
		{
			if(slot == 16)
			{
				return gPlayerData[playerid][pItem16param6];
			}
			if(slot == 17)
			{
				return gPlayerData[playerid][pItem17param6];
			}
			if(slot == 18)
			{
				return gPlayerData[playerid][pItem18param6];
			}
			if(slot == 19)
			{
				return gPlayerData[playerid][pItem19param6];
			}
			if(slot == 20)
			{
				return gPlayerData[playerid][pItem20param6];
			}
			if(slot == 21)
			{
				return gPlayerData[playerid][pItem21param6];
			}
			if(slot == 22)
			{
				return gPlayerData[playerid][pItem22param6];
			}
			if(slot == 23)
			{
				return gPlayerData[playerid][pItem23param6];
			}
			if(slot == 24)
			{
				return gPlayerData[playerid][pItem24param6];
			}
			if(slot == 25)
			{
				return gPlayerData[playerid][pItem25param6];
			}
		}
	}
	return 0;
}

stock HSlotParam6(hid, slot)
{
	switch(slot)
	{
		case 1: return Houses[hid][HItem1param6];
		case 2: return Houses[hid][HItem2param6];
		case 3: return Houses[hid][HItem3param6];
		case 4: return Houses[hid][HItem4param6];
		case 5: return Houses[hid][HItem5param6];
	}
	return 0;
}

stock VSlotParam6(vehid, slot)
{
	switch(slot)
	{
		case 1: return gVehData[vehid-1][VItem1param6];
		case 2: return gVehData[vehid-1][VItem2param6];
		case 3: return gVehData[vehid-1][VItem3param6];
		case 4: return gVehData[vehid-1][VItem4param6];
		case 5: return gVehData[vehid-1][VItem5param6];
		case 6: return gVehData[vehid-1][VItem6param6];
		case 7: return gVehData[vehid-1][VItem7param6];
		case 8: return gVehData[vehid-1][VItem8param6];
		case 9: return gVehData[vehid-1][VItem9param6];
		case 10: return gVehData[vehid-1][VItem10param6];
		case 11: return gVehData[vehid-1][VItem11param6];
		case 12: return gVehData[vehid-1][VItem12param6];
		case 13: return gVehData[vehid-1][VItem13param6];
		case 14: return gVehData[vehid-1][VItem14param6];
		case 15: return gVehData[vehid-1][VItem15param6];
	}
	return 0;
}

/*
* Compare player slot item type with given typedef
*/
stock PSlotItemTypeCompare(playerid, slotid, type)
{
	if(slotid == 1)
	{
		if(gPlayerData[playerid][pItem1type] == type)
			return 1;
		else
			return 0;
	}
	if(slotid == 2)
	{
		if(gPlayerData[playerid][pItem2type] == type)
			return 1;
		else
			return 0;
	}
	if(slotid == 3)
	{
		if(gPlayerData[playerid][pItem3type] == type)
			return 1;
		else
			return 0;
	}
	if(slotid == 4)
	{
		if(gPlayerData[playerid][pItem4type] == type)
			return 1;
		else
			return 0;
	}
	if(slotid == 5)
	{
		if(gPlayerData[playerid][pItem5type] == type)
			return 1;
		else
			return 0;
	}
	if(PHaveExpandItem(playerid) || gPlayerData[playerid][pVipItem] > 0)
	{
		if(slotid == 6)
		{
			if(gPlayerData[playerid][pItem6type] == type)
				return 1;
			else
				return 0;
		}
		if(slotid == 7)
		{
			if(gPlayerData[playerid][pItem7type] == type)
				return 1;
			else
				return 0;
		}
		if(slotid == 8)
		{
			if(gPlayerData[playerid][pItem8type] == type)
				return 1;
			else
				return 0;
		}
		if(slotid == 9)
		{
			if(gPlayerData[playerid][pItem9type] == type)
				return 1;
			else
				return 0;
		}
		if(slotid == 10)
		{
			if(gPlayerData[playerid][pItem10type] == type)
				return 1;
			else
				return 0;
		}
		if(slotid == 11)
		{
			if(gPlayerData[playerid][pItem11type] == type)
				return 1;
			else
				return 0;
		}
		if(slotid == 12)
		{
			if(gPlayerData[playerid][pItem12type] == type)
				return 1;
			else
				return 0;
		}
		if(slotid == 13)
		{
			if(gPlayerData[playerid][pItem13type] == type)
				return 1;
			else
				return 0;
		}
		if(slotid == 14)
		{
			if(gPlayerData[playerid][pItem14type] == type)
				return 1;
			else
				return 0;
		}
		if(slotid == 15)
		{
			if(gPlayerData[playerid][pItem15type] == type)
				return 1;
			else
				return 0;
		}
		if(gPlayerData[playerid][pVipItem] > 0)
		{
			if(slotid == 16)
			{
				if(gPlayerData[playerid][pItem16type] == type)
					return 1;
				else
					return 0;
			}
			if(slotid == 17)
			{
				if(gPlayerData[playerid][pItem17type] == type)
					return 1;
				else
					return 0;
			}
			if(slotid == 18)
			{
				if(gPlayerData[playerid][pItem18type] == type)
					return 1;
				else
					return 0;
			}
			if(slotid == 19)
			{
				if(gPlayerData[playerid][pItem19type] == type)
					return 1;
				else
					return 0;
			}
			if(slotid == 20)
			{
				if(gPlayerData[playerid][pItem20type] == type)
					return 1;
				else
					return 0;
			}
			if(slotid == 21)
			{
				if(gPlayerData[playerid][pItem21type] == type)
					return 1;
				else
					return 0;
			}
			if(slotid == 22)
			{
				if(gPlayerData[playerid][pItem22type] == type)
					return 1;
				else
					return 0;
			}
			if(slotid == 23)
			{
				if(gPlayerData[playerid][pItem23type] == type)
					return 1;
				else
					return 0;
			}
			if(slotid == 24)
			{
				if(gPlayerData[playerid][pItem24type] == type)
					return 1;
				else
					return 0;
			}
			if(slotid == 25)
			{
				if(gPlayerData[playerid][pItem25type] == type)
					return 1;
				else
					return 0;
			}
		}
	}
	return 0;
}

/*
* Compare house slot item type with given typedef
*/
stock HSlotItemTypeCompare(hid, slotid, type)
{
	switch(slotid)
	{
		case 1:
		{
			if(Houses[hid][HItem1type] == type)
				return 1;
			else
				return 0;
		}
		case 2:
		{
			if(Houses[hid][HItem2type] == type)
				return 1;
			else
				return 0;
		}
		case 3:
		{
			if(Houses[hid][HItem3type] == type)
				return 1;
			else
				return 0;
		}
		case 4:
		{
			if(Houses[hid][HItem4type] == type)
				return 1;
			else
				return 0;
		}
		case 5:
		{
			if(Houses[hid][HItem5type] == type)
				return 1;
			else
				return 0;
		}
	}
	return 0;
}			

/*
* Compare vehicle slot item type with given typedef
*/
stock VSlotItemTypeCompare(vehid, slotid, type)
{
	switch(slotid)
	{
		case 1:
		{
			if(gVehData[vehid-1][VItem1type] == type)
				return 1;
			else
				return 0;
		}
		case 2:
		{
			if(gVehData[vehid-1][VItem2type] == type)
				return 1;
			else
				return 0;
		}
		case 3:
		{
			if(gVehData[vehid-1][VItem3type] == type)
				return 1;
			else
				return 0;
		}
		case 4:
		{
			if(gVehData[vehid-1][VItem4type] == type)
				return 1;
			else
				return 0;
		}
		case 5:
		{
			if(gVehData[vehid-1][VItem5type] == type)
				return 1;
			else
				return 0;
		}
		case 6:
		{
			if(gVehData[vehid-1][VItem6type] == type)
				return 1;
			else
				return 0;
		}
		case 7:
		{
			if(gVehData[vehid-1][VItem7type] == type)
				return 1;
			else
				return 0;
		}
		case 8:
		{
			if(gVehData[vehid-1][VItem8type] == type)
				return 1;
			else
				return 0;
		}
		case 9:
		{
			if(gVehData[vehid-1][VItem9type] == type)
				return 1;
			else
				return 0;
		}
		case 10:
		{
			if(gVehData[vehid-1][VItem10type] == type)
				return 1;
			else
				return 0;
		}
		case 11:
		{
			if(gVehData[vehid-1][VItem11type] == type)
				return 1;
			else
				return 0;
		}
		case 12:
		{
			if(gVehData[vehid-1][VItem12type] == type)
				return 1;
			else
				return 0;
		}
		case 13:
		{
			if(gVehData[vehid-1][VItem13type] == type)
				return 1;
			else
				return 0;
		}
		case 14:
		{
			if(gVehData[vehid-1][VItem14type] == type)
				return 1;
			else
				return 0;
		}
		case 15:
		{
			if(gVehData[vehid-1][VItem15type] == type)
				return 1;
			else
				return 0;
		}
	}
	return 0;
}	

/*
* Returns slot item type
*/
stock PSlotItemType(playerid, slot)
{
	if(slot == 1) { return gPlayerData[playerid][pItem1type]; }
	if(slot == 2) { return gPlayerData[playerid][pItem2type]; }
	if(slot == 3) { return gPlayerData[playerid][pItem3type]; }
	if(slot == 4) { return gPlayerData[playerid][pItem4type]; }
	if(slot == 5) { return gPlayerData[playerid][pItem5type]; }
	if(slot == 6) { return gPlayerData[playerid][pItem6type]; }
	if(slot == 7) { return gPlayerData[playerid][pItem7type]; }
	if(slot == 8) { return gPlayerData[playerid][pItem8type]; }
	if(slot == 9) { return gPlayerData[playerid][pItem9type]; }
	if(slot == 10) { return gPlayerData[playerid][pItem10type]; }
	if(slot == 11) { return gPlayerData[playerid][pItem11type]; }
	if(slot == 12) { return gPlayerData[playerid][pItem12type]; }
	if(slot == 13) { return gPlayerData[playerid][pItem13type]; }
	if(slot == 14) { return gPlayerData[playerid][pItem14type]; }
	if(slot == 15) { return gPlayerData[playerid][pItem15type]; }
	if(slot == 16) { return gPlayerData[playerid][pItem16type]; }
	if(slot == 17) { return gPlayerData[playerid][pItem17type]; }
	if(slot == 18) { return gPlayerData[playerid][pItem18type]; }
	if(slot == 19) { return gPlayerData[playerid][pItem19type]; }
	if(slot == 20) { return gPlayerData[playerid][pItem20type]; }
	if(slot == 21) { return gPlayerData[playerid][pItem21type]; }
	if(slot == 22) { return gPlayerData[playerid][pItem22type]; }
	if(slot == 23) { return gPlayerData[playerid][pItem23type]; }
	if(slot == 24) { return gPlayerData[playerid][pItem24type]; }
	if(slot == 25) { return gPlayerData[playerid][pItem25type]; }
	return 0;
}

/*
* Returns slot item id (value)
*/
stock ShowSlotItem(playerid, slot)
{
	switch(slot)
	{
		case 1: { return gPlayerData[playerid][pItem1]; }
		case 2: { return gPlayerData[playerid][pItem2]; }
		case 3: { return gPlayerData[playerid][pItem3]; }
		case 4: { return gPlayerData[playerid][pItem4]; }
		case 5: { return gPlayerData[playerid][pItem5]; }
		case 6: { return gPlayerData[playerid][pItem6]; }
		case 7: { return gPlayerData[playerid][pItem7]; }
		case 8: { return gPlayerData[playerid][pItem8]; }
		case 9: { return gPlayerData[playerid][pItem9]; }
		case 10: { return gPlayerData[playerid][pItem10]; }
		case 11: { return gPlayerData[playerid][pItem11]; }
		case 12: { return gPlayerData[playerid][pItem12]; }
		case 13: { return gPlayerData[playerid][pItem13]; }
		case 14: { return gPlayerData[playerid][pItem14]; }
		case 15: { return gPlayerData[playerid][pItem15]; }
		case 16: { return gPlayerData[playerid][pItem16]; }
		case 17: { return gPlayerData[playerid][pItem17]; }
		case 18: { return gPlayerData[playerid][pItem18]; }
		case 19: { return gPlayerData[playerid][pItem19]; }
		case 20: { return gPlayerData[playerid][pItem20]; }
		case 21: { return gPlayerData[playerid][pItem21]; }
		case 22: { return gPlayerData[playerid][pItem22]; }
		case 23: { return gPlayerData[playerid][pItem23]; }
		case 24: { return gPlayerData[playerid][pItem24]; }
		case 25: { return gPlayerData[playerid][pItem25]; }
	}
	return -1;
}

/*
* Compare slot item id (value) with given id (value)
*/
stock SlotItem(playerid, slot, item)
{
	if(slot == 1)
	{
		if(gPlayerData[playerid][pItem1] == item)
		{
			return 1;
		}
		else
		{
			return 0;
		}
	}
	if(slot == 2)
	{
		if(gPlayerData[playerid][pItem2] == item)
		{
			return 1;
		}
		else
		{
			return 0;
		}
	}
	if(slot == 3)
	{
		if(gPlayerData[playerid][pItem3] == item)
		{
			return 1;
		}
		else
		{
			return 0;
		}
	}
	if(slot == 4)
	{
		if(gPlayerData[playerid][pItem4] == item)
		{
			return 1;
		}
		else
		{
			return 0;
		}
	}
	if(slot == 5)
	{
		if(gPlayerData[playerid][pItem5] == item)
		{
			return 1;
		}
		else
		{
			return 0;
		}
	}
	if(PHaveExpandItem(playerid) || gPlayerData[playerid][pVipItem] > 0)
	{
		if(slot == 6)
		{
			if(gPlayerData[playerid][pItem6] == item)
			{
				return 1;
			}
			else
			{
				return 0;
			}
		}
		if(slot == 7)
		{
			if(gPlayerData[playerid][pItem7] == item)
			{
				return 1;
			}
			else
			{
				return 0;
			}
		}
		if(slot == 8)
		{
			if(gPlayerData[playerid][pItem8] == item)
			{
				return 1;
			}
			else
			{
				return 0;
			}
		}
		if(slot == 9)
		{
			if(gPlayerData[playerid][pItem9] == item)
			{
				return 1;
			}
			else
			{
				return 0;
			}
		}
		if(slot == 10)
		{
			if(gPlayerData[playerid][pItem10] == item)
			{
				return 1;
			}
			else
			{
				return 0;
			}
		}
		if(slot == 11)
		{
			if(gPlayerData[playerid][pItem11] == item)
			{
				return 1;
			}
			else
			{
				return 0;
			}
		}
		if(slot == 12)
		{
			if(gPlayerData[playerid][pItem12] == item)
			{
				return 1;
			}
			else
			{
				return 0;
			}
		}
		if(slot == 13)
		{
			if(gPlayerData[playerid][pItem13] == item)
			{
				return 1;
			}
			else
			{
				return 0;
			}
		}
		if(slot == 14)
		{
			if(gPlayerData[playerid][pItem14] == item)
			{
				return 1;
			}
			else
			{
				return 0;
			}
		}
		if(slot == 15)
		{
			if(gPlayerData[playerid][pItem15] == item)
			{
				return 1;
			}
			else
			{
				return 0;
			}
		}
		if(gPlayerData[playerid][pVipItem] > 0)
		{
			if(slot == 16)
			{
				if(gPlayerData[playerid][pItem16] == item)
				{
					return 1;
				}
				else
				{
					return 0;
				}
			}
			if(slot == 17)
			{
				if(gPlayerData[playerid][pItem17] == item)
				{
					return 1;
				}
				else
				{
					return 0;
				}
			}
			if(slot == 18)
			{
				if(gPlayerData[playerid][pItem18] == item)
				{
					return 1;
				}
				else
				{
					return 0;
				}
			}
			if(slot == 19)
			{
				if(gPlayerData[playerid][pItem19] == item)
				{
					return 1;
				}
				else
				{
					return 0;
				}
			}
			if(slot == 20)
			{
				if(gPlayerData[playerid][pItem20] == item)
				{
					return 1;
				}
				else
				{
					return 0;
				}
			}
			if(slot == 21)
			{
				if(gPlayerData[playerid][pItem21] == item)
				{
					return 1;
				}
				else
				{
					return 0;
				}
			}
			if(slot == 22)
			{
				if(gPlayerData[playerid][pItem22] == item)
				{
					return 1;
				}
				else
				{
					return 0;
				}
			}
			if(slot == 23)
			{
				if(gPlayerData[playerid][pItem23] == item)
				{
					return 1;
				}
				else
				{
					return 0;
				}
			}
			if(slot == 24)
			{
				if(gPlayerData[playerid][pItem24] == item)
				{
					return 1;
				}
				else
				{
					return 0;
				}
			}
			if(slot == 25)
			{
				if(gPlayerData[playerid][pItem25] == item)
				{
					return 1;
				}
				else
				{
					return 0;
				}
			}
		}
	}
	return 0;
}

stock PItemSlotStatus(playerid, slot)
{
	if(slot == 1)
	{
		if(gPlayerData[playerid][pItem1type] > 0)
		{
			return 1;
		}
		else
		{
			return 0;
		}
	}
	if(slot == 2)
	{
		if(gPlayerData[playerid][pItem2type] > 0)
		{
			return 1;
		}
		else
		{
			return 0;
		}
	}
	if(slot == 3)
	{
		if(gPlayerData[playerid][pItem3type] > 0)
		{
			return 1;
		}
		else
		{
			return 0;
		}
	}
	if(slot == 4)
	{
		if(gPlayerData[playerid][pItem4type] > 0)
		{
			return 1;
		}
		else
		{
			return 0;
		}
	}
	if(slot == 5)
	{
		if(gPlayerData[playerid][pItem5type] > 0)
		{
			return 1;
		}
		else
		{
			return 0;
		}
	}
	if(slot == 6)
	{
		if(gPlayerData[playerid][pItem6type] > 0)
		{
			return 1;
		}
		else
		{
			return 0;
		}
	}
	if(slot == 7)
	{
		if(gPlayerData[playerid][pItem7type] > 0)
		{
			return 1;
		}
		else
		{
			return 0;
		}
	}
	if(slot == 8)
	{
		if(gPlayerData[playerid][pItem8type] > 0)
		{
			return 1;
		}
		else
		{
			return 0;
		}
	}
	if(slot == 9)
	{
		if(gPlayerData[playerid][pItem9type] > 0)
		{
			return 1;
		}
		else
		{
			return 0;
		}
	}
	if(slot == 10)
	{
		if(gPlayerData[playerid][pItem10type] > 0)
		{
			return 1;
		}
		else
		{
			return 0;
		}
	}
	if(slot == 11)
	{
		if(gPlayerData[playerid][pItem11type] > 0)
		{
			return 1;
		}
		else
		{
			return 0;
		}
	}
	if(slot == 12)
	{
		if(gPlayerData[playerid][pItem12type] > 0)
		{
			return 1;
		}
		else
		{
			return 0;
		}
	}
	if(slot == 13)
	{
		if(gPlayerData[playerid][pItem13type] > 0)
		{
			return 1;
		}
		else
		{
			return 0;
		}
	}
	if(slot == 14)
	{
		if(gPlayerData[playerid][pItem14type] > 0)
		{
			return 1;
		}
		else
		{
			return 0;
		}
	}
	if(slot == 15)
	{
		if(gPlayerData[playerid][pItem15type] > 0)
		{
			return 1;
		}
		else
		{
			return 0;
		}
	}
	if(slot == 16)
	{
		if(gPlayerData[playerid][pItem16type] > 0)
		{
			return 1;
		}
		else
		{
			return 0;
		}
	}
	if(slot == 17)
	{
		if(gPlayerData[playerid][pItem17type] > 0)
		{
			return 1;
		}
		else
		{
			return 0;
		}
	}
	if(slot == 18)
	{
		if(gPlayerData[playerid][pItem18type] > 0)
		{
			return 1;
		}
		else
		{
			return 0;
		}
	}
	if(slot == 19)
	{
		if(gPlayerData[playerid][pItem19type] > 0)
		{
			return 1;
		}
		else
		{
			return 0;
		}
	}
	if(slot == 20)
	{
		if(gPlayerData[playerid][pItem20type] > 0)
		{
			return 1;
		}
		else
		{
			return 0;
		}
	}
	if(slot == 21)
	{
		if(gPlayerData[playerid][pItem21type] > 0)
		{
			return 1;
		}
		else
		{
			return 0;
		}
	}
	if(slot == 22)
	{
		if(gPlayerData[playerid][pItem22type] > 0)
		{
			return 1;
		}
		else
		{
			return 0;
		}
	}
	if(slot == 23)
	{
		if(gPlayerData[playerid][pItem23type] > 0)
		{
			return 1;
		}
		else
		{
			return 0;
		}
	}
	if(slot == 24)
	{
		if(gPlayerData[playerid][pItem24type] > 0)
		{
			return 1;
		}
		else
		{
			return 0;
		}
	}
	if(slot == 25)
	{
		if(gPlayerData[playerid][pItem25type] > 0)
		{
			return 1;
		}
		else
		{
			return 0;
		}
	}
	return 0;
}

stock HItemSlotStatus(houseid, slot)
{
	if(slot == 1)
	{
		if(Houses[houseid][HItem1type] > 0)
		{
			return 1;
		}
		else
		{
			return 0;
		}
	}
	if(slot == 2)
	{
		if(Houses[houseid][HItem2type] > 0)
		{
			return 1;
		}
		else
		{
			return 0;
		}
	}
	if(slot == 3)
	{
		if(Houses[houseid][HItem3type] > 0)
		{
			return 1;
		}
		else
		{
			return 0;
		}
	}
	if(slot == 4)
	{
		if(Houses[houseid][HItem4type] > 0)
		{
			return 1;
		}
		else
		{
			return 0;
		}
	}
	if(slot == 5)
	{
		if(Houses[houseid][HItem5type] > 0)
		{
			return 1;
		}
		else
		{
			return 0;
		}
	}
	return 1;
}

stock VItemSlotStatus(vehid, slot)
{
	if(slot == 1)
	{
		if(gVehData[vehid-1][VItem1type] > 0)
		{
			return 1;
		}
		else
		{
			return 0;
		}
	}
	if(slot == 2)
	{
		if(gVehData[vehid-1][VItem2type] > 0)
		{
			return 1;
		}
		else
		{
			return 0;
		}
	}
	if(slot == 3)
	{
		if(gVehData[vehid-1][VItem3type] > 0)
		{
			return 1;
		}
		else
		{
			return 0;
		}
	}
	if(slot == 4)
	{
		if(gVehData[vehid-1][VItem4type] > 0)
		{
			return 1;
		}
		else
		{
			return 0;
		}
	}
	if(slot == 5)
	{
		if(gVehData[vehid-1][VItem5type] > 0)
		{
			return 1;
		}
		else
		{
			return 0;
		}
	}
	if(slot == 6)
	{
		if(gVehData[vehid-1][VItem6type] > 0)
		{
			return 1;
		}
		else
		{
			return 0;
		}
	}
	if(slot == 7)
	{
		if(gVehData[vehid-1][VItem7type] > 0)
		{
			return 1;
		}
		else
		{
			return 0;
		}
	}
	if(slot == 8)
	{
		if(gVehData[vehid-1][VItem8type] > 0)
		{
			return 1;
		}
		else
		{
			return 0;
		}
	}
	if(slot == 9)
	{
		if(gVehData[vehid-1][VItem9type] > 0)
		{
			return 1;
		}
		else
		{
			return 0;
		}
	}
	if(slot == 10)
	{
		if(gVehData[vehid-1][VItem10type] > 0)
		{
			return 1;
		}
		else
		{
			return 0;
		}
	}
	if(slot == 11)
	{
		if(gVehData[vehid-1][VItem11type] > 0)
		{
			return 1;
		}
		else
		{
			return 0;
		}
	}
	if(slot == 12)
	{
		if(gVehData[vehid-1][VItem12type] > 0)
		{
			return 1;
		}
		else
		{
			return 0;
		}
	}
	if(slot == 13)
	{
		if(gVehData[vehid-1][VItem13type] > 0)
		{
			return 1;
		}
		else
		{
			return 0;
		}
	}
	if(slot == 14)
	{
		if(gVehData[vehid-1][VItem14type] > 0)
		{
			return 1;
		}
		else
		{
			return 0;
		}
	}
	if(slot == 15)
	{
		if(gVehData[vehid-1][VItem15type] > 0)
		{
			return 1;
		}
		else
		{
			return 0;
		}
	}
	return 1;
}

stock PHaveItemType(playerid, itemtype)
{
	if(gPlayerData[playerid][pItem1type] == itemtype)
	{
		return 1;
	}
	if(gPlayerData[playerid][pItem2type] == itemtype)
	{
		return 2;
	}
	if(gPlayerData[playerid][pItem3type] == itemtype)
	{
		return 3;
	}
	if(gPlayerData[playerid][pItem4type] == itemtype)
	{
		return 4;
	}
	if(gPlayerData[playerid][pItem5type] == itemtype)
	{
		return 5;
	}
	if(PHaveExpandItem(playerid) || gPlayerData[playerid][pVipItem] > 0)
	{
		if(gPlayerData[playerid][pItem6type] == itemtype)
		{
			return 6;
		}
		if(gPlayerData[playerid][pItem7type] == itemtype)
		{
			return 7;
		}
		if(gPlayerData[playerid][pItem8type] == itemtype)
		{
			return 8;
		}
		if(gPlayerData[playerid][pItem9type] == itemtype)
		{
			return 9;
		}
		if(gPlayerData[playerid][pItem10type] == itemtype)
		{
			return 10;
		}
		if(gPlayerData[playerid][pItem11type] == itemtype)
		{
			return 11;
		}
		if(gPlayerData[playerid][pItem12type] == itemtype)
		{
			return 12;
		}
		if(gPlayerData[playerid][pItem13type] == itemtype)
		{
			return 13;
		}
		if(gPlayerData[playerid][pItem14type] == itemtype)
		{
			return 14;
		}
		if(gPlayerData[playerid][pItem15type] == itemtype)
		{
			return 15;
		}
		if(gPlayerData[playerid][pVipItem] > 0)
		{
			if(gPlayerData[playerid][pItem16type] == itemtype)
			{
				return 16;
			}
			if(gPlayerData[playerid][pItem17type] == itemtype)
			{
				return 17;
			}
			if(gPlayerData[playerid][pItem18type] == itemtype)
			{
				return 18;
			}
			if(gPlayerData[playerid][pItem19type] == itemtype)
			{
				return 19;
			}
			if(gPlayerData[playerid][pItem20type] == itemtype)
			{
				return 20;
			}
			if(gPlayerData[playerid][pItem21type] == itemtype)
			{
				return 21;
			}
			if(gPlayerData[playerid][pItem22type] == itemtype)
			{
				return 22;
			}
			if(gPlayerData[playerid][pItem23type] == itemtype)
			{
				return 23;
			}
			if(gPlayerData[playerid][pItem24type] == itemtype)
			{
				return 24;
			}
			if(gPlayerData[playerid][pItem25type] == itemtype)
			{
				return 25;
			}
		}
	}
	return 0;
}

stock PHaveItem(playerid, itemtype, itemid, startSlot = 1)
{
	if(startSlot <= 1)
	{
		if(gPlayerData[playerid][pItem1type] == itemtype)
		{
			if(gPlayerData[playerid][pItem1] == itemid)
			{
				return 1;
			}
		}
	}
	if(startSlot <= 2)
	{
		if(gPlayerData[playerid][pItem2type] == itemtype)
		{
			if(gPlayerData[playerid][pItem2] == itemid)
			{
				return 2;
			}
		}
	}
	if(startSlot <= 3)
	{
		if(gPlayerData[playerid][pItem3type] == itemtype)
		{
			if(gPlayerData[playerid][pItem3] == itemid)
			{
				return 3;
			}
		}
	}
	if(startSlot <= 4)
	{
		if(gPlayerData[playerid][pItem4type] == itemtype)
		{
			if(gPlayerData[playerid][pItem4] == itemid)
			{
				return 4;
			}
		}
	}
	if(startSlot <= 5)
	{
		if(gPlayerData[playerid][pItem5type] == itemtype)
		{
			if(gPlayerData[playerid][pItem5] == itemid)
			{
				return 5;
			}
		}
	}
	if(PHaveExpandItem(playerid) || gPlayerData[playerid][pVipItem] > 0)
	{
		if(startSlot <= 6)
		{
			if(gPlayerData[playerid][pItem6type] == itemtype)
			{
				if(gPlayerData[playerid][pItem6] == itemid)
				{
					return 6;
				}
			}
		}
		if(startSlot <= 7)
		{
			if(gPlayerData[playerid][pItem7type] == itemtype)
			{
				if(gPlayerData[playerid][pItem7] == itemid)
				{
					return 7;
				}
			}
		}
		if(startSlot <= 8)
		{
			if(gPlayerData[playerid][pItem8type] == itemtype)
			{
				if(gPlayerData[playerid][pItem8] == itemid)
				{
					return 8;
				}
			}
		}
		if(startSlot <= 9)
		{
			if(gPlayerData[playerid][pItem9type] == itemtype)
			{
				if(gPlayerData[playerid][pItem9] == itemid)
				{
					return 9;
				}
			}
		}
		if(startSlot <= 10)
		{
			if(gPlayerData[playerid][pItem10type] == itemtype)
			{
				if(gPlayerData[playerid][pItem10] == itemid)
				{
					return 10;
				}
			}
		}
		if(startSlot <= 11)
		{
			if(gPlayerData[playerid][pItem11type] == itemtype)
			{
				if(gPlayerData[playerid][pItem11] == itemid)
				{
					return 11;
				}
			}
		}
		if(startSlot <= 12)
		{
			if(gPlayerData[playerid][pItem12type] == itemtype)
			{
				if(gPlayerData[playerid][pItem12] == itemid)
				{
					return 12;
				}
			}
		}
		if(startSlot <= 13)
		{
			if(gPlayerData[playerid][pItem13type] == itemtype)
			{
				if(gPlayerData[playerid][pItem13] == itemid)
				{
					return 13;
				}
			}
		}
		if(startSlot <= 14)
		{
			if(gPlayerData[playerid][pItem14type] == itemtype)
			{
				if(gPlayerData[playerid][pItem14] == itemid)
				{
					return 14;
				}
			}
		}
		if(startSlot <= 15)
		{
			if(gPlayerData[playerid][pItem15type] == itemtype)
			{
				if(gPlayerData[playerid][pItem15] == itemid)
				{
					return 15;
				}
			}
		}
		if(gPlayerData[playerid][pVipItem] > 0)
		{
			if(startSlot <= 16)
			{
				if(gPlayerData[playerid][pItem16type] == itemtype)
				{
					if(gPlayerData[playerid][pItem16] == itemid)
					{
						return 16;
					}
				}
			}
			if(startSlot <= 17)
			{
				if(gPlayerData[playerid][pItem17type] == itemtype)
				{
					if(gPlayerData[playerid][pItem17] == itemid)
					{
						return 17;
					}
				}
			}
			if(startSlot <= 18)
			{
				if(gPlayerData[playerid][pItem18type] == itemtype)
				{
					if(gPlayerData[playerid][pItem18] == itemid)
					{
						return 18;
					}
				}
			}
			if(startSlot <= 19)
			{
				if(gPlayerData[playerid][pItem19type] == itemtype)
				{
					if(gPlayerData[playerid][pItem19] == itemid)
					{
						return 19;
					}
				}
			}
			if(startSlot <= 20)
			{
				if(gPlayerData[playerid][pItem20type] == itemtype)
				{
					if(gPlayerData[playerid][pItem20] == itemid)
					{
						return 20;
					}
				}
			}
			if(startSlot <= 21)
			{
				if(gPlayerData[playerid][pItem21type] == itemtype)
				{
					if(gPlayerData[playerid][pItem21] == itemid)
					{
						return 21;
					}
				}
			}
			if(startSlot <= 22)
			{
				if(gPlayerData[playerid][pItem22type] == itemtype)
				{
					if(gPlayerData[playerid][pItem22] == itemid)
					{
						return 22;
					}
				}
			}
			if(startSlot <= 23)
			{
				if(gPlayerData[playerid][pItem23type] == itemtype)
				{
					if(gPlayerData[playerid][pItem23] == itemid)
					{
						return 23;
					}
				}
			}
			if(startSlot <= 24)
			{
				if(gPlayerData[playerid][pItem24type] == itemtype)
				{
					if(gPlayerData[playerid][pItem24] == itemid)
					{
						return 24;
					}
				}
			}
			if(startSlot <= 25)
			{
				if(gPlayerData[playerid][pItem25type] == itemtype)
				{
					if(gPlayerData[playerid][pItem25] == itemid)
					{
						return 25;
					}
				}
			}
		}
	}
	return 0;
}

stock HHaveItem(hid, itemtype, itemid)
{
	if(Houses[hid][HItem1type] == itemtype)
	{
		if(Houses[hid][HItem1] == itemid)
		{
			return 1;
		}
	}
	if(Houses[hid][HItem2type] == itemtype)
	{
		if(Houses[hid][HItem2] == itemid)
		{
			return 2;
		}
	}
	if(Houses[hid][HItem3type] == itemtype)
	{
		if(Houses[hid][HItem3] == itemid)
		{
			return 3;
		}
	}
	if(Houses[hid][HItem4type] == itemtype)
	{
		if(Houses[hid][HItem4] == itemid)
		{
			return 4;
		}
	}
	if(Houses[hid][HItem5type] == itemtype)
	{
		if(Houses[hid][HItem5] == itemid)
		{
			return 5;
		}
	}
	return 0;
}

stock VHaveItem(vehid, itemtype, itemid, startSlot = 1)
{
	new id = -1;
	for(new i = 0; i < sizeof(CarsLenghts); i++)
	{
		if( gVehData[vehid-1][CarModel] == CarsLenghts[i][lenghtModel] )
			id = i;
	}
	if( id == -1 )
		return 0;
	if(startSlot == 1)
	{
		if(gVehData[vehid-1][VItem1type] == itemtype && CarsLenghts[id][trunkSpace] > 0)
		{
			if(gVehData[vehid-1][VItem1] == itemid)
			{
				return 1;
			}
		}
	}
	if(startSlot <= 2)
	{
		if(gVehData[vehid-1][VItem2type] == itemtype && CarsLenghts[id][trunkSpace] > 1)
		{
			if(gVehData[vehid-1][VItem2] == itemid)
			{
				return 2;
			}
		}
	}
	if(startSlot <= 3)
	{
		if(gVehData[vehid-1][VItem3type] == itemtype && CarsLenghts[id][trunkSpace] > 2)
		{
			if(gVehData[vehid-1][VItem3] == itemid)
			{
				return 3;
			}
		}
	}
	if(startSlot <= 4)
	{
		if(gVehData[vehid-1][VItem4type] == itemtype && CarsLenghts[id][trunkSpace] > 3)
		{
			if(gVehData[vehid-1][VItem4] == itemid)
			{
				return 4;
			}
		}
	}
	if(startSlot <= 5)
	{
		if(gVehData[vehid-1][VItem5type] == itemtype && CarsLenghts[id][trunkSpace] > 4)
		{
			if(gVehData[vehid-1][VItem5] == itemid)
			{
				return 5;
			}
		}
	}
	if(startSlot <= 6)
	{
		if(gVehData[vehid-1][VItem6type] == itemtype && CarsLenghts[id][trunkSpace] > 5)
		{
			if(gVehData[vehid-1][VItem6] == itemid)
			{
				return 6;
			}
		}
	}
	if(startSlot <= 7)
	{
		if(gVehData[vehid-1][VItem7type] == itemtype && CarsLenghts[id][trunkSpace] > 6)
		{
			if(gVehData[vehid-1][VItem7] == itemid)
			{
				return 7;
			}
		}
	}
	if(startSlot <= 8)
	{
		if(gVehData[vehid-1][VItem8type] == itemtype && CarsLenghts[id][trunkSpace] > 7)
		{
			if(gVehData[vehid-1][VItem8] == itemid)
			{
				return 8;
			}
		}
	}
	if(startSlot <= 9)
	{
		if(gVehData[vehid-1][VItem9type] == itemtype && CarsLenghts[id][trunkSpace] > 8)
		{
			if(gVehData[vehid-1][VItem9] == itemid)
			{
				return 9;
			}
		}
	}
	if(startSlot <= 10)
	{
		if(gVehData[vehid-1][VItem10type] == itemtype && CarsLenghts[id][trunkSpace] > 9)
		{
			if(gVehData[vehid-1][VItem10] == itemid)
			{
				return 10;
			}
		}
	}
	if(startSlot <= 11)
	{
		if(gVehData[vehid-1][VItem11type] == itemtype && CarsLenghts[id][trunkSpace] > 10)
		{
			if(gVehData[vehid-1][VItem11] == itemid)
			{
				return 11;
			}
		}
	}
	if(startSlot <= 12)
	{
		if(gVehData[vehid-1][VItem12type] == itemtype && CarsLenghts[id][trunkSpace] > 11)
		{
			if(gVehData[vehid-1][VItem12] == itemid)
			{
				return 12;
			}
		}
	}
	if(startSlot <= 13)
	{
		if(gVehData[vehid-1][VItem13type] == itemtype && CarsLenghts[id][trunkSpace] > 12)
		{
			if(gVehData[vehid-1][VItem13] == itemid)
			{
				return 13;
			}
		}
	}
	if(startSlot <= 14)
	{
		if(gVehData[vehid-1][VItem14type] == itemtype && CarsLenghts[id][trunkSpace] > 13)
		{
			if(gVehData[vehid-1][VItem14] == itemid)
			{
				return 14;
			}
		}
	}
	if(startSlot <= 15)
	{
		if(gVehData[vehid-1][VItem15type] == itemtype && CarsLenghts[id][trunkSpace] > 14)
		{
			if(gVehData[vehid-1][VItem15] == itemid)
			{
				return 15;
			}
		}
	}
	return 0;
}

stock PHaveExpandItem(playerid)
{
	if(gPlayerData[playerid][pItem1type] == 1 && gPlayerData[playerid][pItem1] == 5)
		return 1;
		
	if(gPlayerData[playerid][pItem2type] == 1 && gPlayerData[playerid][pItem2] == 5)
		return 1;
		
	if(gPlayerData[playerid][pItem3type] == 1 && gPlayerData[playerid][pItem3] == 5)
		return 1;
		
	if(gPlayerData[playerid][pItem4type] == 1 && gPlayerData[playerid][pItem4] == 5)
		return 1;
		
	if(gPlayerData[playerid][pItem5type] == 1 && gPlayerData[playerid][pItem5] == 5)
		return 1;
		
	return 0;
}

stock PFirstFreeSlot(playerid)
{
	if(gPlayerData[playerid][pItem1type] == 0)
	{
		return 1;
	}
	if(gPlayerData[playerid][pItem2type] == 0)
	{
		return 2;
	}
	if(gPlayerData[playerid][pItem3type] == 0)
	{
		return 3;
	}
	if(gPlayerData[playerid][pItem4type] == 0)
	{
		return 4;
	}
	if(gPlayerData[playerid][pItem5type] == 0)
	{
		return 5;
	}
	if(gPlayerData[playerid][pItem6type] == 0)
	{
		return 6;
	}
	if(gPlayerData[playerid][pItem7type] == 0)
	{
		return 7;
	}
	if(gPlayerData[playerid][pItem8type] == 0)
	{
		return 8;
	}
	if(gPlayerData[playerid][pItem9type] == 0)
	{
		return 9;
	}
	if(gPlayerData[playerid][pItem10type] == 0)
	{
		return 10;
	}
	if(gPlayerData[playerid][pItem11type] == 0)
	{
		return 11;
	}
	if(gPlayerData[playerid][pItem12type] == 0)
	{
		return 12;
	}
	if(gPlayerData[playerid][pItem13type] == 0)
	{
		return 13;
	}
	if(gPlayerData[playerid][pItem14type] == 0)
	{
		return 14;
	}
	if(gPlayerData[playerid][pItem15type] == 0)
	{
		return 15;
	}
	if(gPlayerData[playerid][pVipItem] > 0)
	{
		if(gPlayerData[playerid][pItem16type] == 0)
		{
			return 16;
		}
		if(gPlayerData[playerid][pItem17type] == 0)
		{
			return 17;
		}
		if(gPlayerData[playerid][pItem18type] == 0)
		{
			return 18;
		}
		if(gPlayerData[playerid][pItem19type] == 0)
		{
			return 19;
		}
		if(gPlayerData[playerid][pItem20type] == 0)
		{
			return 20;
		}
		if(gPlayerData[playerid][pItem21type] == 0)
		{
			return 21;
		}
		if(gPlayerData[playerid][pItem22type] == 0)
		{
			return 22;
		}
		if(gPlayerData[playerid][pItem23type] == 0)
		{
			return 23;
		}
		if(gPlayerData[playerid][pItem24type] == 0)
		{
			return 24;
		}
		if(gPlayerData[playerid][pItem25type] == 0)
		{
			return 25;
		}
	}
	return 0;
}

stock ChangeItem(playerid, slot, value)
{
	if(slot == 1)
	{
		gPlayerData[playerid][pItem1] = value;
		SavePlayerData(playerid, "Item1");
	}
	if(slot == 2)
	{
		gPlayerData[playerid][pItem2] = value;
		SavePlayerData(playerid, "Item2");
	}
	if(slot == 3)
	{
		gPlayerData[playerid][pItem3] = value;
		SavePlayerData(playerid, "Item3");
	}
	if(slot == 4)
	{
		gPlayerData[playerid][pItem4] = value;
		SavePlayerData(playerid, "Item4");
	}
	if(slot == 5)
	{
		gPlayerData[playerid][pItem5] = value;
		SavePlayerData(playerid, "Item5");
	}
	if(slot == 6)
	{
		gPlayerData[playerid][pItem6] = value;
		SavePlayerData(playerid, "Item6");
	}
	if(slot == 7)
	{
		gPlayerData[playerid][pItem7] = value;
		SavePlayerData(playerid, "Item7");
	}
	if(slot == 8)
	{
		gPlayerData[playerid][pItem8] = value;
		SavePlayerData(playerid, "Item8");
	}
	if(slot == 9)
	{
		gPlayerData[playerid][pItem9] = value;
		SavePlayerData(playerid, "Item9");
	}
	if(slot == 10)
	{
		gPlayerData[playerid][pItem10] = value;
		SavePlayerData(playerid, "Item10");
	}
	if(slot == 11)
	{
		gPlayerData[playerid][pItem11] = value;
		SavePlayerData(playerid, "Item11");
	}
	if(slot == 12)
	{
		gPlayerData[playerid][pItem12] = value;
		SavePlayerData(playerid, "Item12");
	}
	if(slot == 13)
	{
		gPlayerData[playerid][pItem13] = value;
		SavePlayerData(playerid, "Item13");
	}
	if(slot == 14)
	{
		gPlayerData[playerid][pItem14] = value;
		SavePlayerData(playerid, "Item14");
	}
	if(slot == 15)
	{
		gPlayerData[playerid][pItem15] = value;
		SavePlayerData(playerid, "Item15");
	}
	if(slot == 16)
	{
		gPlayerData[playerid][pItem16] = value;
		SavePlayerData(playerid, "Item16");
	}
	if(slot == 17)
	{
		gPlayerData[playerid][pItem17] = value;
		SavePlayerData(playerid, "Item17");
	}
	if(slot == 18)
	{
		gPlayerData[playerid][pItem18] = value;
		SavePlayerData(playerid, "Item18");
	}
	if(slot == 19)
	{
		gPlayerData[playerid][pItem19] = value;
		SavePlayerData(playerid, "Item19");
	}
	if(slot == 20)
	{
		gPlayerData[playerid][pItem20] = value;
		SavePlayerData(playerid, "Item20");
	}
	if(slot == 21)
	{
		gPlayerData[playerid][pItem21] = value;
		SavePlayerData(playerid, "Item21");
	}
	if(slot == 22)
	{
		gPlayerData[playerid][pItem22] = value;
		SavePlayerData(playerid, "Item22");
	}
	if(slot == 23)
	{
		gPlayerData[playerid][pItem23] = value;
		SavePlayerData(playerid, "Item23");
	}
	if(slot == 24)
	{
		gPlayerData[playerid][pItem24] = value;
		SavePlayerData(playerid, "Item24");
	}
	if(slot == 25)
	{
		gPlayerData[playerid][pItem25] = value;
		SavePlayerData(playerid, "Item25");
	}
}

stock ShowPItemsHIns(playerid)
{
	new wstring[1536];
	new string2[64];
	if(gPlayerData[playerid][pVipItem] == 0 && PHaveExpandItem(playerid))
	{
		format(wstring, sizeof(wstring), "1. %s [iloœæ: %d] [waga: %d]\n2. %s [iloœæ: %d] [waga: %d]\n3. %s [iloœæ: %d] [waga: %d]\n4. %s [iloœæ: %d] [waga: %d]\n5. %s [iloœæ: %d] [waga: %d]\n6. %s [iloœæ: %d] [waga: %d]\n7. %s [iloœæ: %d] [waga: %d]\n8. %s [iloœæ: %d] [waga: %d]\n9. %s [iloœæ: %d] [waga: %d]\n10. %s [iloœæ: %d] [waga: %d]\n11. %s [iloœæ: %d] [waga: %d]\n12. %s [iloœæ: %d] [waga: %d]\n13. %s [iloœæ: %d] [waga: %d]\n14. %s [iloœæ: %d] [waga: %d]\n15. %s [iloœæ: %d] [waga: %d]\n",
		ItemName(gPlayerData[playerid][pItem1type], gPlayerData[playerid][pItem1]), SlotParam6(playerid, 1), ItemWeight(gPlayerData[playerid][pItem1type], gPlayerData[playerid][pItem1]),
		ItemName(gPlayerData[playerid][pItem2type], gPlayerData[playerid][pItem2]), SlotParam6(playerid, 2), ItemWeight(gPlayerData[playerid][pItem2type], gPlayerData[playerid][pItem2]),
		ItemName(gPlayerData[playerid][pItem3type], gPlayerData[playerid][pItem3]), SlotParam6(playerid, 3), ItemWeight(gPlayerData[playerid][pItem3type], gPlayerData[playerid][pItem3]),
		ItemName(gPlayerData[playerid][pItem4type], gPlayerData[playerid][pItem4]), SlotParam6(playerid, 4), ItemWeight(gPlayerData[playerid][pItem4type], gPlayerData[playerid][pItem4]),
		ItemName(gPlayerData[playerid][pItem5type], gPlayerData[playerid][pItem5]), SlotParam6(playerid, 5), ItemWeight(gPlayerData[playerid][pItem5type], gPlayerData[playerid][pItem5]),
		ItemName(gPlayerData[playerid][pItem6type], gPlayerData[playerid][pItem6]), SlotParam6(playerid, 6), ItemWeight(gPlayerData[playerid][pItem6type], gPlayerData[playerid][pItem6]),
		ItemName(gPlayerData[playerid][pItem7type], gPlayerData[playerid][pItem7]), SlotParam6(playerid, 7), ItemWeight(gPlayerData[playerid][pItem7type], gPlayerData[playerid][pItem7]),
		ItemName(gPlayerData[playerid][pItem8type], gPlayerData[playerid][pItem8]), SlotParam6(playerid, 8), ItemWeight(gPlayerData[playerid][pItem8type], gPlayerData[playerid][pItem8]),
		ItemName(gPlayerData[playerid][pItem9type], gPlayerData[playerid][pItem9]), SlotParam6(playerid, 9), ItemWeight(gPlayerData[playerid][pItem9type], gPlayerData[playerid][pItem9]),
		ItemName(gPlayerData[playerid][pItem10type], gPlayerData[playerid][pItem10]), SlotParam6(playerid, 10), ItemWeight(gPlayerData[playerid][pItem10type], gPlayerData[playerid][pItem10]),
		ItemName(gPlayerData[playerid][pItem11type], gPlayerData[playerid][pItem11]), SlotParam6(playerid, 11), ItemWeight(gPlayerData[playerid][pItem11type], gPlayerData[playerid][pItem11]),
		ItemName(gPlayerData[playerid][pItem12type], gPlayerData[playerid][pItem12]), SlotParam6(playerid, 12), ItemWeight(gPlayerData[playerid][pItem12type], gPlayerData[playerid][pItem12]),
		ItemName(gPlayerData[playerid][pItem13type], gPlayerData[playerid][pItem13]), SlotParam6(playerid, 13), ItemWeight(gPlayerData[playerid][pItem13type], gPlayerData[playerid][pItem13]),
		ItemName(gPlayerData[playerid][pItem14type], gPlayerData[playerid][pItem14]), SlotParam6(playerid, 14), ItemWeight(gPlayerData[playerid][pItem14type], gPlayerData[playerid][pItem14]),
		ItemName(gPlayerData[playerid][pItem15type], gPlayerData[playerid][pItem15]), SlotParam6(playerid, 15), ItemWeight(gPlayerData[playerid][pItem15type], gPlayerData[playerid][pItem15]) );
		format(string2, sizeof(string2), "Moje itemy - waga ca³kowita %d/%d", PItemWeight(playerid), gPlayerData[playerid][pMaxWeight]);
		ShowPlayerDialog(playerid,DIALOG_HITEM_INS_1,DIALOG_STYLE_LIST, string2, wstring, "Wybierz", "Zamknij");
	}
	if(gPlayerData[playerid][pVipItem] == 0 && !PHaveExpandItem(playerid)) 
	{
		format(wstring, sizeof(wstring), "1. %s [iloœæ: %d] [waga: %d]\n 2. %s [iloœæ: %d] [waga: %d]\n 3. %s [iloœæ: %d] [waga: %d]\n 4. %s [iloœæ: %d] [waga: %d]\n 5. %s [iloœæ: %d] [waga: %d]", 
		ItemName(gPlayerData[playerid][pItem1type], gPlayerData[playerid][pItem1]), SlotParam6(playerid, 1), ItemWeight(gPlayerData[playerid][pItem1type], gPlayerData[playerid][pItem1]),
		ItemName(gPlayerData[playerid][pItem2type], gPlayerData[playerid][pItem2]), SlotParam6(playerid, 2), ItemWeight(gPlayerData[playerid][pItem2type], gPlayerData[playerid][pItem2]),
		ItemName(gPlayerData[playerid][pItem3type], gPlayerData[playerid][pItem3]), SlotParam6(playerid, 3), ItemWeight(gPlayerData[playerid][pItem3type], gPlayerData[playerid][pItem3]),
		ItemName(gPlayerData[playerid][pItem4type], gPlayerData[playerid][pItem4]), SlotParam6(playerid, 4), ItemWeight(gPlayerData[playerid][pItem4type], gPlayerData[playerid][pItem4]),
		ItemName(gPlayerData[playerid][pItem5type], gPlayerData[playerid][pItem5]), SlotParam6(playerid, 5), ItemWeight(gPlayerData[playerid][pItem5type], gPlayerData[playerid][pItem5]) );
		format(string2, sizeof(string2), "Moje itemy - waga ca³kowita %d/%d", PItemWeight(playerid), gPlayerData[playerid][pMaxWeight]);
		ShowPlayerDialog(playerid,DIALOG_HITEM_INS_1,DIALOG_STYLE_LIST, string2, wstring, "Wybierz", "Zamknij");
	}
	if(gPlayerData[playerid][pVipItem] > 0)
	{
		format(wstring, sizeof(wstring), "1. %s [iloœæ: %d] [waga: %d]\n2. %s [iloœæ: %d] [waga: %d]\n3. %s [iloœæ: %d] [waga: %d]\n4. %s [iloœæ: %d] [waga: %d]\n5. %s [iloœæ: %d] [waga: %d]\n6. %s [iloœæ: %d] [waga: %d]\n7. %s [iloœæ: %d] [waga: %d]\n8. %s [iloœæ: %d] [waga: %d]\n9. %s [iloœæ: %d] [waga: %d]\n10. %s [iloœæ: %d] [waga: %d]\n11. %s [iloœæ: %d] [waga: %d]\n12. %s [iloœæ: %d] [waga: %d]\n13. %s [iloœæ: %d] [waga: %d]\n14. %s [iloœæ: %d] [waga: %d]\n15. %s [iloœæ: %d] [waga: %d]\n",
		ItemName(gPlayerData[playerid][pItem1type], gPlayerData[playerid][pItem1]), SlotParam6(playerid, 1), ItemWeight(gPlayerData[playerid][pItem1type], gPlayerData[playerid][pItem1]),
		ItemName(gPlayerData[playerid][pItem2type], gPlayerData[playerid][pItem2]), SlotParam6(playerid, 2), ItemWeight(gPlayerData[playerid][pItem2type], gPlayerData[playerid][pItem2]),
		ItemName(gPlayerData[playerid][pItem3type], gPlayerData[playerid][pItem3]), SlotParam6(playerid, 3), ItemWeight(gPlayerData[playerid][pItem3type], gPlayerData[playerid][pItem3]),
		ItemName(gPlayerData[playerid][pItem4type], gPlayerData[playerid][pItem4]), SlotParam6(playerid, 4), ItemWeight(gPlayerData[playerid][pItem4type], gPlayerData[playerid][pItem4]),
		ItemName(gPlayerData[playerid][pItem5type], gPlayerData[playerid][pItem5]), SlotParam6(playerid, 5), ItemWeight(gPlayerData[playerid][pItem5type], gPlayerData[playerid][pItem5]),
		ItemName(gPlayerData[playerid][pItem6type], gPlayerData[playerid][pItem6]), SlotParam6(playerid, 6), ItemWeight(gPlayerData[playerid][pItem6type], gPlayerData[playerid][pItem6]),
		ItemName(gPlayerData[playerid][pItem7type], gPlayerData[playerid][pItem7]), SlotParam6(playerid, 7), ItemWeight(gPlayerData[playerid][pItem7type], gPlayerData[playerid][pItem7]),
		ItemName(gPlayerData[playerid][pItem8type], gPlayerData[playerid][pItem8]), SlotParam6(playerid, 8), ItemWeight(gPlayerData[playerid][pItem8type], gPlayerData[playerid][pItem8]),
		ItemName(gPlayerData[playerid][pItem9type], gPlayerData[playerid][pItem9]), SlotParam6(playerid, 9), ItemWeight(gPlayerData[playerid][pItem9type], gPlayerData[playerid][pItem9]),
		ItemName(gPlayerData[playerid][pItem10type], gPlayerData[playerid][pItem10]), SlotParam6(playerid, 10), ItemWeight(gPlayerData[playerid][pItem10type], gPlayerData[playerid][pItem10]),
		ItemName(gPlayerData[playerid][pItem11type], gPlayerData[playerid][pItem11]), SlotParam6(playerid, 11), ItemWeight(gPlayerData[playerid][pItem11type], gPlayerData[playerid][pItem11]),
		ItemName(gPlayerData[playerid][pItem12type], gPlayerData[playerid][pItem12]), SlotParam6(playerid, 12), ItemWeight(gPlayerData[playerid][pItem12type], gPlayerData[playerid][pItem12]),
		ItemName(gPlayerData[playerid][pItem13type], gPlayerData[playerid][pItem13]), SlotParam6(playerid, 13), ItemWeight(gPlayerData[playerid][pItem13type], gPlayerData[playerid][pItem13]),
		ItemName(gPlayerData[playerid][pItem14type], gPlayerData[playerid][pItem14]), SlotParam6(playerid, 14), ItemWeight(gPlayerData[playerid][pItem14type], gPlayerData[playerid][pItem14]),
		ItemName(gPlayerData[playerid][pItem15type], gPlayerData[playerid][pItem15]), SlotParam6(playerid, 15), ItemWeight(gPlayerData[playerid][pItem15type], gPlayerData[playerid][pItem15]) );
		format(wstring, sizeof(wstring), "%s16. %s [iloœæ: %d] [waga: %d]\n17. %s [iloœæ: %d] [waga: %d]\n18. %s [iloœæ: %d] [waga: %d]\n19. %s [iloœæ: %d] [waga: %d]\n20. %s [iloœæ: %d] [waga: %d]\n21. %s [iloœæ: %d] [waga: %d]\n22. %s [iloœæ: %d] [waga: %d]\n23. %s [iloœæ: %d] [waga: %d]\n24. %s [iloœæ: %d] [waga: %d]\n25. %s [iloœæ: %d] [waga: %d]",
		wstring,
		ItemName(gPlayerData[playerid][pItem16type], gPlayerData[playerid][pItem16]), SlotParam6(playerid, 16), ItemWeight(gPlayerData[playerid][pItem16type], gPlayerData[playerid][pItem16]),
		ItemName(gPlayerData[playerid][pItem17type], gPlayerData[playerid][pItem17]), SlotParam6(playerid, 17), ItemWeight(gPlayerData[playerid][pItem17type], gPlayerData[playerid][pItem17]),
		ItemName(gPlayerData[playerid][pItem18type], gPlayerData[playerid][pItem18]), SlotParam6(playerid, 18), ItemWeight(gPlayerData[playerid][pItem18type], gPlayerData[playerid][pItem18]),
		ItemName(gPlayerData[playerid][pItem19type], gPlayerData[playerid][pItem19]), SlotParam6(playerid, 19), ItemWeight(gPlayerData[playerid][pItem19type], gPlayerData[playerid][pItem19]),
		ItemName(gPlayerData[playerid][pItem20type], gPlayerData[playerid][pItem20]), SlotParam6(playerid, 20), ItemWeight(gPlayerData[playerid][pItem20type], gPlayerData[playerid][pItem20]),
		ItemName(gPlayerData[playerid][pItem21type], gPlayerData[playerid][pItem21]), SlotParam6(playerid, 21), ItemWeight(gPlayerData[playerid][pItem21type], gPlayerData[playerid][pItem21]),
		ItemName(gPlayerData[playerid][pItem22type], gPlayerData[playerid][pItem22]), SlotParam6(playerid, 22), ItemWeight(gPlayerData[playerid][pItem22type], gPlayerData[playerid][pItem22]),
		ItemName(gPlayerData[playerid][pItem23type], gPlayerData[playerid][pItem23]), SlotParam6(playerid, 23), ItemWeight(gPlayerData[playerid][pItem23type], gPlayerData[playerid][pItem23]),
		ItemName(gPlayerData[playerid][pItem24type], gPlayerData[playerid][pItem24]), SlotParam6(playerid, 24), ItemWeight(gPlayerData[playerid][pItem24type], gPlayerData[playerid][pItem24]),
		ItemName(gPlayerData[playerid][pItem25type], gPlayerData[playerid][pItem25]), SlotParam6(playerid, 25), ItemWeight(gPlayerData[playerid][pItem25type], gPlayerData[playerid][pItem25]) );
		format(string2, sizeof(string2), "Moje itemy - waga ca³kowita %d/%d", PItemWeight(playerid), gPlayerData[playerid][pMaxWeight]);
		ShowPlayerDialog(playerid,DIALOG_HITEM_INS_1,DIALOG_STYLE_LIST, string2, wstring, "Wybierz", "Zamknij");
	}
	return 1;
}

stock ShowPItemsVIns(playerid)
{
	new wstring[1536];
	new string2[64];
	if(gPlayerData[playerid][pVipItem] == 0 && PHaveExpandItem(playerid))
	{
		format(wstring, sizeof(wstring), "1. %s [iloœæ: %d] [waga: %d]\n2. %s [iloœæ: %d] [waga: %d]\n3. %s [iloœæ: %d] [waga: %d]\n4. %s [iloœæ: %d] [waga: %d]\n5. %s [iloœæ: %d] [waga: %d]\n6. %s [iloœæ: %d] [waga: %d]\n7. %s [iloœæ: %d] [waga: %d]\n8. %s [iloœæ: %d] [waga: %d]\n9. %s [iloœæ: %d] [waga: %d]\n10. %s [iloœæ: %d] [waga: %d]\n11. %s [iloœæ: %d] [waga: %d]\n12. %s [iloœæ: %d] [waga: %d]\n13. %s [iloœæ: %d] [waga: %d]\n14. %s [iloœæ: %d] [waga: %d]\n15. %s [iloœæ: %d] [waga: %d]\n",
		ItemName(gPlayerData[playerid][pItem1type], gPlayerData[playerid][pItem1]), SlotParam6(playerid, 1), ItemWeight(gPlayerData[playerid][pItem1type], gPlayerData[playerid][pItem1]),
		ItemName(gPlayerData[playerid][pItem2type], gPlayerData[playerid][pItem2]), SlotParam6(playerid, 2), ItemWeight(gPlayerData[playerid][pItem2type], gPlayerData[playerid][pItem2]),
		ItemName(gPlayerData[playerid][pItem3type], gPlayerData[playerid][pItem3]), SlotParam6(playerid, 3), ItemWeight(gPlayerData[playerid][pItem3type], gPlayerData[playerid][pItem3]),
		ItemName(gPlayerData[playerid][pItem4type], gPlayerData[playerid][pItem4]), SlotParam6(playerid, 4), ItemWeight(gPlayerData[playerid][pItem4type], gPlayerData[playerid][pItem4]),
		ItemName(gPlayerData[playerid][pItem5type], gPlayerData[playerid][pItem5]), SlotParam6(playerid, 5), ItemWeight(gPlayerData[playerid][pItem5type], gPlayerData[playerid][pItem5]),
		ItemName(gPlayerData[playerid][pItem6type], gPlayerData[playerid][pItem6]), SlotParam6(playerid, 6), ItemWeight(gPlayerData[playerid][pItem6type], gPlayerData[playerid][pItem6]),
		ItemName(gPlayerData[playerid][pItem7type], gPlayerData[playerid][pItem7]), SlotParam6(playerid, 7), ItemWeight(gPlayerData[playerid][pItem7type], gPlayerData[playerid][pItem7]),
		ItemName(gPlayerData[playerid][pItem8type], gPlayerData[playerid][pItem8]), SlotParam6(playerid, 8), ItemWeight(gPlayerData[playerid][pItem8type], gPlayerData[playerid][pItem8]),
		ItemName(gPlayerData[playerid][pItem9type], gPlayerData[playerid][pItem9]), SlotParam6(playerid, 9), ItemWeight(gPlayerData[playerid][pItem9type], gPlayerData[playerid][pItem9]),
		ItemName(gPlayerData[playerid][pItem10type], gPlayerData[playerid][pItem10]), SlotParam6(playerid, 10), ItemWeight(gPlayerData[playerid][pItem10type], gPlayerData[playerid][pItem10]),
		ItemName(gPlayerData[playerid][pItem11type], gPlayerData[playerid][pItem11]), SlotParam6(playerid, 11), ItemWeight(gPlayerData[playerid][pItem11type], gPlayerData[playerid][pItem11]),
		ItemName(gPlayerData[playerid][pItem12type], gPlayerData[playerid][pItem12]), SlotParam6(playerid, 12), ItemWeight(gPlayerData[playerid][pItem12type], gPlayerData[playerid][pItem12]),
		ItemName(gPlayerData[playerid][pItem13type], gPlayerData[playerid][pItem13]), SlotParam6(playerid, 13), ItemWeight(gPlayerData[playerid][pItem13type], gPlayerData[playerid][pItem13]),
		ItemName(gPlayerData[playerid][pItem14type], gPlayerData[playerid][pItem14]), SlotParam6(playerid, 14), ItemWeight(gPlayerData[playerid][pItem14type], gPlayerData[playerid][pItem14]),
		ItemName(gPlayerData[playerid][pItem15type], gPlayerData[playerid][pItem15]), SlotParam6(playerid, 15), ItemWeight(gPlayerData[playerid][pItem15type], gPlayerData[playerid][pItem15]) );
		format(string2, sizeof(string2), "Moje itemy - waga ca³kowita %d/%d", PItemWeight(playerid), gPlayerData[playerid][pMaxWeight]);
		ShowPlayerDialog(playerid,DIALOG_VITEM_INS_1,DIALOG_STYLE_LIST, string2, wstring, "Wybierz", "Zamknij");
	}
	if(gPlayerData[playerid][pVipItem] == 0 && !PHaveExpandItem(playerid)) 
	{
		format(wstring, sizeof(wstring), "1. %s [iloœæ: %d] [waga: %d]\n 2. %s [iloœæ: %d] [waga: %d]\n 3. %s [iloœæ: %d] [waga: %d]\n 4. %s [iloœæ: %d] [waga: %d]\n 5. %s [iloœæ: %d] [waga: %d]", 
		ItemName(gPlayerData[playerid][pItem1type], gPlayerData[playerid][pItem1]), SlotParam6(playerid, 1), ItemWeight(gPlayerData[playerid][pItem1type], gPlayerData[playerid][pItem1]),
		ItemName(gPlayerData[playerid][pItem2type], gPlayerData[playerid][pItem2]), SlotParam6(playerid, 2), ItemWeight(gPlayerData[playerid][pItem2type], gPlayerData[playerid][pItem2]),
		ItemName(gPlayerData[playerid][pItem3type], gPlayerData[playerid][pItem3]), SlotParam6(playerid, 3), ItemWeight(gPlayerData[playerid][pItem3type], gPlayerData[playerid][pItem3]),
		ItemName(gPlayerData[playerid][pItem4type], gPlayerData[playerid][pItem4]), SlotParam6(playerid, 4), ItemWeight(gPlayerData[playerid][pItem4type], gPlayerData[playerid][pItem4]),
		ItemName(gPlayerData[playerid][pItem5type], gPlayerData[playerid][pItem5]), SlotParam6(playerid, 5), ItemWeight(gPlayerData[playerid][pItem5type], gPlayerData[playerid][pItem5]) );
		format(string2, sizeof(string2), "Moje itemy - waga ca³kowita %d/%d", PItemWeight(playerid), gPlayerData[playerid][pMaxWeight]);
		ShowPlayerDialog(playerid,DIALOG_VITEM_INS_1,DIALOG_STYLE_LIST, string2, wstring, "Wybierz", "Zamknij");
	}
	if(gPlayerData[playerid][pVipItem] > 0)
	{
		format(wstring, sizeof(wstring), "1. %s [iloœæ: %d] [waga: %d]\n2. %s [iloœæ: %d] [waga: %d]\n3. %s [iloœæ: %d] [waga: %d]\n4. %s [iloœæ: %d] [waga: %d]\n5. %s [iloœæ: %d] [waga: %d]\n6. %s [iloœæ: %d] [waga: %d]\n7. %s [iloœæ: %d] [waga: %d]\n8. %s [iloœæ: %d] [waga: %d]\n9. %s [iloœæ: %d] [waga: %d]\n10. %s [iloœæ: %d] [waga: %d]\n11. %s [iloœæ: %d] [waga: %d]\n12. %s [iloœæ: %d] [waga: %d]\n13. %s [iloœæ: %d] [waga: %d]\n14. %s [iloœæ: %d] [waga: %d]\n15. %s [iloœæ: %d] [waga: %d]\n",
		ItemName(gPlayerData[playerid][pItem1type], gPlayerData[playerid][pItem1]), SlotParam6(playerid, 1), ItemWeight(gPlayerData[playerid][pItem1type], gPlayerData[playerid][pItem1]),
		ItemName(gPlayerData[playerid][pItem2type], gPlayerData[playerid][pItem2]), SlotParam6(playerid, 2), ItemWeight(gPlayerData[playerid][pItem2type], gPlayerData[playerid][pItem2]),
		ItemName(gPlayerData[playerid][pItem3type], gPlayerData[playerid][pItem3]), SlotParam6(playerid, 3), ItemWeight(gPlayerData[playerid][pItem3type], gPlayerData[playerid][pItem3]),
		ItemName(gPlayerData[playerid][pItem4type], gPlayerData[playerid][pItem4]), SlotParam6(playerid, 4), ItemWeight(gPlayerData[playerid][pItem4type], gPlayerData[playerid][pItem4]),
		ItemName(gPlayerData[playerid][pItem5type], gPlayerData[playerid][pItem5]), SlotParam6(playerid, 5), ItemWeight(gPlayerData[playerid][pItem5type], gPlayerData[playerid][pItem5]),
		ItemName(gPlayerData[playerid][pItem6type], gPlayerData[playerid][pItem6]), SlotParam6(playerid, 6), ItemWeight(gPlayerData[playerid][pItem6type], gPlayerData[playerid][pItem6]),
		ItemName(gPlayerData[playerid][pItem7type], gPlayerData[playerid][pItem7]), SlotParam6(playerid, 7), ItemWeight(gPlayerData[playerid][pItem7type], gPlayerData[playerid][pItem7]),
		ItemName(gPlayerData[playerid][pItem8type], gPlayerData[playerid][pItem8]), SlotParam6(playerid, 8), ItemWeight(gPlayerData[playerid][pItem8type], gPlayerData[playerid][pItem8]),
		ItemName(gPlayerData[playerid][pItem9type], gPlayerData[playerid][pItem9]), SlotParam6(playerid, 9), ItemWeight(gPlayerData[playerid][pItem9type], gPlayerData[playerid][pItem9]),
		ItemName(gPlayerData[playerid][pItem10type], gPlayerData[playerid][pItem10]), SlotParam6(playerid, 10), ItemWeight(gPlayerData[playerid][pItem10type], gPlayerData[playerid][pItem10]),
		ItemName(gPlayerData[playerid][pItem11type], gPlayerData[playerid][pItem11]), SlotParam6(playerid, 11), ItemWeight(gPlayerData[playerid][pItem11type], gPlayerData[playerid][pItem11]),
		ItemName(gPlayerData[playerid][pItem12type], gPlayerData[playerid][pItem12]), SlotParam6(playerid, 12), ItemWeight(gPlayerData[playerid][pItem12type], gPlayerData[playerid][pItem12]),
		ItemName(gPlayerData[playerid][pItem13type], gPlayerData[playerid][pItem13]), SlotParam6(playerid, 13), ItemWeight(gPlayerData[playerid][pItem13type], gPlayerData[playerid][pItem13]),
		ItemName(gPlayerData[playerid][pItem14type], gPlayerData[playerid][pItem14]), SlotParam6(playerid, 14), ItemWeight(gPlayerData[playerid][pItem14type], gPlayerData[playerid][pItem14]),
		ItemName(gPlayerData[playerid][pItem15type], gPlayerData[playerid][pItem15]), SlotParam6(playerid, 15), ItemWeight(gPlayerData[playerid][pItem15type], gPlayerData[playerid][pItem15]) );
		format(wstring, sizeof(wstring), "%s16. %s [iloœæ: %d] [waga: %d]\n17. %s [iloœæ: %d] [waga: %d]\n18. %s [iloœæ: %d] [waga: %d]\n19. %s [iloœæ: %d] [waga: %d]\n20. %s [iloœæ: %d] [waga: %d]\n21. %s [iloœæ: %d] [waga: %d]\n22. %s [iloœæ: %d] [waga: %d]\n23. %s [iloœæ: %d] [waga: %d]\n24. %s [iloœæ: %d] [waga: %d]\n25. %s [iloœæ: %d] [waga: %d]",
		wstring,
		ItemName(gPlayerData[playerid][pItem16type], gPlayerData[playerid][pItem16]), SlotParam6(playerid, 16), ItemWeight(gPlayerData[playerid][pItem16type], gPlayerData[playerid][pItem16]),
		ItemName(gPlayerData[playerid][pItem17type], gPlayerData[playerid][pItem17]), SlotParam6(playerid, 17), ItemWeight(gPlayerData[playerid][pItem17type], gPlayerData[playerid][pItem17]),
		ItemName(gPlayerData[playerid][pItem18type], gPlayerData[playerid][pItem18]), SlotParam6(playerid, 18), ItemWeight(gPlayerData[playerid][pItem18type], gPlayerData[playerid][pItem18]),
		ItemName(gPlayerData[playerid][pItem19type], gPlayerData[playerid][pItem19]), SlotParam6(playerid, 19), ItemWeight(gPlayerData[playerid][pItem19type], gPlayerData[playerid][pItem19]),
		ItemName(gPlayerData[playerid][pItem20type], gPlayerData[playerid][pItem20]), SlotParam6(playerid, 20), ItemWeight(gPlayerData[playerid][pItem20type], gPlayerData[playerid][pItem20]),
		ItemName(gPlayerData[playerid][pItem21type], gPlayerData[playerid][pItem21]), SlotParam6(playerid, 21), ItemWeight(gPlayerData[playerid][pItem21type], gPlayerData[playerid][pItem21]),
		ItemName(gPlayerData[playerid][pItem22type], gPlayerData[playerid][pItem22]), SlotParam6(playerid, 22), ItemWeight(gPlayerData[playerid][pItem22type], gPlayerData[playerid][pItem22]),
		ItemName(gPlayerData[playerid][pItem23type], gPlayerData[playerid][pItem23]), SlotParam6(playerid, 23), ItemWeight(gPlayerData[playerid][pItem23type], gPlayerData[playerid][pItem23]),
		ItemName(gPlayerData[playerid][pItem24type], gPlayerData[playerid][pItem24]), SlotParam6(playerid, 24), ItemWeight(gPlayerData[playerid][pItem24type], gPlayerData[playerid][pItem24]),
		ItemName(gPlayerData[playerid][pItem25type], gPlayerData[playerid][pItem25]), SlotParam6(playerid, 25), ItemWeight(gPlayerData[playerid][pItem25type], gPlayerData[playerid][pItem25]) );
		format(string2, sizeof(string2), "Moje itemy - waga ca³kowita %d/%d", PItemWeight(playerid), gPlayerData[playerid][pMaxWeight]);
		ShowPlayerDialog(playerid,DIALOG_VITEM_INS_1,DIALOG_STYLE_LIST, string2, wstring, "Wybierz", "Zamknij");
	}
	return 1;
}

stock ShowPItems(playerid)
{
	new wstring[2048];
	new string2[64];
	if(gPlayerData[playerid][pVipItem] == 0 && PHaveExpandItem(playerid))
	{
		format(wstring, sizeof(wstring), "1. %s [iloœæ: %d] [waga: %d]\n2. %s [iloœæ: %d] [waga: %d]\n3. %s [iloœæ: %d] [waga: %d]\n4. %s [iloœæ: %d] [waga: %d]\n5. %s [iloœæ: %d] [waga: %d]\n6. %s [iloœæ: %d] [waga: %d]\n7. %s [iloœæ: %d] [waga: %d]\n8. %s [iloœæ: %d] [waga: %d]\n9. %s [iloœæ: %d] [waga: %d]\n10. %s [iloœæ: %d] [waga: %d]\n11. %s [iloœæ: %d] [waga: %d]\n12. %s [iloœæ: %d] [waga: %d]\n13. %s [iloœæ: %d] [waga: %d]\n14. %s [iloœæ: %d] [waga: %d]\n15. %s [iloœæ: %d] [waga: %d]\n",
		ItemName(gPlayerData[playerid][pItem1type], gPlayerData[playerid][pItem1]), SlotParam6(playerid, 1), ItemWeight(gPlayerData[playerid][pItem1type], gPlayerData[playerid][pItem1]),
		ItemName(gPlayerData[playerid][pItem2type], gPlayerData[playerid][pItem2]), SlotParam6(playerid, 2), ItemWeight(gPlayerData[playerid][pItem2type], gPlayerData[playerid][pItem2]),
		ItemName(gPlayerData[playerid][pItem3type], gPlayerData[playerid][pItem3]), SlotParam6(playerid, 3), ItemWeight(gPlayerData[playerid][pItem3type], gPlayerData[playerid][pItem3]),
		ItemName(gPlayerData[playerid][pItem4type], gPlayerData[playerid][pItem4]), SlotParam6(playerid, 4), ItemWeight(gPlayerData[playerid][pItem4type], gPlayerData[playerid][pItem4]),
		ItemName(gPlayerData[playerid][pItem5type], gPlayerData[playerid][pItem5]), SlotParam6(playerid, 5), ItemWeight(gPlayerData[playerid][pItem5type], gPlayerData[playerid][pItem5]),
		ItemName(gPlayerData[playerid][pItem6type], gPlayerData[playerid][pItem6]), SlotParam6(playerid, 6), ItemWeight(gPlayerData[playerid][pItem6type], gPlayerData[playerid][pItem6]),
		ItemName(gPlayerData[playerid][pItem7type], gPlayerData[playerid][pItem7]), SlotParam6(playerid, 7), ItemWeight(gPlayerData[playerid][pItem7type], gPlayerData[playerid][pItem7]),
		ItemName(gPlayerData[playerid][pItem8type], gPlayerData[playerid][pItem8]), SlotParam6(playerid, 8), ItemWeight(gPlayerData[playerid][pItem8type], gPlayerData[playerid][pItem8]),
		ItemName(gPlayerData[playerid][pItem9type], gPlayerData[playerid][pItem9]), SlotParam6(playerid, 9), ItemWeight(gPlayerData[playerid][pItem9type], gPlayerData[playerid][pItem9]),
		ItemName(gPlayerData[playerid][pItem10type], gPlayerData[playerid][pItem10]), SlotParam6(playerid, 10), ItemWeight(gPlayerData[playerid][pItem10type], gPlayerData[playerid][pItem10]),
		ItemName(gPlayerData[playerid][pItem11type], gPlayerData[playerid][pItem11]), SlotParam6(playerid, 11), ItemWeight(gPlayerData[playerid][pItem11type], gPlayerData[playerid][pItem11]),
		ItemName(gPlayerData[playerid][pItem12type], gPlayerData[playerid][pItem12]), SlotParam6(playerid, 12), ItemWeight(gPlayerData[playerid][pItem12type], gPlayerData[playerid][pItem12]),
		ItemName(gPlayerData[playerid][pItem13type], gPlayerData[playerid][pItem13]), SlotParam6(playerid, 13), ItemWeight(gPlayerData[playerid][pItem13type], gPlayerData[playerid][pItem13]),
		ItemName(gPlayerData[playerid][pItem14type], gPlayerData[playerid][pItem14]), SlotParam6(playerid, 14), ItemWeight(gPlayerData[playerid][pItem14type], gPlayerData[playerid][pItem14]),
		ItemName(gPlayerData[playerid][pItem15type], gPlayerData[playerid][pItem15]), SlotParam6(playerid, 15), ItemWeight(gPlayerData[playerid][pItem15type], gPlayerData[playerid][pItem15]) );
		format(string2, sizeof(string2), "Moje itemy - waga ca³kowita %d/%d", PItemWeight(playerid), gPlayerData[playerid][pMaxWeight]);
		ShowPlayerDialog(playerid,DIALOG_ITEM_1,DIALOG_STYLE_LIST, string2, wstring, "Wybierz", "Zamknij");
	}
	else if(gPlayerData[playerid][pVipItem] == 0 && PHaveExpandItem(playerid) == 0) 
	{
		format(wstring, sizeof(wstring), "1. %s [iloœæ: %d] [waga: %d]\n2. %s [iloœæ: %d] [waga: %d]\n3. %s [iloœæ: %d] [waga: %d]\n4. %s [iloœæ: %d] [waga: %d]\n5. %s [iloœæ: %d] [waga: %d]", 
		ItemName(gPlayerData[playerid][pItem1type], gPlayerData[playerid][pItem1]), SlotParam6(playerid, 1), ItemWeight(gPlayerData[playerid][pItem1type], gPlayerData[playerid][pItem1]),
		ItemName(gPlayerData[playerid][pItem2type], gPlayerData[playerid][pItem2]), SlotParam6(playerid, 2), ItemWeight(gPlayerData[playerid][pItem2type], gPlayerData[playerid][pItem2]),
		ItemName(gPlayerData[playerid][pItem3type], gPlayerData[playerid][pItem3]), SlotParam6(playerid, 3), ItemWeight(gPlayerData[playerid][pItem3type], gPlayerData[playerid][pItem3]),
		ItemName(gPlayerData[playerid][pItem4type], gPlayerData[playerid][pItem4]), SlotParam6(playerid, 4), ItemWeight(gPlayerData[playerid][pItem4type], gPlayerData[playerid][pItem4]),
		ItemName(gPlayerData[playerid][pItem5type], gPlayerData[playerid][pItem5]), SlotParam6(playerid, 5), ItemWeight(gPlayerData[playerid][pItem5type], gPlayerData[playerid][pItem5]) );
		format(string2, sizeof(string2), "Moje itemy - waga ca³kowita %d/%d", PItemWeight(playerid), gPlayerData[playerid][pMaxWeight]);
		ShowPlayerDialog(playerid,DIALOG_ITEM_1,DIALOG_STYLE_LIST, string2, wstring, "Wybierz", "Zamknij");
	}
	else if(gPlayerData[playerid][pVipItem] > 0)
	{
		format(wstring, sizeof(wstring), "1. %s [iloœæ: %d] [waga: %d]\n2. %s [iloœæ: %d] [waga: %d]\n3. %s [iloœæ: %d] [waga: %d]\n4. %s [iloœæ: %d] [waga: %d]\n5. %s [iloœæ: %d] [waga: %d]\n6. %s [iloœæ: %d] [waga: %d]\n7. %s [iloœæ: %d] [waga: %d]\n8. %s [iloœæ: %d] [waga: %d]\n9. %s [iloœæ: %d] [waga: %d]\n10. %s [iloœæ: %d] [waga: %d]\n11. %s [iloœæ: %d] [waga: %d]\n12. %s [iloœæ: %d] [waga: %d]\n13. %s [iloœæ: %d] [waga: %d]\n14. %s [iloœæ: %d] [waga: %d]\n15. %s [iloœæ: %d] [waga: %d]\n",
		ItemName(gPlayerData[playerid][pItem1type], gPlayerData[playerid][pItem1]), SlotParam6(playerid, 1), ItemWeight(gPlayerData[playerid][pItem1type], gPlayerData[playerid][pItem1]),
		ItemName(gPlayerData[playerid][pItem2type], gPlayerData[playerid][pItem2]), SlotParam6(playerid, 2), ItemWeight(gPlayerData[playerid][pItem2type], gPlayerData[playerid][pItem2]),
		ItemName(gPlayerData[playerid][pItem3type], gPlayerData[playerid][pItem3]), SlotParam6(playerid, 3), ItemWeight(gPlayerData[playerid][pItem3type], gPlayerData[playerid][pItem3]),
		ItemName(gPlayerData[playerid][pItem4type], gPlayerData[playerid][pItem4]), SlotParam6(playerid, 4), ItemWeight(gPlayerData[playerid][pItem4type], gPlayerData[playerid][pItem4]),
		ItemName(gPlayerData[playerid][pItem5type], gPlayerData[playerid][pItem5]), SlotParam6(playerid, 5), ItemWeight(gPlayerData[playerid][pItem5type], gPlayerData[playerid][pItem5]),
		ItemName(gPlayerData[playerid][pItem6type], gPlayerData[playerid][pItem6]), SlotParam6(playerid, 6), ItemWeight(gPlayerData[playerid][pItem6type], gPlayerData[playerid][pItem6]),
		ItemName(gPlayerData[playerid][pItem7type], gPlayerData[playerid][pItem7]), SlotParam6(playerid, 7), ItemWeight(gPlayerData[playerid][pItem7type], gPlayerData[playerid][pItem7]),
		ItemName(gPlayerData[playerid][pItem8type], gPlayerData[playerid][pItem8]), SlotParam6(playerid, 8), ItemWeight(gPlayerData[playerid][pItem8type], gPlayerData[playerid][pItem8]),
		ItemName(gPlayerData[playerid][pItem9type], gPlayerData[playerid][pItem9]), SlotParam6(playerid, 9), ItemWeight(gPlayerData[playerid][pItem9type], gPlayerData[playerid][pItem9]),
		ItemName(gPlayerData[playerid][pItem10type], gPlayerData[playerid][pItem10]), SlotParam6(playerid, 10), ItemWeight(gPlayerData[playerid][pItem10type], gPlayerData[playerid][pItem10]),
		ItemName(gPlayerData[playerid][pItem11type], gPlayerData[playerid][pItem11]), SlotParam6(playerid, 11), ItemWeight(gPlayerData[playerid][pItem11type], gPlayerData[playerid][pItem11]),
		ItemName(gPlayerData[playerid][pItem12type], gPlayerData[playerid][pItem12]), SlotParam6(playerid, 12), ItemWeight(gPlayerData[playerid][pItem12type], gPlayerData[playerid][pItem12]),
		ItemName(gPlayerData[playerid][pItem13type], gPlayerData[playerid][pItem13]), SlotParam6(playerid, 13), ItemWeight(gPlayerData[playerid][pItem13type], gPlayerData[playerid][pItem13]),
		ItemName(gPlayerData[playerid][pItem14type], gPlayerData[playerid][pItem14]), SlotParam6(playerid, 14), ItemWeight(gPlayerData[playerid][pItem14type], gPlayerData[playerid][pItem14]),
		ItemName(gPlayerData[playerid][pItem15type], gPlayerData[playerid][pItem15]), SlotParam6(playerid, 15), ItemWeight(gPlayerData[playerid][pItem15type], gPlayerData[playerid][pItem15]) );
		format(wstring, sizeof(wstring), "%s16. %s [iloœæ: %d] [waga: %d]\n17. %s [iloœæ: %d] [waga: %d]\n18. %s [iloœæ: %d] [waga: %d]\n19. %s [iloœæ: %d] [waga: %d]\n20. %s [iloœæ: %d] [waga: %d]\n21. %s [iloœæ: %d] [waga: %d]\n22. %s [iloœæ: %d] [waga: %d]\n23. %s [iloœæ: %d] [waga: %d]\n24. %s [iloœæ: %d] [waga: %d]\n25. %s [iloœæ: %d] [waga: %d]",
		wstring,
		ItemName(gPlayerData[playerid][pItem16type], gPlayerData[playerid][pItem16]), SlotParam6(playerid, 16), ItemWeight(gPlayerData[playerid][pItem16type], gPlayerData[playerid][pItem16]),
		ItemName(gPlayerData[playerid][pItem17type], gPlayerData[playerid][pItem17]), SlotParam6(playerid, 17), ItemWeight(gPlayerData[playerid][pItem17type], gPlayerData[playerid][pItem17]),
		ItemName(gPlayerData[playerid][pItem18type], gPlayerData[playerid][pItem18]), SlotParam6(playerid, 18), ItemWeight(gPlayerData[playerid][pItem18type], gPlayerData[playerid][pItem18]),
		ItemName(gPlayerData[playerid][pItem19type], gPlayerData[playerid][pItem19]), SlotParam6(playerid, 19), ItemWeight(gPlayerData[playerid][pItem19type], gPlayerData[playerid][pItem19]),
		ItemName(gPlayerData[playerid][pItem20type], gPlayerData[playerid][pItem20]), SlotParam6(playerid, 20), ItemWeight(gPlayerData[playerid][pItem20type], gPlayerData[playerid][pItem20]),
		ItemName(gPlayerData[playerid][pItem21type], gPlayerData[playerid][pItem21]), SlotParam6(playerid, 21), ItemWeight(gPlayerData[playerid][pItem21type], gPlayerData[playerid][pItem21]),
		ItemName(gPlayerData[playerid][pItem22type], gPlayerData[playerid][pItem22]), SlotParam6(playerid, 22), ItemWeight(gPlayerData[playerid][pItem22type], gPlayerData[playerid][pItem22]),
		ItemName(gPlayerData[playerid][pItem23type], gPlayerData[playerid][pItem23]), SlotParam6(playerid, 23), ItemWeight(gPlayerData[playerid][pItem23type], gPlayerData[playerid][pItem23]),
		ItemName(gPlayerData[playerid][pItem24type], gPlayerData[playerid][pItem24]), SlotParam6(playerid, 24), ItemWeight(gPlayerData[playerid][pItem24type], gPlayerData[playerid][pItem24]),
		ItemName(gPlayerData[playerid][pItem25type], gPlayerData[playerid][pItem25]), SlotParam6(playerid, 25), ItemWeight(gPlayerData[playerid][pItem25type], gPlayerData[playerid][pItem25]) );
		format(string2, sizeof(string2), "Moje itemy - waga ca³kowita %d/%d", PItemWeight(playerid), gPlayerData[playerid][pMaxWeight]);
		ShowPlayerDialog(playerid,DIALOG_ITEM_1,DIALOG_STYLE_LIST, string2, wstring, "Wybierz", "Zamknij");
	}
	gPreviousDialogList[playerid] = -1;
	return 1;
}

stock InsertItemToFactory( fID, itemid, value = 1 )
{
	switch( itemid )
	{
		case 43: 
		{
			DynamicFactions[fID][WFactoryAmmoPart1a] += value;
			SaveFData( fID, "WFactoryAmmoPart1a" );
		}
		case 44: 
		{
			DynamicFactions[fID][WFactoryAmmoPart2a] += value;
			SaveFData( fID, "WFactoryAmmoPart2a" );
		}
		case 45: 
		{
			DynamicFactions[fID][WFactoryAmmoPart3a] += value;
			SaveFData( fID, "WFactoryAmmoPart3a" );
		}
		case 46: 
		{
			DynamicFactions[fID][WFactoryAmmoPart4a] += value;
			SaveFData( fID, "WFactoryAmmoPart4a" );
		}
		case 47: 
		{
			DynamicFactions[fID][WFactoryAmmoPart1b] += value;
			SaveFData( fID, "WFactoryAmmoPart1b" );
		}
		case 48: 
		{
			DynamicFactions[fID][WFactoryPistolPart1] += value;
			SaveFData( fID, "WFactoryPistolPart1" );
		}
		case 49: 
		{
			DynamicFactions[fID][WFactoryPistolPart2] += value;
			SaveFData( fID, "WFactoryPistolPart2" );
		}
		case 50: 
		{
			DynamicFactions[fID][WFactoryPistolPart3] += value;
			SaveFData( fID, "WFactoryPistolPart3" );
		}
		case 51: 
		{
			DynamicFactions[fID][WFactoryPistolPart4] += value;
			SaveFData( fID, "WFactoryPistolPart4" );
		}
		case 52: 
		{
			DynamicFactions[fID][WFactoryPistolPart5] += value;
			SaveFData( fID, "WFactoryPistolPart5" );
		}
		case 53: 
		{
			DynamicFactions[fID][WFactoryRiflePart1] += value;
			SaveFData( fID, "WFactoryRiflePart1" );
		}
		case 54: 
		{
			DynamicFactions[fID][WFactoryRiflePart2] += value;
			SaveFData( fID, "WFactoryRiflePart2" );
		}
		case 55: 
		{
			DynamicFactions[fID][WFactoryRiflePart3] += value;
			SaveFData( fID, "WFactoryRiflePart3" );
		}
		case 56: 
		{
			DynamicFactions[fID][WFactoryRiflePart4] += value;
			SaveFData( fID, "WFactoryRiflePart4" );
		}
		case 57: 
		{
			DynamicFactions[fID][WFactoryRiflePart5] += value;
			SaveFData( fID, "WFactoryRiflePart5" );
		}
		case 58: 
		{
			DynamicFactions[fID][WFactoryRiflePart6] += value;
			SaveFData( fID, "WFactoryRiflePart6" );
		}
		case 59: 
		{
			DynamicFactions[fID][WFactoryPistolPart6] += value;
			SaveFData( fID, "WFactoryPistolPart6" );
		}
		case 60: 
		{
			DynamicFactions[fID][WFactoryRiflePart7] += value;
			SaveFData( fID, "WFactoryRiflePart7" );
		}
		case 61: 
		{
			DynamicFactions[fID][WFactoryPistolS1Part1] += value;
			SaveFData( fID, "WFactoryPistolS1Part1" );
		}
		case 62: 
		{
			DynamicFactions[fID][WFactoryPistolS1Part2] += value;
			SaveFData( fID, "WFactoryPistolS1Part2" );
		}
		case 63: 
		{
			DynamicFactions[fID][WFactoryPistolS1Part3] += value;
			SaveFData( fID, "WFactoryPistolS1Part3" );
		}
		case 64: 
		{
			DynamicFactions[fID][WFactoryPistolS2Part1] += value;
			SaveFData( fID, "WFactoryPistolS2Part1" );
		}
		case 65: 
		{
			DynamicFactions[fID][WFactoryPistolS2Part2] += value;
			SaveFData( fID, "WFactoryPistolS2Part2" );
		}
		case 66: 
		{
			DynamicFactions[fID][WFactoryPistolS2Part3] += value;
			SaveFData( fID, "WFactoryPistolS2Part3" );
		}
		case 67: 
		{
			DynamicFactions[fID][WFactoryPistolS3Part1] += value;
			SaveFData( fID, "WFactoryPistolS3Part1" );
		}
		case 68: 
		{
			DynamicFactions[fID][WFactoryPistolS3Part2] += value;
			SaveFData( fID, "WFactoryPistolS3Part2" );
		}
		case 69: 
		{
			DynamicFactions[fID][WFactoryPistolS3Part3] += value;
			SaveFData( fID, "WFactoryPistolS3Part3" );
		}
		case 70: 
		{
			DynamicFactions[fID][WFactoryPistolS3Part4] += value;
			SaveFData( fID, "WFactoryPistolS3Part4" );
		}
		case 71: 
		{
			DynamicFactions[fID][WFactoryRifleS1Part1] += value;
			SaveFData( fID, "WFactoryRifleS1Part1" );
		}
		case 72: 
		{
			DynamicFactions[fID][WFactoryRifleS1Part2] += value;
			SaveFData( fID, "WFactoryRifleS1Part2" );
		}
		case 73: 
		{
			DynamicFactions[fID][WFactoryRifleS2Part1] += value;
			SaveFData( fID, "WFactoryRifleS2Part1" );
		}
		case 74: 
		{
			DynamicFactions[fID][WFactoryRifleS2Part2] += value;
			SaveFData( fID, "WFactoryRifleS2Part2" );
		}
		case 75: 
		{
			DynamicFactions[fID][WFactoryRifleS2Part3] += value;
			SaveFData( fID, "WFactoryRifleS2Part3" );
		}
		case 76: 
		{
			DynamicFactions[fID][WFactoryRifleS3Part1] += value;
			SaveFData( fID, "WFactoryRifleS3Part1" );
		}
		case 77: 
		{
			DynamicFactions[fID][WFactoryRifleS3Part2] += value;
			SaveFData( fID, "WFactoryRifleS3Part2" );
		}
		case 78: 
		{
			DynamicFactions[fID][WFactoryRifleS3Part3] += value;
			SaveFData( fID, "WFactoryRifleS3Part3" );
		}
		case 79: 
		{
			DynamicFactions[fID][WFactoryRifleS3Part4] += value;
			SaveFData( fID, "WFactoryRifleS3Part4" );
		}
		case 80: 
		{
			DynamicFactions[fID][WFactoryRifleS6Part1] += value;
			SaveFData( fID, "WFactoryRifleS6Part1" );
		}
		case 81: 
		{
			DynamicFactions[fID][WFactoryRifleS6Part2] += value;
			SaveFData( fID, "WFactoryRifleS6Part2" );
		}
		case 82: 
		{
			DynamicFactions[fID][WFactoryTec9Part] += value;
			SaveFData( fID, "WFactoryTec9Part" );
		}
		case 83: 
		{
			DynamicFactions[fID][WFactoryMP5Part] += value;
			SaveFData( fID, "WFactoryMP5Part" );
		}
		case 84: 
		{
			DynamicFactions[fID][WFactoryAK47Part] += value;
			SaveFData( fID, "WFactoryAK47Part" );
		}
		case 85: 
		{
			DynamicFactions[fID][WFactoryM4Part] += value;
			SaveFData( fID, "WFactoryM4Part" );
		}
		case 86: 
		{
			DynamicFactions[fID][WFactoryShotPart] += value;
			SaveFData( fID, "WFactoryShotPart" );
		}
		case 87: 
		{
			DynamicFactions[fID][WFactoryDesEaglePart] += value;
			SaveFData( fID, "WFactoryDesEaglePart" );
		}
		case 88: 
		{
			DynamicFactions[fID][WFactoryRiflePart] += value;
			SaveFData( fID, "WFactoryRiflePart" );
		}
		case 89: 
		{
			DynamicFactions[fID][WFactorySniperPart] += value;
			SaveFData( fID, "WFactorySniperPart" );
		}
		case 90: 
		{
			DynamicFactions[fID][WFactoryAmmoPart2b] += value;
			SaveFData( fID, "WFactoryAmmoPart2b" );
		}
		case 91: 
		{
			DynamicFactions[fID][WFactoryAmmoPart3b] += value;
			SaveFData( fID, "WFactoryAmmoPart3b" );
		}
		case 92: 
		{
			DynamicFactions[fID][WFactoryAmmoPart4b] += value;
			SaveFData( fID, "WFactoryAmmoPart4b" );
		}
		case 93: 
		{
			DynamicFactions[fID][WFactoryAmmoPart1c] += value;
			SaveFData( fID, "WFactoryAmmoPart1c" );
		}
		case 94: 
		{
			DynamicFactions[fID][WFactoryAmmoPart2c] += value;
			SaveFData( fID, "WFactoryAmmoPart2c" );
		}
		case 95: 
		{
			DynamicFactions[fID][WFactoryAmmoPart3c] += value;
			SaveFData( fID, "WFactoryAmmoPart3c" );
		}
		case 96: 
		{
			DynamicFactions[fID][WFactoryAmmoPart4c] += value;
			SaveFData( fID, "WFactoryAmmoPart4c" );
		}
		case 97: 
		{
			DynamicFactions[fID][WFactoryAmmoPart1d] += value;
			SaveFData( fID, "WFactoryAmmoPart1d" );
		}
		case 98: 
		{
			DynamicFactions[fID][WFactoryAmmoPart2d] += value;
			SaveFData( fID, "WFactoryAmmoPart2d" );
		}
		case 99: 
		{
			DynamicFactions[fID][WFactoryAmmoPart3d] += value;
			SaveFData( fID, "WFactoryAmmoPart3d" );
		}
		case 100: 
		{
			DynamicFactions[fID][WFactoryAmmoPart4d] += value;
			SaveFData( fID, "WFactoryAmmoPart4d" );
		}
		case 101: 
		{
			DynamicFactions[fID][WFactoryAmmoPart1e] += value;
			SaveFData( fID, "WFactoryAmmoPart1e" );
		}
		case 102: 
		{
			DynamicFactions[fID][WFactoryAmmoPart2e] += value;
			SaveFData( fID, "WFactoryAmmoPart2e" );
		}
		case 103: 
		{
			DynamicFactions[fID][WFactoryAmmoPart3e] += value;
			SaveFData( fID, "WFactoryAmmoPart3e" );
		}
		case 104: 
		{
			DynamicFactions[fID][WFactoryAmmoPart4e] += value;
			SaveFData( fID, "WFactoryAmmoPart4e" );
		}
	}
}
